{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u6765\u5230Sakura-Ji\u7684\u4e2a\u4eba\u7f51\u7ad9","text":"<p>\u5173\u4e8e\u672c\u7ad9\u7684\u4f7f\u7528:</p> <ul> <li>PC\u7aef: \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0 \u5728\u672c\u7f51\u7ad9\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e<ul> <li>P + , : \u8f6c\u5230\u4e0a\u4e00\u7bc7\u6587\u7ae0</li> <li>N + . : \u8f6c\u5230\u4e0b\u4e00\u7bc7\u6587\u7ae0</li> <li>F + S + / : \u6253\u5f00\u641c\u7d22\u5bf9\u8bdd\u6846<ul> <li>Down , Up : \u9009\u62e9\u4e0b\u4e00\u4e2a/\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u5185\u5bb9</li> <li>Enter : \u6253\u5f00\u9009\u4e2d\u7684\u5185\u5bb9</li> <li>Esc : \u5173\u95ed\u641c\u7d22\u5bf9\u8bdd\u6846</li> </ul> </li> </ul> </li> <li> <p>\u79fb\u52a8\u7aef: \u70b9\u51fb\u5de6\u4e0a\u89d2 \u9177\u9177\u7684\u732b\u54aa \u56fe\u6807\u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0</p> </li> <li> <p>\u8bc4\u8bba: \u672c\u7f51\u7ad9\u4f7f\u7528Giscus\u4f5c\u4e3a\u8bc4\u8bba\u7cfb\u7edf\uff0c\u5982\u679c\u4f60\u6709Github\u8d26\u53f7\u7684\u8bdd\uff0c\u53ef\u4ee5\u548c\u6211\u4e92\u52a8\uff01\uff01\uff01</p> </li> </ul> <p>\u4f60\u597d\uff0c\u6211\u5c06\u5728\u8fd9\u91cc\u5206\u4eab\u6211\u7684\u7b14\u8bb0\u548c\u7ecf\u5386\uff0c\u5176\u76ee\u524d\u4e3b\u8981\u5206\u4e3a:</p> <p>\u5d4c\u5165\u5f0f\u7f16\u7a0b: stm32,C51,FreeRTOS\u7b49</p> <p>\u7f16\u7a0b\u8bed\u8a00: C,C++,python...</p> <p>Linux\u7cfb\u7edf: \u6307\u4ee4\uff0c\u9a71\u52a8\uff0c\u5185\u6838</p> <p>GodTool: Ubuntu,Vim,neovim,Github,Git,Markdown...</p> <p>\u601d\u7ef4\u5bfc\u56fe: Sakura_Ji--\u77e5\u8bc6\u6846\u67b6</p> <p>\u5174\u8da3\u7684\u91cd\u8981\u6027:</p> \u5174\u8da3\u7684\u91cd\u8981\u6027 <p>\u662f\u7684\uff0c\u5174\u8da3\u662f\u6700\u5927\u7684\u8001\u5e08\uff0c\u4e5f\u662f\u5174\u8da3\u4f7f\u7136\u624d\u8ba9\u6211\u5bf9Page\u4e2a\u4eba\u7f51\u7ad9\u4ea7\u751f\u4e86\u6781\u5927\u5174\u8da3\uff0c\u521a\u5f00\u59cb\u53ea\u662f\u5bf9VIM\u7684\u4f7f\u7528\u60f3\u53bb\u4e86\u89e3\uff0c \u4e3a\u4ec0\u4e48\u90a3\u4e48\u591a\u4eba\u5bf9VIM\u6781\u5176\u8ffd\u6367\uff0c\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u7f16\u8f91\u5668\u4e4b\u795e\uff0c\u4e5f\u7fa1\u6155\u90a3\u4e9b\u534e\u4e3d\u7684\u64cd\u4f5c\uff0c\u597d\u5e05\uff0c\u6b63\u597d\u901bB\u7ad9\uff0c\u770b\u5230\u4e86,TheCW \u7684\u89c6\u9891\uff0c\u597d\u9177\uff0c\u4e86\u89e3\u4e86.Vimrc\u662f\u5982\u4f55\u914d\u7f6e\u7684\uff0c\u5b66\u4e60\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u53c8\u770b\u5230\u4e86UP\u4e3b\u4f7f\u7528\u7684Markdown\u7684\u5b9e\u65f6\u9884\u89c8\u754c\u9762\uff0c \u54c7\u54e6\uff0c\u8fd8\u652f\u6301\u4efb\u4f55\u5730\u65b9\u53ef\u4ee5\u5bf9\u7b14\u8bb0\u8fdb\u884c\u5b9e\u65f6\u6d4f\u89c8\uff0c\u5e76\u4e14\u5728\u5b66\u4e60\u914d\u7f6e\u6587\u4ef6\u7684\u65f6\u5019\u4e86\u89e3\u4e86Github\u7684\u5f3a\u5927\u4e4b\u5904\uff0c\u5404\u79cd\u5f3a\u5927\u7684\u63d2\u4ef6\uff0c \u548c\u514d\u8d39\u7684\u8d44\u6e90\uff0c\u8ba9\u4f60\u65e0\u65f6\u65e0\u523b\u4e0d\u5728\u5b66\u4e60\uff0c\u7763\u4fc3\u4f60\u8fdb\u6b65\uff0c\u4e5f\u662f\u5728\u4e00\u76f4\u63a2\u7d22\u4e2d\uff0c\u53c8\u5728B\u7ad9\u770b\u5230\u4e86\uff0c\u6768\u58eb\u6770UP\u4e3b\u7684\u89c6\u9891\uff0c \u5b66\u4e60\u5230\u4e86\u5982\u4f55\u501f\u52a9github\u5efa\u7acb\u81ea\u5df1\u7684\u4e2a\u4eba\u7f51\u7ad9\uff0c\u975e\u5e38nice\uff0c\u8fd9\u6837\u6211\u5c31\u5728\u4e00\u6b21\u6b21\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u7cfb\u7edf\uff0c\u914d\u7f6eWSL\uff0c\u914d\u7f6eNeovim \u518d\u5230\u914d\u7f6e\u4f7f\u7528\u5f00\u7bb1\u5373\u7528\u7684Lunarvim\uff0c\u4e00\u6b65\u4e00\u6b65\u8d70\u8fc7\u53bb\uff0c\u65f6\u95f4\u5f88\u957f\uff0c\u4f46\u5f88\u5f00\u5fc3\uff0c\u73b0\u5728\u6b63\u5728\u4e86\u89e3\u4e91\u90e8\u7f72\uff0c\u548c\u4e91\u4e0a\u4f7f\u7528VScode\uff0c \u5f53\u7136\u6211\u4eec\u5f3a\u5927\u7684github\u4f7f\u7528<code>.</code>\u5c31\u53ef\u4ee5\u6253\u5f00\u7ba1\u7406\u6211\u4eec\u7684\u4e91\u4e0aVScode\u3002</p> <p>\u5728\u6b64\u7279\u522b\u611f\u8c22B\u7ad9\u5927\u795eTheCW,\u611f\u8c22\u5728\u5176\u5f15\u5bfc\u4e0b\u9010\u6b65\u5bf9Linux\u7cfb\u7edf\u8d8a\u6765\u8d8a\u559c\u6b22\u548c\u60f3\u4e86\u89e3\u4ee3\u7801\u7684\u4e16\u754c\u3002</p> <p></p>"},{"location":"EmbeddedSyS/Eintroduct/","title":"Embedded System","text":""},{"location":"EmbeddedSyS/C51/C51Introd/","title":"\u4ecb\u7ecdC51","text":""},{"location":"EmbeddedSyS/STM32/EXTI/","title":"\u5916\u90e8\u4e2d\u65ad","text":""},{"location":"EmbeddedSyS/STM32/EXTI/#_2","title":"\u524d\u8a00","text":""},{"location":"EmbeddedSyS/STM32/EXTI/#_3","title":"\u4ec0\u4e48\u662f\u4e2d\u65ad","text":"<p>\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u7279\u5b9a\u7684\u4e2d\u65ad\u89e6\u53d1\u6761\u4ef6\uff08\u4e2d\u65ad\u6e90\uff09\uff0c\u4f7f\u5f97CPU\u6682\u505c\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u8f6c\u800c\u53bb\u5904\u7406\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u5904\u7406\u5b8c\u6210\u540e\u53c8\u8fd4\u56de\u539f\u6765\u88ab\u6682\u505c\u7684\u4f4d\u7f6e\u7ee7\u7eed\u8fd0\u884c\u3002\u5728STM32\u4e2d\u670968\u4e2a\u53ef\u5c4f\u853d\u4e2d\u65ad\u901a\u9053\uff1a\u5305\u542bEXTI\u3001TIM\u3001ADC\u3001USART\u3001SPI\u3001I2C\u3001RTC\u7b49\u591a\u4e2a\u5916\u8bbe</p> <p></p>"},{"location":"EmbeddedSyS/STM32/EXTI/#_4","title":"\u5916\u90e8\u4e2d\u65ad\u7684\u7406\u8bba\u601d\u7ef4\u6b65\u9aa4","text":"<p>1.STM32CPU\u4f7f\u7528 NVIC(\u5d4c\u5957\u5411\u91cf\u4e2d\u65ad\u63a7\u5236\u5668) \u7edf\u4e00\u7ba1\u7406\u4e2d\u65ad</p> <p></p> <p>\u6bcf\u4e2a\u4e2d\u65ad\u901a\u9053\u90fd\u62e5\u670916\u4e2a\u53ef\u7f16\u7a0b\u7684\u4f18\u5148\u7b49\u7ea7(\u6bcf\u4e2a\u4e2d\u65ad\u6e90\u53ef\u4ee5\u88ab\u5206\u914d\u7684\u4f18\u5148\u7ea7\u7ea7\u522b\u4e2a\u6570)\uff0c\u53ef\u5bf9\u4f18\u5148\u7ea7\u8fdb\u884c\u5206\u7ec4\uff0c\u8fdb\u4e00\u6b65\u8bbe\u7f6e\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7</p> <ul> <li> <p>NVIC\u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u7531 \u4f18\u5148\u7ea7\u5bc4\u5b58\u5668\u76844\u4f4d\uff080~15\uff09\u51b3\u5b9a\uff0c\u8fd94\u4f4d\u53ef\u4ee5\u8fdb\u884c\u5207\u5206\uff0c\u5206\u4e3a\u9ad8 x \u4f4d\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u4f4e 4-x \u4f4d\u7684\u54cd\u5e94\u4f18\u5148\u7ea7</p> </li> <li> <p>\u62a2\u5360\u4f18\u5148\u7ea7\u9ad8\u7684\u53ef\u4ee5\u4e2d\u65ad\u5d4c\u5957\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7\u9ad8\u7684\u53ef\u4ee5\u4f18\u5148\u6392\u961f\uff0c\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u5747\u76f8\u540c\u7684\u6309\u4e2d\u65ad\u53f7\u6392\u961f</p> </li> </ul> \u7ec4 AIRCR[10 : 8] IP bit[7 : 4] \u5206\u914d\u60c5\u51b5 \u5206\u914d\u7ed3\u679c 0 111 0\uff1a4 0\u4f4d\u62a2\u5360\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0) \uff0c    4\u4f4d\u54cd\u5e94\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~15) 1 110 1\uff1a3 1\u4f4d\u62a2\u5360\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~1) \uff0c3\u4f4d\u54cd\u5e94\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~7) 2 101 2\uff1a2 2\u4f4d\u62a2\u5360\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~3) \uff0c2\u4f4d\u54cd\u5e94\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~3) 3 100 3\uff1a1 3\u4f4d\u62a2\u5360\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~7) \uff0c1\u4f4d\u54cd\u5e94\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~1) 4 011 4\uff1a0 4\u4f4d\u62a2\u5360\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0~15) \uff0c0\u4f4d\u54cd\u5e94\u4f18\u5148\u7ea7(\u53d6\u503c\u4e3a0) <p>\u62a2\u5360\u4f18\u5148\u7ea7\u4e0e\u54cd\u5e94\u4f18\u5148\u7ea7\u7684\u57fa\u672c\u6982\u5ff5\uff1a</p> <ol> <li>\u9ad8\u4f18\u5148\u7ea7\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u662f\u53ef\u4ee5\u6253\u65ad\u6b63\u5728\u8fdb\u884c\u7684\u4f4e\u62a2\u5360\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684</li> <li>\u62a2\u5360\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4e2d\u65ad\uff0c\u9ad8\u54cd\u5e94\u4f18\u5148\u7ea7\u4e0d\u53ef\u4ee5\u6253\u65ad\u4f4e\u54cd\u5e94\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad</li> <li>\u62a2\u5360\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4e2d\u65ad\uff0c\u5f53\u4e24\u4e2a\u4e2d\u65ad\u540c\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u4e0b\uff0c\u54ea\u4e2a\u54cd\u5e94\u4f18\u5148\u7ea7\u9ad8\uff0c\u54ea\u4e2a\u5148\u6267\u884c</li> <li>\u5982\u679c\u4e24\u4e2a\u4e2d\u65ad\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u90fd\u662f\u4e00\u6837\u7684\u8bdd\uff0c\u540c\u65f6\u53d1\u751f\uff0c\u5219\u6839\u636e\u4ed6\u4eec\u5728\u4e2d\u65ad\u8868\u4e2d\u7684\u6392\u4f4d\u987a    \u5e8f\u51b3\u5b9a\u5148\u5904\u7406\u90a3\u4e00\u4e2a\uff1b\u5148\u540e\u7684\u8bdd\uff0c\u5219\u6839\u636e\u5148\u6765\u540e\u5230</li> <li>\u4f18\u5148\u7ea7\u6570\u5b57\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u5148\u88ab\u6267\u884c</li> </ol> <p>NVIC\u7684\u521d\u59cb\u5316\u4e2d\u5206\u7ec4\u4ee5\u53ca\u8bbe\u7f6e\u4f18\u5148\u7ea7\u7684\u6982\u5ff5\uff08\u4e3e\u4f8b\uff09\uff1a</p> <p>1.\u8bbe\u7f6e \u5206\u7ec42\uff0c\u8bbe\u7f6e0-3\u4e3a\u62a2\u5360\u4f18\u5148\u7ea7\uff0c0-3\u4e3a\u54cd\u5e94\u4f18\u5148\u7ea7\u3002</p> <p>2.\u5206\u7ec4\u540e\uff0c\u6709\u62a2\u5360\u4f18\u5148\u7ea7\u901a\u90534\u4e2a\uff0c\u5206\u522b\u4e3a0\uff0c1\uff0c2\uff0c3.</p> <p>3.\u6bcf\u4e2a\u62a2\u5360\u4f18\u5148\u7ea7\u901a\u9053\u67094\u4e2a\u54cd\u5e94\u4f18\u5148\u7ea7\u7684\u901a\u9053\uff0c\u5206\u522b\u4e3a0\uff0c1\uff0c2\uff0c3\u3002</p> <p>2. STM32 \u7684\u6bcf\u4e2aGPIO\u7aef\u53e3\u90fd\u53ef\u4ee5\u4f5c\u4e3a \u5916\u90e8\u4e2d\u65ad(EXTI)  \u7684\u4e2d\u65ad\u8f93\u5165\u53e3</p> <p>\u6240\u6709\u7aef\u53e3\u90fd\u6709\u5916\u90e8\u4e2d\u65ad\u80fd\u529b\u3002\u4e3a\u4e86\u4f7f\u7528\u5916\u90e8\u4e2d\u65ad\u7ebf\uff0c\u7aef\u53e3\u5fc5\u987b\u914d\u7f6e\u6210\u8f93\u5165\u6a21\u5f0f --&gt; \u300aSTM32\u4e2d\u6587\u53c2\u8003\u624b\u518c\u300b8.1.3\u8282</p> <p></p> <p>3. \u6bcf\u4e2a\u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u7ebf(EXTI1~EXTI15)\u4e0a\u5bf9\u5e94\u4e86 P(A0~G0) \u00b7\u00b7\u00b7\u00b7 P(A15~G15)\u4e2d\u7684 7\u4e2aIO \u53e3(A~G),EXTI\u4e2d\u65ad\u7ebf\u6bcf\u6b21\u53ea\u80fd\u8fde\u63a5\u5230 1 \u4e2a IO \u53e3\u4e0a</p> <p></p> <p>4. \u9700\u8981\u901a\u8fc7\u914d\u7f6e AFIO_EXTICRx \u5bc4\u5b58\u5668\u7684EXTIx[3:0]\u6765\u51b3\u5b9a \u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u7ebf(EXTI1~EXTI15)  \u914d\u7f6e\u5230\u54ea\u4e2a GPIO\u5f15\u811a \u4e0a(x=1~4)</p> <p></p> <p>5. \u901a\u8fc7AFIO_EXTICRx\u914d\u7f6eGPIO\u7ebf\u4e0a\u7684\u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\uff0c\u5fc5\u987b\u5148==\u4f7f\u80fdAFIO\u65f6\u949f==\uff0cAFIO\u65f6\u949f\u5728APB2\u7ebf\u4e0a</p> <p>\u901a\u8fc7\u5bf9\u4e2d\u65ad\u7406\u8bba\u6b65\u9aa4\u7684 \u5012\u53d9 \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u8df5\u51fa \u5916\u90e8\u4e2d\u65adEXTI \u7684\u8fc7\u7a0b</p> <p></p>"},{"location":"EmbeddedSyS/STM32/EXTI/#_5","title":"\u5916\u90e8\u4e2d\u65ad\u4e2d\u6709\u4ec0\u4e48","text":"<ul> <li>NVIC(\u5d4c\u5957\u5411\u91cf\u4e2d\u65ad\u63a7\u5236\u5668): CPU\u7684\u5c0f\u52a9\u624b\uff0c\u5e2e\u52a9\u63a7\u5236\u7740\u82af\u7247\u7684\u4e2d\u65ad\u76f8\u5173\u529f\u80fd</li> <li>\u4e2d\u65ad\u4f18\u5148\u7ea7\uff1a\u5f53\u6709\u591a\u4e2a\u4e2d\u65ad\u6e90\u540c\u65f6\u7533\u8bf7\u4e2d\u65ad\u65f6\uff0cCPU\u4f1a\u6839\u636e\u4e2d\u65ad\u6e90\u7684\u8f7b\u91cd\u7f13\u6025\u8fdb\u884c\u88c1\u51b3\uff0c\u4f18\u5148\u54cd\u5e94\u66f4\u52a0\u7d27\u6025\u7684\u4e2d\u65ad\u6e90</li> <li>\u4e2d\u65ad\u5d4c\u5957\uff1a\u5f53\u4e00\u4e2a\u4e2d\u65ad\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u53c8\u6709\u65b0\u7684\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u6e90\u7533\u8bf7\u4e2d\u65ad\uff0cCPU\u518d\u6b21\u6682\u505c\u5f53\u524d\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u8f6c\u800c\u53bb\u5904\u7406\u65b0\u7684\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u5904\u7406\u5b8c\u6210\u540e\u4f9d\u6b21\u8fdb\u884c\u8fd4\u56de</li> <li>EXTI(\u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u63a7\u5236\u5668)\uff1a\u5bf9\u8bf7\u6c42\u4e2d\u65ad\u7684\u8f93\u5165\u7ebf\u8fdb\u884c\u914d\u7f6e</li> <li>AFIO(\u590d\u7528\u529f\u80fdI/O\u548c\u8c03\u8bd5\u914d\u7f6e)\uff1a\u5bf9GPIO\u8bbe\u7f6e\u6210\u8f93\u5165\u4e2d\u65ad\u529f\u80fd</li> <li>GPIO(\u901a\u7528\u8f93\u5165\u8f93\u51faIO\u53e3)\uff1a\u4e0e\u5916\u90e8\u786c\u4ef6\u8bbe\u5907\u8fde\u63a5</li> </ul>"},{"location":"EmbeddedSyS/STM32/EXTI/#_6","title":"\u4e2d\u65ad\u8bbe\u7f6e\u5b8c\u4e86\uff0c\u5982\u4f55\u4f7f\u7528\u4e2d\u65ad","text":"<p>\u5728STM32\u4e2d\uff0c\u4e2d\u65ad\u51fd\u6570\u7684\u540d\u5b57\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u6bcf\u4e2a\u4e2d\u65ad\u901a\u9053\u90fd\u5bf9\u5e94\u4e00\u4e2a\u4e2d\u65ad\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u542f\u52a8\u6587\u4ef6<code>startup_stm32f10x_md.s</code>\u4e2d\u7684\u4e2d\u65ad\u5411\u91cf\u8868\u4e2d\u67e5\u627e\u5176\u540d\u5b57</p> <pre><code>/*\n  \u4e2d\u65ad\u51fd\u6570\u4e0d\u9700\u8981\u5728.h\u6587\u4ef6\u4e2d\u58f0\u660e \u56e0\u4e3a\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6267\u884c\u7684\n  \u4e2d\u65ad\u51fd\u6570\u4e2d\u4e00\u822c\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u65ad\u5224\u65ad\u6807\u5fd7\u4f4d\uff0c\u4ee5\u786e\u4fdd\u662f\u6211\u4eec\u60f3\u8981\u7684\u4e2d\u65ad\u6e90\u89e6\u53d1\u7684\u8fd9\u4e2a\u51fd\u6570\n  \u5728\u4e2d\u65ad\u7a0b\u5e8f\u7ed3\u675f\u540e\u4e00\u5b9a\u8981\u6e05\u7406\u4e2d\u65ad\u51fd\u6570\u6807\u5fd7\u4f4d \u5426\u5219\u5982\u679c\u4e2d\u65ad\u6807\u5fd7\u4f4d\u7f6e\u4f9d\u65e7\u662f1 \u7cfb\u7edf\u5c31\u4f1a\u4e00\u76f4\u8c03\u7528\u8fd9\u4e2a\u4e2d\u65ad\u51fd\u6570\n*/\nvoid EXTI15_10_IRQHandler(void) //\u4e2d\u65ad\u51fd\u6570\u90fd\u662f\u65e0\u53c2\u65e0\u8fd4\u56de\u503c\u7684\n{\nif(EXTI_GetITStatus(EXTI_Line14) == SET)//\u5224\u65ad\u4e2d\u65ad\u6807\u5fd7\u4f4d\n{\nEXTI_ClearITPendingBit(EXTI_Line14);//\u6e05\u7406\u4e2d\u65ad\u51fd\u6570\u6807\u5fd7\u4f4d\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#NVIC","title":"NVIC (\u5d4c\u5957\u5411\u91cf\u4e2d\u65ad\u63a7\u5236\u5668)","text":"<p>\u5d4c\u5957\u5411\u91cf\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u63a7\u5236\u7740\u6574\u4e2a\u82af\u7247\u4e2d\u65ad\u76f8\u5173\u7684\u529f\u80fd\uff0c\u662fCortex-M3\u5185\u6838\u91cc\u9762\u7684\u4e00\u4e2a\u5916\u8bbe</p>"},{"location":"EmbeddedSyS/STM32/EXTI/#EXTI","title":"EXTI (\u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u63a7\u5236\u5668)","text":"<p>STM32F10x\u5916\u90e8\u4e2d\u65ad/\u4e8b\u4ef6\u63a7\u5236\u5668\uff08EXTI\uff09\u5305\u542b 20 \u4e2a\u7528\u4e8e\u4ea7\u751f\u4e8b\u4ef6/\u4e2d\u65ad\u8bf7\u6c42\u7684\u8fb9\u6cbf\u68c0\u6d4b\u5668\u3002EXTI\u7684\u6bcf\u6839\u8f93\u5165\u7ebf\u90fd\u53ef\u5355\u72ec\u8fdb\u884c\u914d\u7f6e\uff0c\u4ee5\u9009\u62e9\u7c7b\u578b\uff08\u4e2d\u65ad\u6216\u4e8b\u4ef6\uff09\u548c\u76f8\u5e94\u7684\u89e6\u53d1\u4e8b\u4ef6\uff08\u4e0a\u5347\u6cbf\u89e6\u53d1\u3001\u4e0b\u964d\u6cbf\u89e6\u53d1\u6216\u8fb9\u6cbf\u89e6\u53d1\uff09\uff0c\u8fd8\u53ef\u72ec\u7acb\u5730\u88ab\u5c4f\u853d</p>"},{"location":"EmbeddedSyS/STM32/EXTI/#AFIO","title":"AFIO (\u590d\u7528\u529f\u80fdI/O\u548c\u8c03\u8bd5\u914d\u7f6e)","text":"<p>\u5728STM32\u4e2d\uff0cAFIO\u4e3b\u8981\u5b8c\u6210\u4e24\u4e2a\u4efb\u52a1\uff1a</p> <ul> <li>\u590d\u7528\u529f\u80fd\u5f15\u811a\u91cd\u6620\u5c04</li> <li>\u4e2d\u65ad\u5f15\u811a\u9009\u62e9</li> </ul>"},{"location":"EmbeddedSyS/STM32/EXTI/#_7","title":"\u5916\u90e8\u4e2d\u65ad\u7684\u5b9e\u6218\u5e94\u7528","text":""},{"location":"EmbeddedSyS/STM32/EXTI/#_8","title":"\u57fa\u4e8e\u7ea2\u5916\u5bf9\u5c04\u6a21\u5757\u7684\u8ba1\u6570\u5668","text":"<p>\u7ea2\u5916\u5bf9\u5c04\u6a21\u5757\uff1a</p> <p>\u63a5\u597dVCC\u548cGND\uff0c\u6a21\u5757\u7535\u6e90\u6307\u793a\u706f\u4f1a\u4eae\uff0c\u6a21\u5757\u69fd\u4e2d\u65e0\u906e\u6321\u65f6\uff0c\u63a5\u6536\u7ba1\u5bfc\u901a\uff0c\u6a21\u5757D0\u8f93\u51fa\u4f4e\u7535\u5e73\uff0c\u5f00\u5173\u6307\u793a\u706f\u4eae\uff0c\u906e\u6321\u65f6\uff0cDO\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u5f00\u5173\u6307\u793a\u706f\u706d\u3002\u6a21\u5757D0\u53ef\u4e0e\u7ee7\u7535\u5668\u76f8\u8fde\uff0c\u7ec4\u6210\u9650\u4f4d\u5f00\u5173\u7b49\u529f\u80fd\uff0c\u4e5f\u53ef\u4ee5\u4e0e\u6709\u6e90\u8702\u9e23\u5668\u6a21\u5757\u76f8\u8fde\uff0c\u7ec4\u6210\u62a5\u8b66\u5668\u3002D0\u8f93\u51fa\u63a5\u53e3\u53ef\u4ee5\u4e0e\u5355\u7247\u673a10\u53e3\u76f4\u63a5\u76f8\u8fde\uff0c\u4e00\u822c\u63a5\u5916\u90e8\u4e2d\u65ad\uff0c\u68c0\u6d4b\u4f20\u611f\u5668\u662f\u5426\u6709\u906e\u6863\uff0c\u5982\u7528\u7535\u673a\u7801\u76d8\u5219\u53ef\u68c0\u6d4b\u7535\u673a\u7684\u8f6c\u901f\u3002</p> <p><code>IRED.h</code></p> <pre><code>#ifndef  __IRED_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __IRED_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\nvoid IRED_Init(void);\nuint16_t CountSensor_Get(void);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>IRED.c</code></p> <pre><code>#include \"IRED.h\"\nuint16_t CountSensor_Count;\nvoid IRED_Init(void)\n{\n//1.\u5f00\u542f\u76f8\u5173\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);//\u7ea2\u5916\u5bf9\u5c04\u4f20\u611f\u5668\u6240\u5728\u7684GPIOB\u65f6\u949f\u6253\u5f00\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);//\u6253\u5f00\u7aef\u53e3\u590d\u7528AFIO\u65f6\u949f --&gt; \u662f\u4e3a\u4e86\u4e2d\u65ad\u5f15\u811a\u9009\u62e9\n//2.\u521d\u59cb\u5316IO\u53e3\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_14;//\u8bbe\u7f6ePA1,PA2\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u4e3a\u4e0a\u62c9\u8f93\u5165\uff08\u5176\u4ed6\u6a21\u5f0f\u8f93\u5165\u90fd\u53ef\uff09\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\uff08\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\uff09\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n//3.\u521d\u59cb\u5316AFIO--&gt;\u786e\u5b9a\u4e2d\u65ad\u5f15\u811a\nGPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource14);//\u4f7f\u7528AFIO \u914d\u7f6e\u4e2d\u65ad\u5f15\u811a\u7684\u9009\u62e9 GPIOB--&gt;Pin14\n//4.\u914d\u7f6eEXTI\u5916\u90e8\u4e2d\u65ad\u5bc4\u5b58\u5668\nEXTI_InitTypeDef EXTI_InitStructure; EXTI_InitStructure.EXTI_Line = EXTI_Line14; // GPIOB Pin14 \u6240\u4ee5\u9009\u62e9\u7b2c14\u6761EXTI\u4e2d\u65ad\u7ebf --&gt; \u8fde\u63a5\u5916\u90e8\u4e2d\u65ad\u7ebf\u4e0a\nEXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;//\u6a21\u5f0f\u9009\u62e9 \u5916\u90e8\u4e2d\u65ad\n/*\n  \u5728\u672c\u4f8b\u7a0b\u4e2d \u4e0d\u906e\u6321 --&gt; \u906e\u6321 \u4e0a\u5347\u6cbf \uff1b\n           \u906e\u6321 --&gt; \u4e0d\u906e\u6321 \u4e0b\u964d\u6cbf\n  */\nEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling; //\u9009\u62e9\u4e0b\u964d\u6cbf\u89e6\u53d1 --&gt; \u5f53\u8fd9\u4e2aGPIOB Pin14\u53e3\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u65f6 \u5c31\u4f1a\u89e6\u53d1\u4e2d\u65ad --&gt; \u8fdb\u5165\u4e2d\u65ad\u51fd\u6570\n// \u5982\u679c\u9009\u62e9 \u4e0a\u5347\u548c\u4e0b\u964d\u90fd\u89e6\u53d1 \u5219\u906e\u6321\u548c\u79fb\u5f00\u65f6\u90fd\u52a0\u4e00\nEXTI_InitStructure.EXTI_LineCmd = ENABLE; //\u5b9a\u4e49\u9009\u4e2d\u7ebf\u7684\u72b6\u6001--&gt;\u5f00\u542f\nEXTI_Init(&amp;EXTI_InitStructure); //\u521d\u59cb\u5316EXTI\n//5. \u914d\u7f6eNVIC\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//\u8fdb\u884c\u5206\u7ec4 --&gt;\u6574\u4e2a\u82af\u7247(\u4e00\u4e2a\u9879\u76ee\u4e2d)\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u4e2d\u65ad\u5206\u7ec4 \u53ef\u4ee5\u653e\u5230\nNVIC_InitTypeDef NVIC_InitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\nNVIC_InitStructure.NVIC_IRQChannel = EXTI15_10_IRQn; //\u6839\u636e\u4e0a\u9762\u7684\u6211\u4eec\u6240\u9009\u53d6\u7684GPIO--&gt;Pin14\u5728\u4e2d\u65ad\u901a\u9053\u7684EXTI14 \u6240\u4ee5\u8fd9\u91cc\u9009\u62e9 EXTI15_10_IRQn\n/*\n  \u4ece\u4e0a\u9762\u7684\u5206\u7ec4\u4e2d\u53ef\u77e5 \u6211\u4eec\u9009\u5219\u7684\u662f \u62a2\u53602\u4f4d \u548c \u54cd\u5e942\u4f4d\n  \u62a2\u5360\u53ef\u4ee5\u4ece 0~3 \u8fdb\u884c\u9009\u62e9 \u54cd\u5e94\u4e5f\u53ef\u4ee5\u4ece 0~3 \u8fdb\u884c\u9009\u62e9\n  \u6211\u4eec\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a\u4e2d\u65ad \u6240\u4ee5\u53ef\u4ee5\u968f\u610f\u8bbe\u7f6e\u8fd9\u4e2a\u6a21\u5757\u4e2d\u7684\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7 \u4f8b\u5982 \u62a2\u5360 \u4f4d\u4e8e\u7b2c\u4e00\u4f4d / \u54cd\u5e94 \u552f\u4e00\u7b2c\u4e00\u4f4d \n  1. \u9ad8\u4f18\u5148\u7ea7\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u662f\u53ef\u4ee5\u6253\u65ad\u6b63\u5728\u8fdb\u884c\u7684\u4f4e\u62a2\u5360\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684\n  2. \u62a2\u5360\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4e2d\u65ad\uff0c\u9ad8\u54cd\u5e94\u4f18\u5148\u7ea7\u4e0d\u53ef\u4ee5\u6253\u65ad\u4f4e\u54cd\u5e94\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\n  3. \u62a2\u5360\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u4e2d\u65ad\uff0c\u5f53\u4e24\u4e2a\u4e2d\u65ad\u540c\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u4e0b\uff0c\u54ea\u4e2a\u54cd\u5e94\u4f18\u5148\u7ea7\u9ad8\uff0c\u54ea\u4e2a\u5148\u6267\u884c\n  4. \u5982\u679c\u4e24\u4e2a\u4e2d\u65ad\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u90fd\u662f\u4e00\u6837\u7684\u8bdd\uff0c\u540c\u65f6\u53d1\u751f\uff0c\u5219\u6839\u636e\u4ed6\u4eec\u5728\u4e2d\u65ad\u8868\u4e2d\u7684\u6392\u4f4d\u987a\u5e8f\u51b3\u5b9a\u5148\u5904\u7406\u90a3\u4e00\u4e2a\uff1b\u5148\u540e\u7684\u8bdd\uff0c\u5219\u6839\u636e\u5148\u6765\u540e\u5230\n  5. \u4f18\u5148\u7ea7\u6570\u5b57\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u8d8a\u5148\u88ab\u6267\u884c\n   ==\u300b\u62a2\u5360 0 \u54cd\u5e94 0\n   ==\u300b\u62a2\u5360 0 \u54cd\u5e94 1\n   ==\u300b\u62a2\u5360 0 \u54cd\u5e94 2\n   ==\u300b\u62a2\u5360 0 \u54cd\u5e94 3\n  */\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;//\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u62a2\u5360 1\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; //\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u54cd\u5e941\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //\u4f7f\u80fd\u6307\u5b9a\u7684\u4e2d\u65ad\u901a\u9053\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nNVIC_Init(&amp;NVIC_InitStructure);\n}\n/*\n  \u4e2d\u65ad\u51fd\u6570\u4e0d\u9700\u8981\u5728.h\u6587\u4ef6\u4e2d\u58f0\u660e \u56e0\u4e3a\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6267\u884c\u7684\n  \u4e2d\u65ad\u51fd\u6570\u4e2d\u4e00\u822c\u5148\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u65ad\u5224\u65ad\u6807\u5fd7\u4f4d\uff0c\u4ee5\u786e\u4fdd\u662f\u6211\u4eec\u60f3\u8981\u7684\u4e2d\u65ad\u6e90\u89e6\u53d1\u7684\u8fd9\u4e2a\u51fd\u6570\n  \u5728\u4e2d\u65ad\u7a0b\u5e8f\u7ed3\u675f\u540e\u4e00\u5b9a\u8981\u6e05\u7406\u4e2d\u65ad\u51fd\u6570\u6807\u5fd7\u4f4d \u56e0\u4e3a\u53ea\u6709\u4e2d\u65ad\u6807\u5fd7\u4f4d\u7f6e1 \u4ed6\u5c31\u4f1a\u4e00\u76f4\u8c03\u7528\u4e2d\u65ad\u51fd\u6570\n*/\nvoid EXTI15_10_IRQHandler(void) //\u4e2d\u65ad\u51fd\u6570\u90fd\u662f\u65e0\u53c2\u65e0\u8fd4\u56de\u503c\u7684\n{\nif(EXTI_GetITStatus(EXTI_Line14) == SET)\n{\nCountSensor_Count++;//\u5bf9\u5c04\u89e6\u53d1\u4e00\u6b21\uff0c\u5c31\u8fdb\u5165\u4e00\u6b21\u4e2d\u65ad \u6b21\u6570\u52a0\u4e00\nEXTI_ClearITPendingBit(EXTI_Line14);\n}\n}\nuint16_t CountSensor_Get(void)\n{\nreturn CountSensor_Count;\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"OLED.h\"\n#include \"IRED.h\"\nint main(void)\n{\nOLED_Init();\nIRED_Init();\nOLED_ShowString(1,1,\"Count:\");\nwhile(1)\n{\nOLED_ShowNum(1,7,CountSensor_Get(),4);\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#_9","title":"\u57fa\u4e8e\u65cb\u8f6c\u7f16\u7801\u5668\u6a21\u5757\u7684\u8ba1\u6570\u5668","text":"<p>\u65cb\u8f6c\u7f16\u7801\u5668\uff1a\u7528\u6765\u6d4b\u91cf\u4f4d\u7f6e\u3001\u901f\u5ea6\u6216\u65cb\u8f6c\u65b9\u5411\u7684\u88c5\u7f6e\uff0c\u5f53\u5176\u65cb\u8f6c\u8f74\u65cb\u8f6c\u65f6\uff0c\u5176\u8f93\u51fa\u7aef\u53ef\u4ee5\u8f93\u51fa\u4e0e\u65cb\u8f6c\u901f\u5ea6\u548c\u65b9\u5411\u5bf9\u5e94\u7684\u65b9\u6ce2\u4fe1\u53f7\uff0c\u8bfb\u53d6\u65b9\u6ce2\u4fe1\u53f7\u7684\u9891\u7387\u548c\u76f8\u4f4d\u4fe1\u606f\u5373\u53ef\u5f97\u77e5\u65cb\u8f6c\u8f74\u7684\u901f\u5ea6\u548c\u65b9\u5411</p> <p>\u7c7b\u578b\uff1a\u673a\u68b0\u89e6\u70b9\u5f0f/\u970d\u5c14\u4f20\u611f\u5668\u5f0f/\u5149\u6805\u5f0f</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"EmbeddedSyS/STM32/EXTI/#_10","title":"\u76f8\u5173\u5e93\u51fd\u6570","text":"<p>Table 1. NVIC \u5e93\u51fd\u6570 </p> \u51fd\u6570\u540d \u63cf\u8ff0 NVIC_DeInit \u5c06\u5916\u8bbe  NVIC \u5bc4\u5b58\u5668\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c NVIC_PriorityGroupConfig \u8bbe\u7f6e\u4f18\u5148\u7ea7\u5206\u7ec4\uff1a\u5148\u5360\u4f18\u5148\u7ea7\u548c\u4ece\u4f18\u5148\u7ea7 NVIC_Init \u6839\u636e  NVIC_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe NVIC \u5bc4\u5b58\u5668 NVIC_SystemLPConfig \u9009\u62e9\u7cfb\u7edf\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\u7684\u6761\u4ef6 NVIC_SetVectorTable \u8bbe\u7f6e\u5411\u91cf\u8868\u7684\u4f4d\u7f6e\u548c\u504f\u79fb"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_prioritygroupconfig","title":"\u51fd\u6570NVIC_PriorityGroupConfig","text":"<p>Table 2. \u51fd\u6570 NVIC_PriorityGroupConfig </p> \u51fd\u6570\u540d NVIC_PriorityGroupConfig \u51fd\u6570\u539f\u5f62 void NVIC_PriorityGroupConfig(u32  NVIC_PriorityGroup) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e\u4f18\u5148\u7ea7\u5206\u7ec4\uff1a\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7 \u8f93\u5165\u53c2\u6570 NVIC_PriorityGroup\uff1a\u4f18\u5148\u7ea7\u5206\u7ec4\u4f4d\u957f\u5ea6   \u53c2\u9605  Section\uff1aNVIC_PriorityGroup \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u4f18\u5148\u7ea7\u5206\u7ec4\u53ea\u80fd\u8bbe\u7f6e\u4e00\u6b21 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>NVIC_PriorityGroup \u8be5\u53c2\u6570\u8bbe\u7f6e\u4f18\u5148\u7ea7\u5206\u7ec4\u4f4d\u957f\u5ea6</p> <p>Table 3. NVIC_PriorityGroup \u503c </p> NVIC_PriorityGroup \u63cf\u8ff0 NVIC_PriorityGroup_0 \u62a2\u5360\u4f18\u5148\u7ea7 0 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  4 \u4f4d NVIC_PriorityGroup_1 \u62a2\u5360\u4f18\u5148\u7ea7 1 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  3 \u4f4d NVIC_PriorityGroup_2 \u62a2\u5360\u4f18\u5148\u7ea7 2 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  2 \u4f4d NVIC_PriorityGroup_3 \u62a2\u5360\u4f18\u5148\u7ea7 3 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  1 \u4f4d NVIC_PriorityGroup_4 \u62a2\u5360\u4f18\u5148\u7ea7 4 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  0 \u4f4d <p>\u51fd\u6570\u539f\u578b\uff1a</p> \u51fd\u6570\u539f\u578b<pre><code>/**\n  * @brief  Configures the priority grouping: pre-emption priority and subpriority.\n  * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. \n  *   This parameter can be one of the following values:\n  *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority\n  *                                4 bits for subpriority\n  *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority\n  *                                3 bits for subpriority\n  *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority\n  *                                2 bits for subpriority\n  *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority\n  *                                1 bits for subpriority\n  *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority\n  *                                0 bits for subpriority\n  * @retval None\n  */\nvoid NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)\n{\n/* Check the parameters */\nassert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));\n/* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */\nSCB-&gt;AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;\n}\n</code></pre> <p>\u4f8b\uff1a </p> \u4f8b<pre><code>/* Configure the Priority Grouping with 1 bit */ NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_init","title":"\u51fd\u6570NVIC_Init","text":"<p>Table 4. \u51fd\u6570 NVIC_Init </p> \u51fd\u6570\u540d NVIC_Init \u51fd\u6570\u539f\u5f62 void NVIC_Init(NVIC_InitTypeDef*  NVIC_InitStruct) \u529f\u80fd\u63cf\u8ff0 \u6839\u636e  NVIC_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe NVIC \u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570 NVIC_InitStruct\uff1a\u6307\u5411\u7ed3\u6784 NVIC_InitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86\u5916\u8bbe GPIO \u7684\u914d\u7f6e\u4fe1\u606f\u53c2\u9605  Section\uff1aNVIC_InitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>NVIC_InitTypeDef structure </p> <pre><code>NVIC_InitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6\u201cstm32f10x_nvic.h\u201d\uff1a typedef struct { u8 NVIC_IRQChannel; u8 NVIC_IRQChannelPreemptionPriority; u8 NVIC_IRQChannelSubPriority; FunctionalState NVIC_IRQChannelCmd; } NVIC_InitTypeDef; </code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_irqchannel","title":"\u53c2\u6570 NVIC_IRQChannel","text":"<p>\u8be5\u53c2\u6570\u7528\u4ee5\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684 IRQ \u901a\u9053\u3002 </p> <p>Table 5. NVIC_IRQChannel \u503c </p> NVIC_IRQChannel \u63cf\u8ff0 WWDG_IRQn \u7a97\u53e3\u770b\u95e8\u72d7\u4e2d\u65ad PVD_IRQn PVD \u901a\u8fc7 EXTI \u63a2\u6d4b\u4e2d\u65ad TAMPER_IRQn \u7be1\u6539\u4e2d\u65ad RTC_IRQn RTC \u5168\u5c40\u4e2d\u65ad FlashItf_IRQn FLASH \u5168\u5c40\u4e2d\u65ad RCC_IRQn RCC \u5168\u5c40\u4e2d\u65ad EXTI0_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  0 \u4e2d\u65ad EXTI1_IRQnl \u5916\u90e8\u4e2d\u65ad\u7ebf  1 \u4e2d\u65ad EXTI2_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  2 \u4e2d\u65ad EXTI3_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  3 \u4e2d\u65ad EXTI4_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  4 \u4e2d\u65ad DMAChannel1_IRQn DMA \u901a\u9053 1 \u4e2d\u65ad DMAChannel2_IRQn DMA \u901a\u9053 2 \u4e2d\u65ad DMAChannel3_IRQn DMA \u901a\u9053 3 \u4e2d\u65ad DMAChannel4_IRQn DMA \u901a\u9053 4 \u4e2d\u65ad DMAChannel5_IRQn DMA \u901a\u9053 5 \u4e2d\u65ad DMAChannel6_IRQn DMA \u901a\u9053 6 \u4e2d\u65ad DMAChannel7_IRQn DMA \u901a\u9053 7 \u4e2d\u65ad ADC_IRQn ADC \u5168\u5c40\u4e2d\u65ad USB_HP_CANTX_IRQn USB \u9ad8\u4f18\u5148\u7ea7\u6216\u8005 CAN \u53d1\u9001\u4e2d\u65ad USB_LP_CAN_RX0_IRQn USB \u4f4e\u4f18\u5148\u7ea7\u6216\u8005 CAN \u63a5\u6536 0 \u4e2d\u65ad CAN_RX1_IRQn CAN \u63a5\u6536 1 \u4e2d\u65ad CAN_SCE_IRQn CAN SCE \u4e2d\u65ad EXTI9_5_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  9-5 \u4e2d\u65ad TIM1_BRK_IRQn TIM1 \u6682\u505c\u4e2d\u65ad TIM1_UP_IRQn TIM1 \u5237\u65b0\u4e2d\u65ad TIM1_TRG_COM_IRQn TIM1 \u89e6\u53d1\u548c\u901a\u8baf\u4e2d\u65ad TIM1_CC_IRQn TIM1 \u6355\u83b7\u6bd4\u8f83\u4e2d\u65ad TIM2_IRQn TIM2 \u5168\u5c40\u4e2d\u65ad TIM3_IRQn TIM3 \u5168\u5c40\u4e2d\u65ad TIM4_IRQn TIM4 \u5168\u5c40\u4e2d\u65ad I2C1_EV_IRQn I2C1 \u4e8b\u4ef6\u4e2d\u65ad I2C1_ER_IRQn I2C1 \u9519\u8bef\u4e2d\u65ad I2C2_EV_IRQn I2C2 \u4e8b\u4ef6\u4e2d\u65ad I2C2_ER_IRQn I2C2 \u9519\u8bef\u4e2d\u65ad SPI1_IRQn SPI1 \u5168\u5c40\u4e2d\u65ad SPI2_IRQn SPI2 \u5168\u5c40\u4e2d\u65ad USART1_IRQn USART1 \u5168\u5c40\u4e2d\u65ad USART2_IRQn USART2 \u5168\u5c40\u4e2d\u65ad USART3_IRQn USART3 \u5168\u5c40\u4e2d\u65ad EXTI15_10_IRQn \u5916\u90e8\u4e2d\u65ad\u7ebf  15-10 \u4e2d\u65ad RTCAlarm_IRQn RTC \u95f9\u949f\u901a\u8fc7 EXTI \u7ebf\u4e2d\u65ad USBWakeUp_IRQn USB \u901a\u8fc7 EXTI \u7ebf\u4ece\u60ac\u6302\u5524\u9192\u4e2d\u65ad"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_irqchannelpreemptionpriority","title":"\u53c2\u6570 NVIC_IRQChannelPreemptionPriority","text":"<p>\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e86\u6210\u5458 NVIC_IRQChannel \u4e2d\u7684\u62a2\u5360\u4f18\u5148\u7ea7</p>"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_irqchannelsubpriority","title":"\u53c2\u6570 NVIC_IRQChannelSubPriority","text":"<p>\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e86\u6210\u5458 NVIC_IRQChannel \u4e2d\u7684\u54cd\u5e94\u4f18\u5148\u7ea7</p> <p>\u4e0b\u8868\u7ed9\u51fa\u4e86\u7531\u51fd\u6570 NVIC_PriorityGroupConfig \u8bbe\u7f6e\u7684\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u53ef\u53d6\u7684\u503c</p> <p>Table 6. \u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u503c</p> NVIC_PriorityGroup NVIC_IRQChannel \u7684\u62a2\u5360\u4f18\u5148\u7ea7 NVIC_IRQChannel \u7684\u54cd\u5e94\u4f18\u5148\u7ea7 \u63cf\u8ff0 NVIC_PriorityGroup_0 0 0-15 \u62a2\u5360\u4f18\u5148\u7ea7 0 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  4 \u4f4d NVIC_PriorityGroup_1 0-1 0-7 \u62a2\u5360\u4f18\u5148\u7ea7 1 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  3 \u4f4d NVIC_PriorityGroup_2 0-3 0-3 \u62a2\u5360\u4f18\u5148\u7ea7 2 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  2 \u4f4d NVIC_PriorityGroup_3 0-7 0-1 \u62a2\u5360\u4f18\u5148\u7ea7 3 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  1 \u4f4d NVIC_PriorityGroup_4 0-15 0 \u62a2\u5360\u4f18\u5148\u7ea7 4 \u4f4d\uff0c\u54cd\u5e94\u4f18\u5148\u7ea7  0 \u4f4d <ol> <li>\u9009\u4e2dNVIC_PriorityGroup_0\uff0c\u5219\u53c2\u6570NVIC_IRQChannelPreemptionPriority\u5bf9\u4e2d\u65ad\u901a\u9053\u7684\u8bbe\u7f6e\u4e0d\u4ea7\u751f\u5f71\u54cd\u3002 </li> <li>\u9009\u4e2d NVIC_PriorityGroup_4\uff0c\u5219\u53c2\u6570 NVIC_IRQChannelSubPriority \u5bf9\u4e2d\u65ad\u901a\u9053\u7684\u8bbe\u7f6e\u4e0d\u4ea7\u751f\u5f71\u54cd\u3002</li> </ol>"},{"location":"EmbeddedSyS/STM32/EXTI/#nvic_irqchannelcmd","title":"\u53c2\u6570 NVIC_IRQChannelCmd","text":"<p>\u8be5\u53c2\u6570\u6307\u5b9a\u4e86\u5728\u6210\u5458 NVIC_IRQChannel \u4e2d\u5b9a\u4e49\u7684 IRQ \u901a\u9053\u88ab\u4f7f\u80fd\u8fd8\u662f\u5931\u80fd\u3002</p> <p>\u8fd9\u4e2a\u53c2\u6570\u53d6\u503c\u4e3a ENABLE \u6216\u8005 DISABLE\u3002 </p> <p>\u4f8b\uff1a</p> <pre><code>NVIC_InitTypeDef NVIC_InitStructure; /* Configure the Priority Grouping with 1 bit */ NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);\n/* Enable TIM3 global interrupt with Preemption Priority 0 and Sub \nPriority as 2 */ NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn; NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 2; NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; NVIC_Init(&amp;NVIC_InitStructure);\n/* Enable USART1 global interrupt with Preemption Priority 1 and Sub \nPriority as 5 */ NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn; NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1; NVIC_InitStructure.NVIC_IRQChannelSubPriority = 5; NVIC_Init(&amp;NVIC_InitStructure);\n/* Enable RTC global interrupt with Preemption Priority 1 and Sub \nPriority as 7 */ NVIC_InitStructure.NVIC_IRQChannel = RTC_IRQn; NVIC_InitStructure.NVIC_IRQChannelSubPriority = 7; NVIC_Init(&amp;NVIC_InitStructure);\n/* Enable EXTI4 interrupt with Preemption Priority 1 and Sub \nPriority as 7 */ NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn; NVIC_InitStructure.NVIC_IRQChannelSubPriority = 7; NVIC_InitStructure(&amp;NVIC_InitStructure);\n/* TIM3 interrupt priority is higher than USART1, RTC and EXTI4 interrupts priorities. USART1 interrupt priority is higher than RTC and EXTI4 interrupts priorities. RTC interrupt priority is higher than EXTI4 interrupt prioriy. */ </code></pre> <p>Table 7. EXTI \u5e93\u51fd\u6570 </p> \u51fd\u6570\u540d \u63cf\u8ff0 EXTI_DeInit \u5c06\u5916\u8bbe  EXTI \u5bc4\u5b58\u5668\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c EXTI_Init \u6839\u636e  EXTI_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe EXTI \u5bc4\u5b58\u5668 EXTI_StructInit \u628a EXTI_InitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 EXTI_GenerateSWInterrupt \u4ea7\u751f\u4e00\u4e2a\u8f6f\u4ef6\u4e2d\u65ad EXTI_GetFlagStatus \u68c0\u67e5\u6307\u5b9a\u7684  EXTI \u7ebf\u8def\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e0e\u5426 EXTI_ClearFlag \u6e05\u9664  EXTI \u7ebf\u8def\u6302\u8d77\u6807\u5fd7\u4f4d EXTI_GetITStatus \u68c0\u67e5\u6307\u5b9a\u7684  EXTI \u7ebf\u8def\u89e6\u53d1\u8bf7\u6c42\u53d1\u751f\u4e0e\u5426 EXTI_ClearITPendingBit \u6e05\u9664  EXTI \u7ebf\u8def\u6302\u8d77\u4f4d"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_init","title":"\u51fd\u6570 EXTI_Init","text":"<p>Table 8. \u51fd\u6570 EXTI_Init </p> \u51fd\u6570\u540d EXTI_Init \u51fd\u6570\u539f\u5f62 void EXTI_Init(EXTI_InitTypeDef*  EXTI_InitStruct) \u529f\u80fd\u63cf\u8ff0 \u6839\u636e  EXTI_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe EXTI \u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570 EXTI_InitStruct\uff1a\u6307\u5411\u7ed3\u6784 EXTI_InitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86\u5916\u8bbe EXTI \u7684\u914d\u7f6e\u4fe1\u606f\u53c2\u9605  Section\uff1aEXTI_InitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>EXTI_InitTypeDef structure </p> <pre><code>EXTI_InitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6\u201cstm32f10x_exti.h\u201d\uff1a typedef struct { u32 EXTI_Line; EXTIMode_TypeDef EXTI_Mode; EXTIrigger_TypeDef EXTI_Trigger; FunctionalState EXTI_LineCmd; } EXTI_InitTypeDef;\n</code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_line","title":"\u53c2\u6570 EXTI_Line","text":"<p>EXTI_Line \u9009\u62e9\u4e86\u5f85\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u7684\u5916\u90e8\u7ebf\u8def\u3002</p> <p>Table 9. EXTI_Line \u503c </p> EXTI_Line \u63cf\u8ff0 EXTI_Line0 \u5916\u90e8\u4e2d\u65ad\u7ebf 0 EXTI_Line1 \u5916\u90e8\u4e2d\u65ad\u7ebf 1 EXTI_Line2 \u5916\u90e8\u4e2d\u65ad\u7ebf 2 EXTI_Line3 \u5916\u90e8\u4e2d\u65ad\u7ebf 3 EXTI_Line4 \u5916\u90e8\u4e2d\u65ad\u7ebf 4 EXTI_Line5 \u5916\u90e8\u4e2d\u65ad\u7ebf 5 EXTI_Line6 \u5916\u90e8\u4e2d\u65ad\u7ebf 6 EXTI_Line7 \u5916\u90e8\u4e2d\u65ad\u7ebf 7 EXTI_Line8 \u5916\u90e8\u4e2d\u65ad\u7ebf 8 EXTI_Line9 \u5916\u90e8\u4e2d\u65ad\u7ebf 9 EXTI_Line10 \u5916\u90e8\u4e2d\u65ad\u7ebf 10 EXTI_Line11 \u5916\u90e8\u4e2d\u65ad\u7ebf 11 EXTI_Line12 \u5916\u90e8\u4e2d\u65ad\u7ebf 12 EXTI_Line13 \u5916\u90e8\u4e2d\u65ad\u7ebf 13 EXTI_Line14 \u5916\u90e8\u4e2d\u65ad\u7ebf 14 EXTI_Line15 \u5916\u90e8\u4e2d\u65ad\u7ebf 15 EXTI_Line16 \u5916\u90e8\u4e2d\u65ad\u7ebf 16 EXTI_Line17 \u5916\u90e8\u4e2d\u65ad\u7ebf 17 EXTI_Line18 \u5916\u90e8\u4e2d\u65ad\u7ebf 18"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_mode","title":"\u53c2\u6570 EXTI_Mode","text":"<p>EXTI_Mode \u8bbe\u7f6e\u4e86\u88ab\u4f7f\u80fd\u7ebf\u8def\u7684\u6a21\u5f0f\u3002 </p> <p>Table 10. EXTI_Mode \u503c </p> EXTI_Mode \u63cf\u8ff0 EXTI_Mode_Event \u8bbe\u7f6e  EXTI \u7ebf\u8def\u4e3a\u4e8b\u4ef6\u8bf7\u6c42 EXTI_Mode_Interrupt \u8bbe\u7f6e  EXTI \u7ebf\u8def\u4e3a\u4e2d\u65ad\u8bf7\u6c42"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_trigger","title":"\u53c2\u6570 EXTI_Trigger","text":"<p>EXTI_Trigger \u8bbe\u7f6e\u4e86\u88ab\u4f7f\u80fd\u7ebf\u8def\u7684\u89e6\u53d1\u8fb9\u6cbf\u3002</p> <p>Table 11. EXTI_Trigger \u503c </p> EXTI_Trigger \u63cf\u8ff0 EXTI_Trigger_Falling \u8bbe\u7f6e\u8f93\u5165\u7ebf\u8def\u4e0b\u964d\u6cbf\u4e3a\u4e2d\u65ad\u8bf7\u6c42 EXTI_Trigger_Rising \u8bbe\u7f6e\u8f93\u5165\u7ebf\u8def\u4e0a\u5347\u6cbf\u4e3a\u4e2d\u65ad\u8bf7\u6c42 EXTI_Trigger_Rising_Falling \u8bbe\u7f6e\u8f93\u5165\u7ebf\u8def\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u4e3a\u4e2d\u65ad\u8bf7\u6c42"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_linecmd","title":"\u53c2\u6570 EXTI_LineCmd","text":"<p>EXTI_LineCmd \u7528\u6765\u5b9a\u4e49\u9009\u4e2d\u7ebf\u8def\u7684\u65b0\u72b6\u6001\u3002\u5b83\u53ef\u4ee5\u88ab\u8bbe\u4e3a ENABLE \u6216\u8005 DISABLE\u3002</p> <p>\u4f8b\uff1a</p> <pre><code>/* Enables external lines 12 and 14 interrupt generation on falling edge */ EXTI_InitTypeDef EXTI_InitStructure; EXTI_InitStructure.EXTI_Line = EXTI_Line12 | EXTI_Line14; EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;\nEXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling; EXTI_InitStructure.EXTI_LineCmd = ENABLE; EXTI_Init(&amp;EXTI_InitStructure); </code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_getitstatus","title":"\u51fd\u6570 EXTI_GetITStatus","text":"<p>Table 12. \u51fd\u6570 EXTI_GetITStatus </p> \u51fd\u6570\u540d EXTI_GetITStatus \u51fd\u6570\u539f\u5f62 ITStatus EXTI_GetITStatus(u32  EXTI_Line) \u529f\u80fd\u63cf\u8ff0 \u68c0\u67e5\u6307\u5b9a\u7684  EXTI \u7ebf\u8def\u89e6\u53d1\u8bf7\u6c42\u53d1\u751f\u4e0e\u5426 \u8f93\u5165\u53c2\u6570 EXTI_Line\uff1a\u5f85\u68c0\u67e5 EXTI \u7ebf\u8def\u7684\u6302\u8d77\u4f4d\u53c2\u9605 Section\uff1aEXTI_Line \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4\uff08\u8868\uff09 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c EXTI_Line \u7684\u65b0\u72b6\u6001\uff08SET  \u6216\u8005 RESET\uff09 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u51fd\u6570\u539f\u578b\uff1a</p> \u51fd\u6570\u539f\u578b<pre><code>/**\n  * @brief  Checks whether the specified EXTI line is asserted or not.\n  * @param  EXTI_Line: specifies the EXTI line to check.\n  *   This parameter can be:\n  *     @arg EXTI_Linex: External interrupt line x where x(0..19)\n  * @retval The new state of EXTI_Line (SET or RESET).\n  */\nITStatus EXTI_GetITStatus(uint32_t EXTI_Line)\n{\nITStatus bitstatus = RESET;\nuint32_t enablestatus = 0;\n/* Check the parameters */\nassert_param(IS_GET_EXTI_LINE(EXTI_Line));\nenablestatus =  EXTI-&gt;IMR &amp; EXTI_Line;\nif (((EXTI-&gt;PR &amp; EXTI_Line) != (uint32_t)RESET) &amp;&amp; (enablestatus != (uint32_t)RESET))\n{\nbitstatus = SET;\n}\nelse\n{\nbitstatus = RESET;\n}\nreturn bitstatus;\n}\n</code></pre> <p>\u4f8b\uff1a </p> \u4f8b<pre><code>/* Get the status of EXTI line 8 */ ITStatus EXTIStatus; EXTIStatus = EXTI_GetITStatus(EXTI_Line8); </code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#exti_clearitpendingbit","title":"\u51fd\u6570 EXTI_ClearITPendingBit","text":"<p>Table 13. \u51fd\u6570 EXTI_ClearITPendingBit </p> \u51fd\u6570\u540d EXTI_ClearITPendingBit \u51fd\u6570\u539f\u5f62 void EXTI_ClearITPendingBit(u32  EXTI_Line) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664  EXTI \u7ebf\u8def\u6302\u8d77\u4f4d \u8f93\u5165\u53c2\u6570 EXTI_Line\uff1a\u5f85\u6e05\u9664 EXTI \u7ebf\u8def\u7684\u6302\u8d77\u4f4d\u53c2\u9605 Section\uff1aEXTI_Line \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> \u4f8b<pre><code>/* Clears the EXTI line 2 interrupt pending bit */ EXTI_ClearITPendingBit(EXTI_Line2); </code></pre>"},{"location":"EmbeddedSyS/STM32/EXTI/#gpio_extilineconfig","title":"\u51fd\u6570 GPIO_EXTILineConfig","text":"<p>Table 14.     GPIO_EXTILineConfig</p> \u51fd\u6570\u540d GPIO_EXTILineConfig \u51fd\u6570\u539f\u5f62 void GPIO_EXTILineConfig(u8  GPIO_PortSource, u8 GPIO_PinSource) \u529f\u80fd\u63cf\u8ff0 \u9009\u62e9 GPIO \u7ba1\u811a\u7528\u4f5c\u5916\u90e8\u4e2d\u65ad\u7ebf\u8def \u8f93\u5165\u53c2\u6570  1 GPIO_PortSource: \u9009\u62e9\u7528\u4f5c\u5916\u90e8\u4e2d\u65ad\u7ebf\u6e90\u7684 GPIO \u7aef\u53e3\u53c2\u9605 Section\uff1aGPIO_PortSource  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  2 GPIO_PinSource\uff1a\u5f85\u8bbe\u7f6e\u7684\u5916\u90e8\u4e2d\u65ad\u7ebf\u8def\u8be5\u53c2\u6570\u53ef\u4ee5\u53d6 GPIO_PinSourcex(x  \u53ef\u4ee5\u662f 0-15) \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u51fd\u6570\u539f\u578b:</p> \u51fd\u6570\u539f\u578b<pre><code>/**\n  * @brief  Selects the GPIO pin used as EXTI Line.\n  * @param  GPIO_PortSource: selects the GPIO port to be used as source for EXTI lines.\n  *   This parameter can be GPIO_PortSourceGPIOx where x can be (A..G).\n  * @param  GPIO_PinSource: specifies the EXTI line to be configured.\n  *   This parameter can be GPIO_PinSourcex where x can be (0..15).\n  * @retval None\n  */\nvoid GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)\n{\nuint32_t tmp = 0x00;\n/* Check the parameters */\nassert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));\nassert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));\ntmp = ((uint32_t)0x0F) &lt;&lt; (0x04 * (GPIO_PinSource &amp; (uint8_t)0x03));\nAFIO-&gt;EXTICR[GPIO_PinSource &gt;&gt; 0x02] &amp;= ~tmp;\nAFIO-&gt;EXTICR[GPIO_PinSource &gt;&gt; 0x02] |= (((uint32_t)GPIO_PortSource) &lt;&lt; (0x04 * (GPIO_PinSource &amp; (uint8_t)0x03)));\n}\n</code></pre> <p>\u4f8b\uff1a</p> \u4f8b\u5b50<pre><code>/* Selects PB.08 as EXTI Line 8 */ GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource8);//\u9009\u62e9GPIOB8\u53f7\u5f15\u811a\u4f5c\u4e3a\u5916\u90e8\u4e2d\u65ad\u7ebf\u8def\n</code></pre>"},{"location":"EmbeddedSyS/STM32/FirstFile/","title":"\u65b0\u5efa\u7a0b\u5e8f\u7684\u4f7f\u7528","text":""},{"location":"EmbeddedSyS/STM32/GPIO/","title":"GPIO","text":""},{"location":"EmbeddedSyS/STM32/GPIO/#_1","title":"\u524d\u8a00","text":"<p>STM32\u4e0a\u7684144\u4e2a\u5f15\u811a\u5206\u4e3a:</p> <ul> <li>GPIO(General Purpose Input Output)\u901a\u7528\u8f93\u5165\u8f93\u51faIO\u53e3\uff0c112\u4e2a<ul> <li>PA 16\u4e2a </li> <li>PB 16\u4e2a</li> <li>PC 16\u4e2a </li> <li>PD 16\u4e2a</li> <li>PE 16\u4e2a</li> <li>PF 16\u4e2a</li> <li>PG 16\u4e2a</li> </ul> </li> <li>\u7535\u6e90\u5f15\u811a\uff0c27\u4e2a<ul> <li>VDD 11\u4e2a \uff1aGND</li> <li>VSS  11\u4e2a \uff1a3.3V</li> <li>Vref+ 1\u4e2a \uff1a\u5f00\u53d1\u677f\u6a21\u62df\u90e8\u5206\uff08ADC/DAC\uff09\u7684\u53c2\u8003\u7535\u538b\uff08Vref+\u548c Vref-\uff09</li> <li>Vref-  1\u4e2a \uff1a\u5f00\u53d1\u677f\u6a21\u62df\u90e8\u5206\uff08ADC/DAC\uff09\u7684\u53c2\u8003\u7535\u538b\uff08Vref+\u548c Vref-\uff09</li> <li>VDDA 1\u4e2a\uff1a Vref+\u7684\u8f93\u5165 \u8303\u56f4\u4e3a\uff1a2.4~VDDA</li> <li>VSSA 1\u4e2a \uff1a Vref-\u5fc5\u987b\u548c VSSA \u8fde\u63a5\u5728\u4e00\u8d77</li> <li>VBAT 1\u4e2a \uff1a\u540e\u5907\u533a\u57df\u4f9b\u7535\u811a\uff0c\u91c7\u7528\u7ebd\u6263\u7535\u6c60\u548c VCC3.3 \u6df7\u5408\u4f9b\u7535\u7684\u65b9\u5f0fVBAT \u603b\u662f\u6709\u7535\u7684\uff0c\u4ee5\u4fdd\u8bc1 RTC \u7684\u8d70\u65f6\u4ee5\u53ca\u540e\u5907\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u4e0d\u4e22\u5931</li> </ul> </li> <li>BOOT\u5f15\u811a BOOT0 1\u4e2a</li> <li>\u590d\u4f4d\u5f15\u811a NRST 1\u4e2a\uff0c\u4e0d\u505a\u5176\u5b83\u529f\u80fd\u4f7f\u7528</li> <li>\u6676\u632f\u5f15\u811aOSC_IN 1\u4e2a \uff1a\u8f93\u5165\u5f15\u811a I</li> <li>\u6676\u632f\u5f15\u811aOSC_OUT 1\u4e2a\uff1a\u8f93\u51fa\u5f15\u811a O</li> <li>106\u53f7\u5f15\u811aNC  1\u4e2a\uff1aNO Connect NC\u5f15\u811a\u60ac\u7a7a\u6216\u8005\u63a5\u5730\u90fd\u53ef\u4ee5,NC\u5f15\u811a\u9884\u7559\u662f\u540e\u9762H7\u7cfb\u5217\u4ea7\u54c1\u5347\u7ea7\u4f1a\u5728\u90e8\u5206NC\u5f15\u811a\u4e2d\u505a\u5176\u4ed6\u529f\u80fd\u3002</li> </ul> <p></p> <p>\u5bc4\u5b58\u5668: \u5bc4\u5b58\u5668\u5c31\u662f\u4e00\u6bb5\u7279\u6b8a\u7684\u5b58\u50a8\u5668\uff0c\u5185\u6838\u53ef\u4ee5\u901a\u8fc7APB2\u603b\u7ebf\u5bf9\u5bc4\u5b58\u5668\u8fdb\u884c\u8bfb\u5199\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210\u8f93\u51fa\u7535\u5e73\u548c\u8bfb\u53d6\u7535\u5e73\u7684\u529f\u80fd\u4e86</p>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_1","title":"GPIO\u7684\u4ecb\u7ecd","text":"<p>GPIO(General Purpose Input Output)\u901a\u7528\u8f93\u5165\u8f93\u51faIO\u53e3\uff0c\u662f\u7531\u82af\u7247\u76f4\u63a5\u53ef\u63a7\u5236\u7684\u5f15\u811a\u3002GPIO\u7684\u5f15\u811a\u901a\u8fc7\u4e0e\u5916\u90e8\u786c\u4ef6\u8bbe\u5907\u8fde\u63a5\uff0c\u53ef\u5b9e\u73b0\u4e0e\u5916\u90e8\u901a\u8baf\u3001\u63a7\u5236\u5916\u90e8\u786c\u4ef6\u6216\u8005\u91c7\u96c6\u5916\u90e8\u786c\u4ef6\u6570\u636e\u7684\u529f\u80fd\u3002</p>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_2","title":"GPIO\u7684\u57fa\u672c\u7ed3\u6784","text":"<ul> <li> <p>\u53ef\u914d\u7f6e\u4e3a8\u79cd\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f</p> </li> <li> <p>\u5f15\u811a\u7535\u5e73\uff1a0V~3.3V\uff0c\u90e8\u5206\u5f15\u811a\u53ef\u5bb9\u5fcd5V</p> </li> <li> <p>\u8f93\u51fa\u6a21\u5f0f\u4e0b\u53ef\u63a7\u5236\u7aef\u53e3\u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\uff0c\u7528\u4ee5\u9a71\u52a8LED\u3001\u63a7\u5236\u8702\u9e23\u5668\u3001\u6a21\u62df\u901a\u4fe1\u534f\u8bae\u8f93\u51fa\u65f6\u5e8f\u7b49</p> </li> <li> <p>\u8f93\u5165\u6a21\u5f0f\u4e0b\u53ef\u8bfb\u53d6\u7aef\u53e3\u7684\u9ad8\u4f4e\u7535\u5e73\u6216\u7535\u538b\uff0c\u7528\u4e8e\u8bfb\u53d6\u6309\u952e\u8f93\u5165\u3001\u5916\u63a5\u6a21\u5757\u7535\u5e73\u4fe1\u53f7\u8f93\u5165\u3001ADC\u7535\u538b\u91c7\u96c6\u3001\u6a21\u62df\u901a\u4fe1\u534f\u8bae\u63a5\u6536\u6570\u636e\u7b49</p> </li> <li>\u5728STM32\u4e2d\uff0c\u6240\u6709\u7684GPIO\u90fd\u662f\u6302\u8f7d\u5728APB2\u5916\u8bbe\u7684\u603b\u7ebf\u4e0a\u7684</li> <li>GPIO\u7684MODE\u914d\u7f6e(\u8f93\u51fa\u6a21\u5f0f\u7684\u901f\u5ea6):GPIO\u7684\u8f93\u51fa\u901f\u5ea6\u53ef\u4ee5\u9650\u5236\u8f93\u51fa\u5f15\u811a\u7684\u6700\u5927\u7ffb\u8f6c\u901f\u5ea6\uff0c\u662f\u4e3a\u4e86\u4f4e\u529f\u8017\u548c\u7a33\u5b9a\u6027\u800c\u8bbe\u8ba1\u7684</li> </ul> <p></p> <p>\u4f4d\u5e26\u533a\u57df\uff1a\u5728STM32\u4e2d\u4e13\u95e8\u5206\u914d\u6709\u4e00\u6bb5\u5730\u5740\u533a\u57df\uff0c\u8fd9\u6bb5\u5730\u5740\u6620\u5c04\u4e86RAM\u548c\u5916\u8bbe\u5bc4\u5b58\u5668\u6240\u6709\u7684\u4f4d\uff0c\u8bfb\u5199\u8fd9\u6bb5\u5730\u5740\u4e2d\u7684\u6570\u636e\uff0c\u5c31\u76f8\u5f53\u4e8e\u8bfb\u5199\u6240\u6620\u5c04\u4f4d\u7f6e\u7684\u67d0\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e51\u4e2d\u7684\u4f4d\u5bfb\u5740\u64cd\u4f5c</p> <p>\u5f00\u6f0f\u6a21\u5f0f\uff1a\u53ef\u7528\u4f5c\u901a\u4fe1\u534f\u8bae\u7684\u9a71\u52a8\u65b9\u5f0f\uff0ceg\uff1aI2C\uff1b\u5728\u591a\u6781\u901a\u4fe1\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u907f\u514d\u5404\u4e2a\u8bbe\u5907\u7684\u76f8\u4e92\u5e72\u6270\uff0c\u8fd8\u53ef\u7528\u4e8e\u8f93\u51fa5V\u7684\u7535\u5e73\u4fe1\u53f7\uff1a\u5728I/O\u53e3\u5916\u63a5\u4e00\u4e2a\u4e0a\u62c9\u7535\u963b(\u5f31\u4e0a\u62c9)\uff0c\u5728\u9ad8\u963b\u6001(\u5f00\u6f0f)\u6a21\u5f0f\u4e0b\uff0c\u53ef\u8f93\u51fa5V\uff0c\u5728\u4f4e\u7535\u5e73\u65f6\u8f93\u51fa\u4f4e\u7535\u5e73\u3002\uff08\u5f00\u6f0f\u6a21\u5f0f\u4e0b\u4f4e\u7535\u5e73\u6709\u9a71\u52a8\u80fd\u529b\uff0c\u9ad8\u7535\u5e73\u6ca1\u6709\u9a71\u52a8\u80fd\u529b\uff09</p> <p>STM32\u7247\u4e0a\u5916\u8bbe\u4e3e\u4f8b\uff1a</p> <ul> <li> <p>\u901a\u7528\u8f93\u5165/\u8f93\u51fa\uff08GPIO\uff09\uff1a\u7528\u4e8e\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u7684\u5f15\u811a\u3002</p> </li> <li> <p>\u4e32\u884c\u901a\u4fe1\u63a5\u53e3\uff08SPI\uff09\uff1a\u7528\u4e8e\u4e0e\u5176\u4ed6\u8bbe\u5907\u8fdb\u884c\u9ad8\u901f\u5f02\u6b65\u4e32\u884c\u901a\u4fe1\u3002</p> </li> <li> <p>\u4e32\u884c\u540c\u6b65\u63a5\u53e3\uff08I2C\uff09\uff1a\u7528\u4e8e\u4e0e\u5176\u4ed6\u8bbe\u5907\u8fdb\u884c\u4e32\u884c\u540c\u6b65\u901a\u4fe1\u3002</p> </li> <li> <p>\u901a\u7528\u5f02\u6b65\u63a5\u6536\u5668/\u53d1\u9001\u5668\uff08USART\uff09\uff1a\u7528\u4e8e\u5f02\u6b65\u4e32\u884c\u6570\u636e\u901a\u4fe1\u3002</p> </li> <li> <p>\u901a\u7528\u4e32\u884c\u603b\u7ebf\uff08USB\uff09\uff1a\u7528\u4e8eUSB\u8fde\u63a5\u548c\u901a\u4fe1\u3002</p> </li> <li> <p>\u901a\u7528\u5b9a\u65f6\u5668/\u8ba1\u6570\u5668\uff08TIM\uff09\uff1a\u7528\u4e8e\u5b9a\u65f6\u548c\u8ba1\u6570\u64cd\u4f5c\u3002</p> </li> <li> <p>\u901a\u7528\u540c\u6b65\u5f02\u6b65\u6536\u53d1\u5668\uff08USART\uff09\uff1a\u7528\u4e8e\u4e32\u884c\u901a\u4fe1\u548c\u6570\u636e\u4f20\u8f93\u3002</p> </li> <li> <p>\u591a\u5a92\u4f53\u5361\u63a5\u53e3\uff08SDIO\uff09\uff1a\u7528\u4e8e\u4e0eSD\u5b58\u50a8\u5361\u8fdb\u884c\u901a\u4fe1\u3002</p> </li> <li> <p>\u540c\u6b65\u5f02\u6b65\u63a5\u6536\u5668/\u53d1\u9001\u5668\uff08UART\uff09\uff1a\u7528\u4e8e\u5f02\u6b65\u4e32\u884c\u901a\u4fe1\u3002</p> </li> <li> <p>\u65f6\u5e8f\u63a7\u5236\u5668\uff08RTC\uff09\uff1a\u7528\u4e8e\u5b9e\u65f6\u65f6\u949f\u548c\u65e5\u5386\u529f\u80fd\u3002</p> </li> <li> <p>\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u5668\uff08PWM\uff09\uff1a\u7528\u4e8e\u4ea7\u751f\u53ef\u8c03\u8282\u8109\u51b2\u5bbd\u5ea6\u7684\u4fe1\u53f7\u3002</p> </li> <li> <p>\u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u5668\uff08ADC\uff09\uff1a\u7528\u4e8e\u5c06\u6a21\u62df\u4fe1\u53f7\u8f6c\u6362\u4e3a\u6570\u5b57\u4fe1\u53f7\u3002</p> </li> <li> <p>\u6570\u5b57\u5230\u6a21\u62df\u8f6c\u6362\u5668\uff08DAC\uff09\uff1a\u7528\u4e8e\u5c06\u6570\u5b57\u4fe1\u53f7\u8f6c\u6362\u4e3a\u6a21\u62df\u4fe1\u53f7\u3002</p> </li> <li> <p>\u4ee5\u592a\u7f51\u63a7\u5236\u5668\uff08ETH\uff09\uff1a\u7528\u4e8e\u4ee5\u592a\u7f51\u8fde\u63a5\u548c\u901a\u4fe1\u3002</p> </li> <li> <p>\u63a7\u5236\u5668\u533a\u57df\u7f51\u7edc\uff08CAN\uff09\uff1a\u7528\u4e8eCAN\u603b\u7ebf\u901a\u4fe1\u3002</p> </li> </ul>"},{"location":"EmbeddedSyS/STM32/GPIO/#work","title":"GPIO\u7684\u5de5\u4f5c\u6a21\u5f0f","text":"<ul> <li>\u8f93\u5165\u6a21\u5f0f\uff1a<ol> <li>\u6d6e\u7a7a\u8f93\u5165(\u6570\u5b57\u8f93\u5165)\uff1a\u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u82e5\u5f15\u811a\u60ac\u7a7a\uff0c\u5219\u7535\u5e73\u4e0d\u786e\u5b9a</li> <li>\u4e0a\u62c9\u8f93\u5165(\u6570\u5b57\u8f93\u5165)\uff1a\u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u5185\u90e8\u8fde\u63a5\u4e0a\u62c9\u7535\u963b\uff0c\u60ac\u7a7a\u65f6\u9ed8\u8ba4\u9ad8\u7535\u5e73</li> <li>\u4e0b\u62c9\u8f93\u5165(\u6570\u5b57\u8f93\u5165)\uff1a\u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u5185\u90e8\u8fde\u63a5\u4e0b\u62c9\u7535\u963b\uff0c\u60ac\u7a7a\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73</li> <li>\u6a21\u62df\u8f93\u5165(\u6a21\u62df\u8f93\u5165)\uff1aGPIO\u65e0\u6548(\u4e0b\u56fe\u4e2d\u7684\u5de6\u4fa7\u7684\u6240\u6709\u5bc4\u5b58\u5668)\uff0c\u5f15\u811a\u76f4\u63a5\u63a5\u5165\u5185\u90e8ADC</li> </ol> </li> </ul> <ul> <li>\u8f93\u51fa\u6a21\u5f0f(\u6570\u5b57\u8f93\u51fa)\uff1a<ol> <li>\u5f00\u6f0f\u8f93\u51fa\uff1a\u53ef\u8f93\u51fa\u5f15\u811a\u7535\u5e73\uff0c\u9ad8\u7535\u5e73\u4e3a\u9ad8\u963b\u6001\uff0c\u4f4e\u7535\u5e73\u63a5VSS</li> <li>\u63a8\u633d\u8f93\u51fa\uff1a\u53ef\u8f93\u51fa\u5f15\u811a\u7535\u5e73\uff0c\u9ad8\u7535\u5e73\u63a5VDD\uff0c\u4f4e\u7535\u5e73\u63a5VSS</li> <li>\u590d\u7528\u5f00\u6f0f\u8f93\u51fa\uff1a\u7531\u7247\u4e0a\u5916\u8bbe\u63a7\u5236\uff0c\u9ad8\u7535\u5e73\u4e3a\u9ad8\u963b\u6001\uff0c\u4f4e\u7535\u5e73\u63a5VSS</li> <li>\u590d\u7528\u63a8\u633d\u8f93\u51fa\uff1a\u7531\u7247\u4e0a\u5916\u8bbe\u63a7\u5236\uff0c\u9ad8\u7535\u5e73\u63a5VDD\uff0c\u4f4e\u7535\u5e73\u63a5VSS</li> </ol> </li> </ul>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_3","title":"GPIO\u7684\u4f7f\u7528\u65b9\u6cd5","text":"<p>STM32 \u7684\u6bcf\u4e2a IO \u7aef\u53e3\u90fd\u6709 7 \u4e2a\u5bc4\u5b58\u5668\u6765\u63a7\u5236\uff0c\u5e38\u7528\u7684 IO \u7aef\u53e3\u5bc4\u5b58\u5668\u53ea\u6709 4 \u4e2a<code>CRL\u3001CRH\u3001IDR\u3001ODR</code> :</p> <ul> <li> <p>\u7aef\u53e3\u914d\u7f6e\u5bc4\u5b58\u5668\uff1a\u914d\u7f6e\u5bc4\u5b58\u5668\u4f7f\u7528\u6765\u8bbe\u7f6eGPIO\u7aef\u53e3\u548c\u6b64\u7aef\u53e3\u7684\u5e94\u7528\u6a21\u5f0f</p> <ol> <li>\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668(GPIOx_CRL)(x=A..E): </li> </ol> <p></p> <p>STM32 \u7684 <code>CRL</code> \u63a7\u5236\u7740PA~PG\u7684\u4f4e 8 \u4f4d(IO0~IO7)\u7684\u6a21\u5f0f\u3002 \u6bcf\u4e2a IO \u7aef\u53e3\u4f7f\u7528 <code>CRL</code> \u7684 4 \u4e2a\u4f4d\uff0c\u9ad8\u4e24\u4f4d\u4e3a <code>CNF</code>\uff0c\u4f4e\u4e24\u4f4d\u4e3a <code>MODE</code></p> <pre><code>  GPIOA-&gt;CRL &amp;= ~(0xf&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u6e050\nGPIOA-&gt;CRL |= (0x3&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a:\u8f93\u51fa\u6a21\u5f0f\uff0c\u6700\u5927\u901f\u5ea650MHz\uff0c\u901a\u7528\u5f00\u6f0f\u8f93\u51fa\u6a21\u5f0f\n</code></pre> <pre><code>  GPIOA-&gt;CRL &amp;= ~(0xf&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u6e050\nGPIOA-&gt;CRL |= (0x8&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a:\u8f93\u5165\u6a21\u5f0f\uff0c\u4e0a\u62c9/\u4e0b\u62c9\u8f93\u5165\u6a21\u5f0f\nGPIOC-&gt;ODR = (0X1&lt;&lt;1); //\u8bbe\u7f6e\u6210\u4e0a\u62c9\u8f93\u5165\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u662fODR \u662f\u56e0\u4e3a\u624b\u518c\u4e0a\u6709\u8bf4\u660e \u867d\u7136\u5728\u8bbe\u7f6eIO\u8f93\u5165\u540e\uff0c\u8f93\u51fa\u662f\u65ad\u5f00\u7684\uff0c\u4f46\u662f\u4e0d\u5f71\u54cdODR\u6570\u636e\u5bc4\u5b58\u5668\u7684\u4f7f\u7528 \u53ef\u4ee5\u8bbe\u7f6e\u5176\u4e3a\u4e0a\u4e0b\u62c9\u8f93\u5165 \u89c1\u7aef\u53e3\u4f4d\u914d\u7f6e\u8868\n</code></pre> <p>\u5e38\u7528\u7684\u914d\u7f6e: <pre><code> 0X0 \u8868\u793a\u6a21\u62df\u8f93\u5165\u6a21\u5f0f\uff08ADC \u7528\uff09\n0X3 \u8868\u793a\u63a8\u633d\u8f93\u51fa\u6a21\u5f0f\uff08\u505a\u8f93\u51fa\u53e3\u7528\uff0c 50M \u901f\u7387\uff09\n0X8 \u8868\u793a\u4e0a/\u4e0b\u62c9\u8f93\u5165\u6a21\u5f0f\uff08\u505a\u8f93\u5165\u53e3\u7528\uff09\n0XB \u8868\u793a\u590d\u7528\u8f93\u51fa\uff08\u4f7f\u7528 IO \u53e3\u7684\u7b2c\u4e8c \u529f\u80fd\uff0c50M \u901f\u7387\uff09\n</code></pre></p> <ol> <li>\u7aef\u53e3\u914d\u7f6e\u9ad8\u5bc4\u5b58\u5668(GPIOx_CRH)(x=A..E):</li> </ol> <p></p> <p>STM32 \u7684 <code>CRH</code> \u63a7\u5236\u7740PA~PG\u7684\u4f4e 8 \u4f4d(IO8~IO15)\u7684\u6a21\u5f0f\u3002 \u6bcf\u4e2a IO \u7aef\u53e3\u4f7f\u7528 <code>CRH</code> \u7684 4 \u4e2a\u4f4d\uff0c\u9ad8\u4e24\u4f4d\u4e3a <code>CNF</code>\uff0c\u4f4e\u4e24\u4f4d\u4e3a <code>MODE</code>\u7531\u4e8e\u548cCRL\u4f7f\u7528\u4e00\u6837\u5c31\u4e0d\u518d\u8d58\u8ff0</p> </li> <li> <p>\u7aef\u53e3\u6570\u636e\u5bc4\u5b58\u5668\uff1a\u6211\u81ea\u5df1\u7684\u7406\u89e3\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4ee5\u4e0b\u7684\u5bc4\u5b58\u5668\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u4f7fIO\u53e3\u8bfb\u53d6\u6216\u8005\u8f93\u51fa\u6570\u636e(0\u62161)</p> <ol> <li>\u7aef\u53e3\u8f93\u5165\u6570\u636e\u5bc4\u5b58\u5668(GPIOx_IDR)(x=A..E):</li> </ol> <p></p> <p><code>IDR</code> \u662f\u4e00\u4e2a\u7aef\u53e3\u8f93\u5165\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u53ea\u7528\u4e86\u4f4e 16 \u4f4d\u3002\u8be5\u5bc4\u5b58\u5668\u4e3a\u53ea\u8bfb\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u53ea\u80fd\u4ee5 16 \u4f4d\u7684\u5f62\u5f0f\u8bfb\u51fa</p> <pre><code>#define KEY1  (GPIOA-&gt;IDR &amp; (0x1&lt;&lt;0)) //GPIOA-&gt;IDR\u8f93\u5165\u6570\u636e  \u8bfb\u53d6PA0\u7684\u72b6\u6001 \u548c1\u76f8\u4e0e \n//\u2460\u6309\u952e\u6309\u4e0b\u4f4e\u7535\u5e73 \u6709\u6548--&gt; KEY1==0;\u2461\u6309\u952e\u6309\u4e0b\u9ad8\u7535\u5e73 \u6709\u6548--&gt;KEY1==1; \nGPIOA-&gt;CRL &amp;= ~(0xf&lt;&lt;0);//PA0--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u6e050\nGPIOA-&gt;CRL |= (0x4&lt;&lt;0);//PA0--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a:\u6d6e\u7a7a\u8f93\u5165\u6a21\u5f0f\n</code></pre> <ol> <li>\u7aef\u53e3\u8f93\u51fa\u6570\u636e\u5bc4\u5b58\u5668(GPIOx_ODR)(x=A..E):</li> </ol> <p></p> <p><code>ODR</code>\u662f\u4e00\u4e2a\u7aef\u53e3\u8f93\u51fa\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u4e5f\u53ea\u7528\u4e86\u4f4e 16 \u4f4d\u3002\u8be5\u5bc4\u5b58\u5668\u4e3a\u53ef\u8bfb\u5199\uff0c\u4ece\u8be5\u5bc4\u5b58\u5668\u8bfb\u51fa\u6765\u7684\u6570\u636e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u5f53\u524d IO \u53e3\u7684\u8f93\u51fa\u72b6\u6001\u3002\u800c\u5411\u8be5\u5bc4\u5b58\u5668\u5199\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u63a7\u5236\u67d0\u4e2a IO \u53e3 \u7684\u8f93\u51fa\u7535\u5e73\u3002</p> <pre><code>  GPIOA-&gt;CRL &amp;= ~(0xf&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u6e050\nGPIOA-&gt;CRL |= (0x3&lt;&lt;4);//PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a:\u8f93\u51fa\u6a21\u5f0f\uff0c\u6700\u5927\u901f\u5ea650MHz\uff0c\u901a\u7528\u5f00\u6f0f\u8f93\u51fa\u6a21\u5f0f\n//\u521d\u59cb\u5316\u540e \u9ed8\u8ba4\u7684\u8f93\u51fa\u503c\u4e3a0 \nGPIOA-&gt;ODR |= 0X1&lt;&lt;4;//\u4f7f\u5176\u8f93\u51fa1\n</code></pre> </li> <li> <p>\u7aef\u53e3\u4f4d\u8bbe\u7f6e/\u6e05\u9664\u5bc4\u5b58\u5668(GPIOx_BSRR) (x=A..E)</p> </li> <li> <p>\u7aef\u53e3\u4f4d\u6e05\u9664\u5bc4\u5b58\u5668(GPIOx_BRR) (x=A..E)</p> </li> <li> <p>\u7aef\u53e3\u914d\u7f6e\u9501\u5b9a\u5bc4\u5b58\u5668(GPIOx_LCKR) (x=A..E) </p> </li> </ul>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_4","title":"GPIO\u7684\u5b9e\u6218\u5e94\u7528","text":"<p>\u5b66\u4e60\u4e86\u4ee5\u4e0a\u77e5\u8bc6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528STM32\u6765\u5f00\u59cb\u6211\u4eec\u7684\u5b9e\u6218\u6f14\u7ec3\u4e86</p>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_5","title":"\u8dd1\u9a6c\u706f(\u70b9\u706f\u5927\u5e08\u7b2c\u4e00\u6b65)\uff08GPIO\u8f93\u51fa\uff09","text":""},{"location":"EmbeddedSyS/STM32/GPIO/#led","title":"\u4f7f\u7528\u5bc4\u5b58\u5668\u6765\u70b9\u4eaeLED","text":"<p>\u6b64\u70b9\u706f\u8fc7\u7a0b\u4e2d\u9ed8\u8ba4LED\u706f\u6b63\u6781\u662f\u63d2\u57283.3V\u4e0b\u7684\uff0c\u4e5f\u5c31\u662fIO\u8f93\u51fa\u4f4e\u7535\u5e73\u70b9\u4eae</p> main.cled.hled.c <pre><code>#include \"stm32f10x.h\" // Device header\n#include \"led.h\"\nint main(void)\n{\nLed_Init();\nLed_ON();\nwhile(1)\n{\nLED0TURN;//\u9ad8\u9636\u73a9\u6cd5--&gt;PA0\u95ea\u70c1\nDelay_ms(500);//\u89c1\u4e0b\u65b9\u4e2ddelay.c\u548cdelay.h\n}\n}\n</code></pre> <pre><code>#ifndef __LED_H__\n#define __LED_H__\n#include \"stm32f10x.h\"\nvoid Led_Init(void);\nvoid Led_ON(void);\nvoid Led_OFF(void);\n#endif\n</code></pre> <pre><code>#include \"led.h\"\nvoid Led_Init(void)\n{\nRCC-&gt;APB2ENR |=  0x1&lt;&lt;2; //\u4f7f\u80fd\u7aef\u53e3A\u65f6\u949f\nGPIOA-&gt;CRL &amp;= ~(0xff&lt;&lt;0);//PA0,PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u6e050\nGPIOA-&gt;CRL |= (0x33&lt;&lt;0);//PA0,PA1--&gt;\u7aef\u53e3\u914d\u7f6e\u4f4e\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a:\u8f93\u51fa\u6a21\u5f0f\uff0c\u6700\u5927\u901f\u5ea650MHz\uff0c\u901a\u7528\u5f00\u6f0f\u8f93\u51fa\u6a21\u5f0f\nGPIOA-&gt;ODR |= 0X3&lt;&lt;1;//\u521d\u59cb\u5316\u540e\u5c06PA0,PA1--IO\u53e3\u7f6e1\n}\nvoid Led_ON(void)\n{\nGPIOA-&gt;ODR &amp;= ~(0X1&lt;&lt;1);//PA1\u7f6e0\n}\nvoid Led_OFF(void)\n{\nGPIOA-&gt;ODR |= (0X1&lt;&lt;1);//PA1\u7f6e1\n}\n</code></pre> <p>\u9ad8\u9636\u73a9\u6cd5\uff1a</p> <ol> <li>\u4f7f\u7528\u5b8f\u5b9a\u4e49\u5e26\u53c2\u6570</li> </ol> <pre><code>//\u5199\u5728led.h\u5934\u6587\u4ef6\u4e2d\n/*\n  x==1 \u706f\u4eae\n  x==0 \u706f\u706d\n  \u5b8f\u5b9a\u4e49\u5e26\u53c2\u6570,\u91c7\u7528\u4e09\u76ee\u8fd0\u7b97\u6cd5\n*/\n#define LED0(x) (x)?(GPIOA-&gt;ODR &amp;= ~(0x1&lt;&lt;0)):(GPIOE-&gt;ODR |= (0x1&lt;&lt;0)) //PA0\n#define LED1(x) (x)?(GPIOA-&gt;ODR &amp;= ~(0x1&lt;&lt;1)):(GPIOE-&gt;ODR |= (0x1&lt;&lt;1)) //PA1\n#define LED2(x) (x)?(GPIOA-&gt;ODR &amp;= ~(0x1&lt;&lt;2)):(GPIOE-&gt;ODR |= (0x1&lt;&lt;2)) //PA2\n#define LED3(x) (x)?(GPIOA-&gt;ODR &amp;= ~(0x1&lt;&lt;3)):(GPIOE-&gt;ODR |= (0x1&lt;&lt;3)) //PA3\n//\u5728\u4e3b\u51fd\u6570\u76f4\u63a5\u4f7f\u7528LED1(1) \u5c31\u53ef\u4ee5\u5c06 PA0\u5904\u7684\u5c0f\u706f\u70b9\u4eae\n/*\n  \u4f7f\u7528 \u5f02\u6216 \u6765\u63a7\u5236LED\u706f\u7684\u4eae\u706d\n  \u76f8\u540c\u4e3a0\uff0c\u4e0d\u540c\u4e3a1 \n  \u4e0e0\u5f02\u6216\uff0c\u4e3a\u5176\u672c\u8eab\n  \u4e0e1\u5f02\u6216\uff0c0\uff0c1\u4e92\u6362\n  xxxx xxxx xxxx x1xx\n  ^\n  0000 0000 0000 0100\n  xxxx xxxx xxxx x0xx\n*/\n#define LED0TURN  GPIOA-&gt;ODR ^= (0x1&lt;&lt;0)//PA0\n#define LED1TURN  GPIOA-&gt;ODR ^= (0x1&lt;&lt;1)//PA1\n#define LED2TURN  GPIOA-&gt;ODR ^= (0x1&lt;&lt;2)//PA2\n#define LED3TURN  GPIOA-&gt;ODR ^= (0x1&lt;&lt;3)//PA3\n//\u5728\u4e3b\u51fd\u6570main.c\u7684while(1)\u76f4\u63a5\u4f7f\u7528LED1TURN\u548c\u5ef6\u65f6\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0LED\u95ea\u70c1\n</code></pre> <p><code>delay.h</code></p> <pre><code>#ifndef __DELAY_H\n#define __DELAY_H\n#include \"stdint.h\" //\u52a0\u4e0a\u5c31\u662f\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u627e\u5230uint32_t \u8fd9\u4e2a\u5173\u952e\u5b57\nvoid Delay_us(uint32_t us);\nvoid Delay_ms(uint32_t ms);\nvoid Delay_s(uint32_t s);\n#endif\n</code></pre> <p><code>delay.c</code></p> <pre><code>#include \"stm32f10x.h\"\n#include \"Delay.h\"\n/**\n  * @brief  \u5fae\u79d2\u7ea7\u5ef6\u65f6\n  * @param  xus \u5ef6\u65f6\u65f6\u957f\uff0c\u8303\u56f4\uff1a0~233015\n  * @retval \u65e0\n  */\nvoid Delay_us(uint32_t xus)\n{\nSysTick-&gt;LOAD = 72 * xus;               //\u8bbe\u7f6e\u5b9a\u65f6\u5668\u91cd\u88c5\u503c\nSysTick-&gt;VAL = 0x00;                    //\u6e05\u7a7a\u5f53\u524d\u8ba1\u6570\u503c\nSysTick-&gt;CTRL = 0x00000005;             //\u8bbe\u7f6e\u65f6\u949f\u6e90\u4e3aHCLK\uff0c\u542f\u52a8\u5b9a\u65f6\u5668\nwhile(!(SysTick-&gt;CTRL &amp; 0x00010000));   //\u7b49\u5f85\u8ba1\u6570\u52300\nSysTick-&gt;CTRL = 0x00000004;             //\u5173\u95ed\u5b9a\u65f6\u5668\n}\n/**\n  * @brief  \u6beb\u79d2\u7ea7\u5ef6\u65f6\n  * @param  xms \u5ef6\u65f6\u65f6\u957f\uff0c\u8303\u56f4\uff1a0~4294967295\n  * @retval \u65e0\n  */\nvoid Delay_ms(uint32_t xms)\n{\nwhile(xms--)\n{\nDelay_us(1000);\n}\n}\n/**\n  * @brief  \u79d2\u7ea7\u5ef6\u65f6\n  * @param  xs \u5ef6\u65f6\u65f6\u957f\uff0c\u8303\u56f4\uff1a0~4294967295\n  * @retval \u65e0\n  */\nvoid Delay_s(uint32_t xs)\n{\nwhile(xs--)\n{\nDelay_ms(1000);\n}\n} </code></pre> <ol> <li>\u4f7f\u7528\u4f4d\u5e26\u64cd\u4f5c</li> </ol> <p>\u672a\u5f85\u5b8c\u7eed</p>"},{"location":"EmbeddedSyS/STM32/GPIO/#led_1","title":"\u4f7f\u7528\u5e93\u51fd\u6570\u6765\u70b9\u4eaeLED","text":"<p>\u6b64\u70b9\u706f\u8fc7\u7a0b\u4e2d\u9ed8\u8ba4LED\u706f\u6b63\u6781\u662f\u63d2\u57283.3V\u4e0b\u7684\uff0c\u4e5f\u5c31\u662fIO\u8f93\u51fa\u4f4e\u7535\u5e73\u70b9\u4eae</p> main.cled.hled.c <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"led.h\"\nint main(void)\n{\nLed_Init();\n//GPIO_ResetBits(GPIOA, GPIO_Pin_0);//\u91cd\u65b0\u521d\u59cb\u5316PA0--IO\uff0c\u521d\u59cb\u5316\u540e\u503c\u4e3a0\uff0c\u70b9\u4eae\nGPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_SET); //\u7b2c\u4e09\u9879\u53ef\u76f4\u63a5\u8d4b\u503c\uff1a\u679a\u4e3e\u3001Bit_SET--\u9ad8\u7535\u5e73\u7184\u706d/Bit_RESET--\u4f4e\u7535\u5e73\u70b9\u4eae\nwhile(1)\n{\n//\u4ee5\u4e0b\u5c31\u53ef\u4ee5\u4f7fPA0--LED\u8fdb\u884c\u95ea\u70c1\nGPIO_ResetBits(GPIOA,GPIO_Pin_0); //\u8f93\u51fa\u4f4e\u7535\u5e73 \u70b9\u4eaeLED\nDelay_ms(500);\nGPIO_SetBits(GPIOA,GPIO_Pin_0);  //\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\nDelay_ms(500);\nGPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_RESET);//\u8f93\u51fa\u4f4e\u7535\u5e73 \u70b9\u4eaeLED\nDelay_ms(500);\nGPIO_WriteBit(GPIOA,GPIO_Pin_0,Bit_SET);//\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\nDelay_ms(500);\nGPIO_WriteBit(GPIOA,GPIO_Pin_0,(BitAction)0);//\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED,0\u524d\u9762\u8981\u52a0\u4e0a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u8f6c\u6362\u6210\u679a\u4e3e\u7c7b\u578b\nDelay_ms(500);\nGPIO_WriteBit(GPIOA,GPIO_Pin_0,(BitAction)1);//\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\uff0c1\u524d\u9762\u8981\u52a0\u4e0a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u8f6c\u6362\u6210\u679a\u4e3e\u7c7b\u578b\nDelay_ms(500);\n}\n}\n</code></pre> <pre><code>#ifndef __LED_H__\n#define __LED_H__\n#include \"stm32f10x.h\"\nvoid Led_Init(void); #endif\n</code></pre> <pre><code>#include \"led.h\"\nvoid Led_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);//\u4f7f\u80fd\u65f6\u949fA\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//\u8bbe\u7f6ePA1\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_SetBits(GPIOA,GPIO_Pin_0);  //\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6211\u4eec\u4e3b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\n}\n</code></pre> <p>\u5728\u63a8\u633d\u8f93\u51fa\u7684\u6a21\u5f0f\u4e0b\uff0c\u6b64\u65f6\u53ef\u4ee5\u5c06LED\u706f\u6b63\u6781\u63a5\u5230IO\u53e3\uff0c\u8d1f\u6781\u63a5\u5230GND\uff0c\u53d1\u73b0LED\u4f1a\u7ee7\u7eed\u95ea\u70c1\uff0c\u8bc1\u5b9e\u4e86\u63a8\u633d\u8f93\u51fa\u9ad8\u4f4e\u7535\u5e73\u90fd\u5177\u6709\u9a71\u52a8\u80fd\u529b\uff0c\u5982\u679c\u6b64\u65f6\u518d\u5c06\u8f93\u51fa\u6a21\u5f0f\u6539\u4e3a\u5f00\u6f0f\u6a21\u5f0f\uff0cLED\u5c06\u4e0d\u518d\u95ea\u70c1\uff0c\u8bc1\u5b9e\u4e86\u5f00\u6f0f\u6a21\u5f0f\u5728IO\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\u4e3a\u9ad8\u963b\u6001</p>"},{"location":"EmbeddedSyS/STM32/GPIO/#_2","title":"\u6d41\u6c34\u706f","text":"<p>PA0--&gt;PA7\u7684\u6d41\u6c34\u706f</p> main.cled.hled.c <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"led.h\"\n#include \"Delay.h\"\nint main(void)\n{\nLed_Init();\nunsigned int i = 0;\nwhile(1)\n{\nGPIO_Write(GPIOA,~0x0001); //0000 0000 0000 0001 &lt;--\u4e8c\u8fdb\u5236 GPIO_Write\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5fc5\u987b\u662f16\u8fdb\u5236 \u6ce8\u91ca\u53ea\u662f\u5f62\u8c61\u89e3\u91ca\nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0002); //0000 0000 0000 0010 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0004); //0000 0000 0000 0100 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0008); //0000 0000 0000 1000 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0010); //0000 0000 0001 0000 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0020); //0000 0000 0010 0000 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0040); //0000 0000 0100 0000 \nDelay_ms(500);\nGPIO_Write(GPIOA,~0x0080); //0000 0000 1000 0000 \nDelay_ms(500);\n//\u4e0b\u9762\u8fd9\u4e2a\u662f\u4e0a\u9762\u7684\u7b80\u6613\u5199\u6cd5 \u540c\u6837\u5b9e\u73b0PA0--&gt;PA7\u7684\u6d41\u6c34\u706f\u7684\u6548\u679c \n/*\n    for(i=0;i&lt;8;i++)\n    {\n     GPIO_Write(GPIOA,~(0x1&lt;&lt;i));\n     Delay_ms(500);\n    }\n    */\n}\n}\n</code></pre> <pre><code>#ifndef __LED_H__\n#define __LED_H__\n#include \"stm32f10x.h\"\nvoid Led_Init(void); #endif\n</code></pre> <pre><code>#include \"led.h\"\nvoid Led_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);//\u4f7f\u80fd\u65f6\u949fA\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_ALL;//\u8bbe\u7f6ePA1\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_SetBits(GPIOA,GPIO_Pin_ALL);  //\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6211\u4eec\u4e3b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_6","title":"\u8702\u9e23\u5668\uff08GPIO\u8f93\u51fa\uff09","text":"<p>\u6709\u6e90\u8702\u9e23\u5668\u662f\u6709\u6b63\u8d1f\u5f15\u811a\u7684\u548cIO\u53e3\u5f15\u811a\u7684\uff0c\u5728IO\u5f15\u811a\u52a0\u4e0a\u7535\u538b\u4fe1\u53f7\u5c31\u4f1a\u53d1\u58f0\uff0c\u53d1\u51fa\u7684\u58f0\u97f3\u97f3\u8c03\u5355\u4e00\u3001\u9891\u7387\u56fa\u5b9a,\u672c\u6b21\u4f7f\u7528\u7684\u8702\u9e23\u5668\u662f\u4f4e\u7535\u5e73\u89e6\u53d1</p> main.cBeep.hBeep.c <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"led.h\"\n#include \"Delay.h\"\n#include \"Beep.h\"\nint main(void)\n{\nBeep_Init();//\u8702\u9e23\u5668\u521d\u59cb\u5316\uff0c\u8702\u9e23\u5668\u7684IO\u53e3\u8bbe\u7f6e\u5728PB12\nwhile(1)\n{\nGPIO_Write(GPIOB,~(0X1&lt;&lt;12));\nDelay_ms(100);\nGPIO_Write(GPIOB,(0X1&lt;&lt;12));\nDelay_ms(100);\nGPIO_Write(GPIOB,~(0X1&lt;&lt;12));\nDelay_ms(100);\nGPIO_Write(GPIOB,(0X1&lt;&lt;12));\nDelay_ms(700);\n}\n}\n</code></pre> <pre><code>#ifndef __BEEP_H__\n#define __BEEP_H__\n#include \"stm32f10x.h\"\nvoid Beep_Init(void); #endif\n</code></pre> <pre><code>#include \"Beep.h\"\nvoid Beep_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);//\u4f7f\u80fd\u65f6\u949fB\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;//\u8bbe\u7f6ePB\u768412\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_SetBits(GPIOB,GPIO_Pin_12);  //\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6211\u4eec\u4e3b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u4f7f\u8702\u9e23\u5668\u4e0d\u54cd\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_7","title":"\u6309\u952e\uff08GPIO\u8f93\u5165\uff09","text":"<p>\u5728GPIO\u7684\u5de5\u4f5c\u6a21\u5f0f\u4e2d\u6211\u4eec\u77e5\u9053\uff0cGPIO\u8f93\u5165\u6a21\u5f0f\u4e0b\u6709\u56db\u79cd\u65b9\u5f0f\uff1a\u6d6e\u7a7a\u8f93\u5165\uff0c\u4e0a\u62c9\u8f93\u5165\uff0c\u4e0b\u62c9\u8f93\u5165\u548c\u6a21\u62df\u8f93\u5165\uff0c\u524d\u4e09\u79cd\u90fd\u5c5e\u4e8e\u6570\u5b57\u8f93\u5165\uff0c\u4e5f\u662f\u6b64\u7ae0\u8282\u6240\u5b66\u4e60\u548c\u4f7f\u7528\u7684\u6a21\u5f0f\uff0c\u6a21\u62df\u8f93\u5165\u662f\u5728ADC\u7ae0\u8282\u4e2d\u6240\u5b66\u4e60\u4f7f\u7528\uff0c\u5728\u540e\u9762\u7684\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4ecb\u7ecd\u3002</p> <p>\u4f55\u65f6\u4f7f\u7528\u90a3\u79cd\u8f93\u5165\u65b9\u5f0f\uff0c\u5176\u5b9e\u662f\u770b\u6240\u4f7f\u7528\u7684\u573a\u666f\u548c\u786c\u4ef6\u8bbe\u8ba1\u8981\u6c42</p> <ol> <li>\u4e0b\u56fe\u4e2d\uff0c\u6309\u952e\u6309\u4e0b\u4f4e\u7535\u5e73\u6709\u6548----&gt;\u6211\u4eec\u5c31\u8981\u4f7fGPIO\u7684\u8f93\u5165\u6a21\u5f0f\u9ed8\u8ba4\u4e3a\u4e0a\u62c9\u8f93\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u7a7a\u95f2\u72b6\u6001\u4e0b\u9ed8\u8ba4\u9ad8\u7535\u5e73\uff0c\u6b64\u65f6\u4e0d\u80fd\u4f7f\u7528\u6d6e\u7a7a\u8f93\u5165\u662f\u56e0\u4e3a \u5f15\u811a\u60ac\u7a7a\u4f1a\u9020\u6210\u7535\u5e73\u4e0d\u786e\u5b9a\uff0c\u800c\u4e0b\u62c9\u66f4\u4e0d\u80fd\u4f7f\u7528\uff0c\u56e0\u4e3a\u4e0b\u62c9\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u5c31\u4f1a\u9020\u6210\u6309\u952e\u65e0\u7528</li> </ol> <p></p> <ol> <li>\u4e0b\u56fe\u4e2d\uff0c\u6309\u952e\u6309\u4e0b\u4f4e\u7535\u5e73\u6709\u6548----&gt;\u6b64\u65f6\u56e0\u4e3a\u6709\u4e2a\u4e0a\u62c9\u7535\u963bR1\u7684\u5b58\u5728\uff0cPA0\u9ed8\u8ba4\u9ad8\u7535\u5e73\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7fGPIO\u7684\u8f93\u5165\u6a21\u5f0f\u4f7f\u7528\u4e0a\u62c9\u8f93\u5165\u6216\u8005\u6d6e\u7a7a\u8f93\u5165\u90fd\u53ef\u4ee5</li> </ol> <p></p> <ol> <li>\u4e0b\u56fe\u4e2d,\u6309\u952e\u6309\u4e0b\u9ad8\u7535\u5e73\u6709\u6548----&gt;\u6211\u4eec\u5c31\u8981\u4f7fGPIO\u7684\u8f93\u5165\u6a21\u5f0f\u9ed8\u8ba4\u4e3a\u4e0b\u62c9\u8f93\u5165\uff0c\u4e5f\u5c31\u662f\u5728\u7a7a\u95f2\u72b6\u6001\u4e0b\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6b64\u65f6\u4e0d\u80fd\u4f7f\u7528\u6d6e\u7a7a\u8f93\u5165\u662f\u56e0\u4e3a \u5f15\u811a\u60ac\u7a7a\u4f1a\u9020\u6210\u7535\u5e73\u4e0d\u786e\u5b9a\uff0c\u800c\u4e0a\u62c9\u66f4\u4e0d\u80fd\u4f7f\u7528\uff0c\u56e0\u4e3a\u4e0a\u62c9\u9ed8\u8ba4\u9ad8\u7535\u5e73\uff0c\u5c31\u4f1a\u9020\u6210\u6309\u952e\u65e0\u7528</li> </ol> <p></p> <ol> <li>\u4e0b\u56fe\u4e2d\uff0c\u6309\u952e\u6309\u4e0b\u9ad8\u7535\u5e73\u6709\u6548----&gt;\u6b64\u65f6\u56e0\u4e3a\u6709\u4e2a\u4e0b\u62c9\u7535\u963bR1\u7684\u5b58\u5728\uff0cPA0\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u4f7fGPIO\u7684\u8f93\u5165\u6a21\u5f0f\u4f7f\u7528\u4e0b\u62c9\u8f93\u5165\u6216\u8005\u6d6e\u7a7a\u8f93\u5165\u90fd\u53ef\u4ee5</li> </ol> <p></p> <p>\u6309\u952e\u7684\u4ecb\u7ecd\uff1a</p> <ul> <li> <p>\u6309\u952e\uff1a\u5e38\u89c1\u7684\u8f93\u5165\u8bbe\u5907\uff0c\u6309\u4e0b\u5bfc\u901a\uff0c\u677e\u624b\u65ad\u5f00</p> </li> <li> <p>\u6309\u952e\u6296\u52a8\uff1a\u7531\u4e8e\u6309\u952e\u5185\u90e8\u4f7f\u7528\u7684\u662f\u673a\u68b0\u5f0f\u5f39\u7c27\u7247\u6765\u8fdb\u884c\u901a\u65ad\u7684\uff0c\u6240\u4ee5\u5728\u6309\u4e0b\u548c\u677e\u624b\u7684\u77ac\u95f4\u4f1a\u4f34\u968f\u6709\u4e00\u8fde\u4e32\u7684\u6296\u52a8</p> </li> </ul> <p></p>"},{"location":"EmbeddedSyS/STM32/GPIO/#KEY","title":"\u4f7f\u7528\u5bc4\u5b58\u5668\u6309\u952e\u6765\u63a7\u5236LED","text":"<p>\u4ee5\u4e0b\u793a\u4f8b\u662f\u6309\u952e\u6309\u4e0b\u65f6\u4f4e\u7535\u5e73\u89e6\u53d1\uff0cIO\u5f15\u811a\u7a7a\u95f2\u72b6\u6001\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e0a\u62c9\u8f93\u5165</p> main.cled.hled.ckey.hkey.c <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"led.h\"\n#include \"Delay.h\"\n#include \"Beep.h\"\n#include \"Key.h\"\nint main(void)\n{\nuint8_t keyflag=0;//\u6309\u952e\u6807\u5fd7\u4f4d\nLed_Init();\nKey_Init();\nwhile(1)\n{\nkeyflag = Key_GetNum();\nswitch(keyflag)\n{\ncase 1:\nLED1_Turn();break;\ncase 2:\nLED2_Turn();break;\ncase 3:break;\ncase 4:break;\n} }\n}\n</code></pre> <pre><code>#ifndef __LED_H__\n#define __LED_H__\n#include \"stm32f10x.h\"\nvoid Led_Init(void); void LED1_ON(void);\nvoid LED2_ON(void);\nvoid LED1_OFF(void);\nvoid LED2_OFF(void);\nvoid LED1_Turn(void);\nvoid LED2_Turn(void);\n#endif\n</code></pre> <pre><code>#include \"led.h\"\nvoid Led_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);//\u4f7f\u80fd\u65f6\u949fA\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1|GPIO_Pin_2;//\u8bbe\u7f6ePA1,PA2\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_Write(GPIOA,(0X6));//\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6211\u4eec\u4e3b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u70b9\u706dLED\n//GPIO_SetBits(GPIOA,GPIO_Pin_1|GPIO_Pin_2); //\u4f7f\u7528\u4e0a\u9762\u6216\u8005\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\n}\nvoid LED1_ON(void)\n{\nGPIO_ResetBits(GPIOA,GPIO_Pin_1);\n}\nvoid LED1_OFF(void)\n{\nGPIO_SetBits(GPIOA,GPIO_Pin_1);\n}\nvoid LED1_Turn(void)//PA1\u72b6\u6001\u7ffb\u8f6c\n{\nif(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == 0)//\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u7528\u6765\u68c0\u6d4b\u7aef\u53e3\u8f93\u51fa\u72b6\u6001\u7684\u51fd\u6570\uff0c\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a0\u65f6\uff0c\u5c06PA1\u7f6e1\n{\nGPIO_SetBits(GPIOA,GPIO_Pin_1);\n}\nelse\n{\nGPIO_ResetBits(GPIOA,GPIO_Pin_1);//\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a1\u65f6\uff0c\u5c06PA1\u7f6e0\n}\n}\nvoid LED2_ON(void)\n{\nGPIO_ResetBits(GPIOA,GPIO_Pin_2);\n}\nvoid LED2_OFF(void)\n{\nGPIO_SetBits(GPIOA,GPIO_Pin_2);\n}\nvoid LED2_Turn(void)//PA2\u72b6\u6001\u7ffb\u8f6c\n{\nif(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == 0)//\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u7528\u6765\u68c0\u6d4b\u7aef\u53e3\u8f93\u51fa\u72b6\u6001\u7684\u51fd\u6570\uff0c\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a0\u65f6\uff0c\u5c06PA1\u7f6e1\n{\nGPIO_SetBits(GPIOA,GPIO_Pin_2);\n}\nelse\n{\nGPIO_ResetBits(GPIOA,GPIO_Pin_2);//\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a1\u65f6\uff0c\u5c06PA1\u7f6e0\n}\n}\n</code></pre> <pre><code>#ifndef __KEY_H__\n#define __KEY_H__\n#include \"stm32f10x.h\"\n#include \"Delay.h\"\nvoid Key_Init(void); uint8_t Key_GetNum(void);\n#define KEY1  (GPIOB-&gt;IDR &amp; (0x1&lt;&lt;1)) //GPIOB-&gt;IDR\u8f93\u5165\u6570\u636e  \u8bfb\u53d6PB1\u7684\u72b6\u6001 \u548c1\u76f8\u4e0e \n#define KEY2  (GPIOB-&gt;IDR &amp; (0x1&lt;&lt;11)) //GPIOB-&gt;IDR\u8f93\u5165\u6570\u636e  \u8bfb\u53d6PB11\u7684\u72b6\u6001 \u548c1\u76f8\u4e0e \n#endif\n</code></pre> <pre><code>#include \"Key.h\"\nvoid Key_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);//\u4f7f\u80fd\u65f6\u949fB\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_1;//\u8bbe\u7f6ePB\u76841\u53f7\u548c11\u53f7\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u4e0a\u62c9\u8f93\u5165\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\uff0cGPIO\u8f93\u5165\u65f6\u6b64\u53c2\u6570\u65e0\u6548 \u4f46\u4e00\u822c\u8fd8\u662f\u8bbe\u7f6e\u4e0a\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n}\nuint8_t Key_GetNum(void)\n{\nif(!KEY1)//\u4e0e0x01\u76f8\u4e0e\u540e\u4e3a0 --&gt; \u6309\u952e\u6309\u4e0b\n{\nDelay_ms(15);//\u5ef6\u65f6\u6d88\u6296\nif(!KEY1)\n{\nwhile(!KEY1)//\u7b49\u5f85\u6309\u952e\u62ac\u8d77\n{\n}\nDelay_ms(15);//\u5ef6\u65f6\u6d88\u6296\nreturn 1;\n}\n}\nif(!KEY2)//\u4e0e0x01\u76f8\u4e0e\u540e\u4e3a0 --&gt; \u6309\u952e\u6309\u4e0b\n{\nDelay_ms(15);//\u5ef6\u65f6\u6d88\u6296\nif(!KEY2)\n{\nwhile(!KEY2)//\u7b49\u5f85\u6309\u952e\u62ac\u8d77\n{\n}\nDelay_ms(15);//\u5ef6\u65f6\u6d88\u6296\nreturn 2;\n}\n}\nreturn 0;\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#led_2","title":"\u4f7f\u7528\u5e93\u51fd\u6570\u6309\u952e\u6765\u63a7\u5236LED","text":"<p>\u4ee5\u4e0b\u793a\u4f8b\u662f\u6309\u952e\u6309\u4e0b\u65f6\u4f4e\u7535\u5e73\u89e6\u53d1\uff0cIO\u5f15\u811a\u7a7a\u95f2\u72b6\u6001\u4e3a\u9ad8\u7535\u5e73\uff0c\u4e0a\u62c9\u8f93\u5165</p> <p><code>main.c</code>,<code>led.c</code>\u548c<code>led.h</code>\u90fd\u4e0e\u4f7f\u7528\u5bc4\u5b58\u5668\u6309\u952e\u6765\u63a7\u5236LED\u7ae0\u8282\u4e00\u81f4</p> key.hkey.c <pre><code>#ifndef __KEY_H__\n#define __KEY_H__\n#include \"stm32f10x.h\"\n#include \"Delay.h\"\nvoid Key_Init(void); uint8_t Key_GetNum(void);\n#endif\n</code></pre> <pre><code>#include \"Key.h\"\nvoid Key_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);//\u4f7f\u80fd\u65f6\u949fB\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_11|GPIO_Pin_1;//\u8bbe\u7f6ePB\u76841\u53f7\u548c11\u53f7\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u4e0a\u62c9\u8f93\u5165\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\uff0cGPIO\u8f93\u5165\u65f6\u6b64\u53c2\u6570\u65e0\u6548 \u4f46\u4e00\u822c\u8fd8\u662f\u8bbe\u7f6e\u4e0a\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n}\nuint8_t Key_GetNum(void)\n{\nuint8_t KeyNum = 0;//\u8bbe\u7f6e\u4e00\u4e2a\u8fd4\u56de\u503c\u53d8\u91cf \u672a\u6309\u4e0b--&gt;\u8fd4\u56de\u503c==0 \uff1b key1\u6309\u4e0b--&gt;\u8fd4\u56de\u503c1 key2\u6309\u4e0b--&gt;\u8fd4\u56de\u503c2\nif(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == 0)//GPIO_ReadInputDataBit\u7684\u8fd4\u56de\u503c\u662f \u8bfb\u53d6IO\u5f15\u811a\u7684\u72b6\u6001\u503c \u90a3\u4e48\u6309\u4e0b\u65f6\u5c31\u662f0\u6240\u4ee5 == 0\u4e3a\u771f\n{\nDelay_ms(20);//\u6309\u4e0b\u65f6\u9632\u6296\nwhile(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == 0);//\u76f4\u5230\u6309\u952e\u5f39\u8d77 \u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\nDelay_ms(20);//\u5f39\u8d77\u65f6\u9632\u6296\nKeyNum = 1;\n}\nif(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_11) == 0)//GPIO_ReadInputDataBit\u7684\u8fd4\u56de\u503c\u662f \u8bfb\u53d6IO\u5f15\u811a\u7684\u72b6\u6001\u503c \u90a3\u4e48\u6309\u4e0b\u65f6\u5c31\u662f0\u6240\u4ee5 == 0\u4e3a\u771f\n{\nDelay_ms(20);//\u6309\u4e0b\u65f6\u9632\u6296\nwhile(GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_11) == 0);//\u76f4\u5230\u6309\u952e\u5f39\u8d77 \u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\nDelay_ms(20);//\u5f39\u8d77\u65f6\u9632\u6296\nKeyNum = 2;\n}\nreturn KeyNum;\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#_3","title":"\u4f7f\u7528\u5149\u654f\u4f20\u611f\u5668\u6765\u63a7\u5236\u8702\u9e23\u5668\uff08\u5e93\u51fd\u6570\uff09","text":"<p>\u5149\u6e90\u5145\u8db3\u7684\u65f6\u5019\u8702\u9e23\u5668\u4e0d\u9e23\u53eb\uff0c\u5149\u6e90\u8f83\u6697\u65f6\u8702\u9e23\u5668\u9e23\u53eb</p> main.cLightSensor.hLightSensor.cBeep.hBeep.c <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"led.h\"\n#include \"Delay.h\"\n#include \"Beep.h\"\n#include \"Key.h\"\n#include \"LightSensor.h\"\nint main(void)\n{\nBeep_Init();\nLightSen_Init();\nwhile(1)\n{\nif(Lightsen_Get() == 1)//\u5149\u7ebf\u8f83\u6697\u65f6\uff0c\u8702\u9e23\u5668\u9e23\u53eb\uff0cLightsen_Get()\u8fd4\u56de\u7684\u503c\u662f\u9ed8\u8ba4\u7684\u4e0a\u62c9\u6a21\u5f0f\u9ad8\u7535\u5e73\n{\nBeep_ON();\n}\nelse {\nBeep_OFF();\n}\n}\n}\n</code></pre> <pre><code>#ifndef __LIGHTSENSOR_H__\n#define __LIGHTSENSOR_H__\n#include \"stm32f10x.h\"\nvoid LightSen_Init(void);\nuint8_t Lightsen_Get(void);\n#endif\n</code></pre> <pre><code>#include \"LightSensor.h\"\nvoid LightSen_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);//\u4f7f\u80fd\u65f6\u949fB\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;//\u8bbe\u7f6ePB\u768412\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u4e0a\u62c9\u6a21\u5f0f\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\uff0c\u5728\u8f93\u5165\u6a21\u5f0f\u4e0b\u65e0\u6548\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n}\nuint8_t Lightsen_Get(void)\n{\nreturn GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_13);\n}\n</code></pre> <pre><code>#ifndef __BEEP_H__\n#define __BEEP_H__\n#include \"stm32f10x.h\"\nvoid Beep_Init(void); void Beep_ON(void);\nvoid Beep_OFF(void);\nvoid Beep_Turn(void);\n#endif\n</code></pre> <pre><code>#include \"Beep.h\"\nvoid Beep_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);//\u4f7f\u80fd\u65f6\u949fB\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;//\u8bbe\u7f6ePB\u768412\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_SetBits(GPIOB,GPIO_Pin_12);  //\u521d\u59cb\u5316\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73\uff0c\u6211\u4eec\u4e3b\u52a8\u8bbe\u7f6e\u8f93\u51fa\u9ad8\u7535\u5e73\uff0c\u4f7f\u8702\u9e23\u5668\u4e0d\u54cd\n}\nvoid Beep_ON(void)\n{\nGPIO_ResetBits(GPIOB,GPIO_Pin_12);\n}\nvoid Beep_OFF(void)\n{\nGPIO_SetBits(GPIOB,GPIO_Pin_12);\n}\nvoid Beep_Turn(void)\n{\nif(GPIO_ReadOutputDataBit(GPIOB,GPIO_Pin_12) == 0)//\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u7528\u6765\u68c0\u6d4b\u7aef\u53e3\u8f93\u51fa\u72b6\u6001\u7684\u51fd\u6570\uff0c\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a0\u65f6\uff0c\u5c06PB12\u7f6e1\n{\nGPIO_SetBits(GPIOB,GPIO_Pin_12);\n}\nelse\n{\nGPIO_ResetBits(GPIOB,GPIO_Pin_12);//\u5f53\u68c0\u6d4b\u8f93\u51fa\u7aef\u53e3\u4e3a1\u65f6\uff0c\u5c06PA1\u7f6e0\n}\n}\n</code></pre> <p></p>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_8","title":"GPIO\u7684\u5e93\u51fd\u6570","text":"<p>Table 1. GPIO \u5e93\u51fd\u6570</p> \u51fd\u6570\u540d \u63cf\u8ff0 GPIO_DeInit \u5c06\u5916\u8bbe  GPIOx \u5bc4\u5b58\u5668\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c GPIO_AFIODeInit \u5c06\u590d\u7528\u529f\u80fd\uff08\u91cd\u6620\u5c04\u4e8b\u4ef6\u63a7\u5236\u548c  EXTI \u8bbe\u7f6e\uff09\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c GPIO_Init \u6839\u636e  GPIO_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe GPIOx \u5bc4\u5b58\u5668 GPIO_StructInit \u628a GPIO_InitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 GPIO_ReadInputDataBit \u8bfb\u53d6\u6307\u5b9a\u7aef\u53e3\u7ba1\u811a\u7684\u8f93\u5165 GPIO_ReadInputData \u8bfb\u53d6\u6307\u5b9a\u7684  GPIO \u7aef\u53e3\u8f93\u5165 GPIO_ReadOutputDataBit \u8bfb\u53d6\u6307\u5b9a\u7aef\u53e3\u7ba1\u811a\u7684\u8f93\u51fa GPIO_ReadOutputData \u8bfb\u53d6\u6307\u5b9a\u7684  GPIO \u7aef\u53e3\u8f93\u51fa GPIO_SetBits \u8bbe\u7f6e\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d GPIO_ResetBits \u6e05\u9664\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d GPIO_WriteBit \u8bbe\u7f6e\u6216\u8005\u6e05\u9664\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d GPIO_Write \u5411\u6307\u5b9a  GPIO \u6570\u636e\u7aef\u53e3\u5199\u5165\u6570\u636e GPIO_PinLockConfig \u9501\u5b9a  GPIO \u7ba1\u811a\u8bbe\u7f6e\u5bc4\u5b58\u5668 GPIO_EventOutputConfig \u9009\u62e9  GPIO \u7ba1\u811a\u7528\u4f5c\u4e8b\u4ef6\u8f93\u51fa GPIO_EventOutputCmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u4e8b\u4ef6\u8f93\u51fa GPIO_PinRemapConfig \u6539\u53d8\u6307\u5b9a\u7ba1\u811a\u7684\u6620\u5c04 GPIO_EXTILineConfig \u9009\u62e9  GPIO \u7ba1\u811a\u7528\u4f5c\u5916\u90e8\u4e2d\u65ad\u7ebf\u8def"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_init","title":"GPIO_Init \u51fd\u6570","text":"<p>Table 2. \u51fd\u6570 GPIO_Init </p> \u51fd\u6570\u540d GPIO_Init \u51fd\u6570\u539f\u5f62 void GPIO_Init(GPIO_TypeDef GPIOx,  GPIO_InitTypeDef GPIO_InitStruct) \u529f\u80fd\u63cf\u8ff0 \u6839\u636e GPIO_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe GPIOx \u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_InitStruct\uff1a\u6307\u5411\u7ed3\u6784 GPIO_InitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86\u5916\u8bbe GPIO \u7684\u914d\u7f6e\u4fe1\u606f\u53c2\u9605  Section\uff1a   GPIO_InitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 GPIO_InitTypeDef structure\u7ed3\u6784\u4f53:<pre><code>/*\nGPIO_InitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6\"stm32f10x_gpio.h\"\uff1a \n*/\ntypedef struct { u16 GPIO_Pin; GPIOSpeed_TypeDef GPIO_Speed; GPIOMode_TypeDef GPIO_Mode; } GPIO_InitTypeDef; </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_pin","title":"GPIO_Pin","text":"<p>GPIO_Pin \u8be5\u53c2\u6570\u9009\u62e9\u5f85\u8bbe\u7f6e\u7684 GPIO \u7ba1\u811a\uff0c\u4f7f\u7528\u64cd\u4f5c\u7b26\u201c|\u201d\u53ef\u4ee5\u4e00\u6b21\u9009\u4e2d\u591a\u4e2a\u7ba1\u811a\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u8868\u4e2d\u7684\u4efb\u610f\u7ec4\u5408\u3002</p> <p>Table 3. GPIO_Pin \u503c </p> GPIO_Pin \u9009\u4e2d\u5f15\u811a \u63cf\u8ff0 GPIO_Pin_None \u65e0\u7ba1\u811a\u88ab\u9009\u4e2d GPIO_Pin_0 \u9009\u4e2d\u7ba1\u811a 0 GPIO_Pin_1 \u9009\u4e2d\u7ba1\u811a 1 GPIO_Pin_2 \u9009\u4e2d\u7ba1\u811a 2 GPIO_Pin_3 \u9009\u4e2d\u7ba1\u811a 3 GPIO_Pin_4 \u9009\u4e2d\u7ba1\u811a 4 GPIO_Pin_5 \u9009\u4e2d\u7ba1\u811a 5 GPIO_Pin_6 \u9009\u4e2d\u7ba1\u811a 6 GPIO_Pin_7 \u9009\u4e2d\u7ba1\u811a 7 GPIO_Pin_8 \u9009\u4e2d\u7ba1\u811a 8 GPIO_Pin_9 \u9009\u4e2d\u7ba1\u811a 9 GPIO_Pin_10 \u9009\u4e2d\u7ba1\u811a 10 GPIO_Pin_11 \u9009\u4e2d\u7ba1\u811a 11 GPIO_Pin_12 \u9009\u4e2d\u7ba1\u811a 12 GPIO_Pin_13 \u9009\u4e2d\u7ba1\u811a 13 GPIO_Pin_14 \u9009\u4e2d\u7ba1\u811a 14 GPIO_Pin_15 \u9009\u4e2d\u7ba1\u811a 15 GPIO_Pin_All \u9009\u4e2d\u5168\u90e8\u7ba1\u811a"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_speed","title":"GPIO_Speed","text":"<p>GPIO_Speed \u7528\u4ee5\u8bbe\u7f6e\u9009\u4e2d\u7ba1\u811a\u7684\u901f\u7387\u3002Table 184. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c </p> <p>Table 4. GPIO_Speed \u503c </p> GPIO_Speed \u63cf\u8ff0 GPIO_Speed_10MHz \u9ad8\u8f93\u51fa\u901f\u7387  10MHz GPIO_Speed_2MHz \u9ad8\u8f93\u51fa\u901f\u7387  2MHz GPIO_Speed_50MHz \u9ad8\u8f93\u51fa\u901f\u7387  50MHz"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_mode","title":"GPIO_Mode","text":"<p>GPIO_Mode \u7528\u4ee5\u8bbe\u7f6e\u9009\u4e2d\u7ba1\u811a\u7684\u5de5\u4f5c\u72b6\u6001\u3002Table 185. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c </p> <p>Table 5. GPIO_Mode \u503c </p> GPIO_Speed \u89e3\u91ca \u63cf\u8ff0 GPIO_Mode_AIN \u6a21\u62df\u8f93\u5165 GPIO_Mode_IN_FLOATING \u6d6e\u7a7a\u8f93\u5165 GPIO_Mode_IPD \u4e0b\u62c9\u8f93\u5165 GPIO_Mode_IPU \u4e0a\u62c9\u8f93\u5165 GPIO_Mode_Out_OD \u5f00\u6f0f\u8f93\u51fa GPIO_Mode_Out_PP \u63a8\u633d\u8f93\u51fa GPIO_Mode_AF_OD \u590d\u7528\u5f00\u6f0f\u8f93\u51fa GPIO_Mode_AF_PP \u590d\u7528\u63a8\u633d\u8f93\u51fa <p>\u6ce8\u610f\uff1a </p> <ul> <li> <p>\u5f53\u67d0\u7ba1\u811a\u8bbe\u7f6e\u4e3a\u4e0a\u62c9\u6216\u8005\u4e0b\u62c9\u8f93\u5165\u6a21\u5f0f\uff0c\u4f7f\u7528\u5bc4\u5b58\u5668 Px_BSRR \u548c PxBRR </p> </li> <li> <p>GPIO_Mode \u5141\u8bb8\u540c\u65f6\u8bbe\u7f6e GPIO \u65b9\u5411\uff08\u8f93\u5165/\u8f93\u51fa\uff09\u548c\u5bf9\u5e94\u7684\u8f93\u5165/\u8f93\u51fa\u8bbe\u7f6e\uff0c\uff1a\u4f4d[7:4]\u5bf9\u5e94 GPIO \u65b9\u5411\uff0c\u4f4d[4:0]\u5bf9\u5e94\u914d\u7f6e\u3002GPIO \u65b9\u5411\u6709\u5982\u4e0b\u7d22\u5f15</p> </li> <li> <p>GPIO \u8f93\u5165\u6a21\u5f0f = 0x00 </p> </li> <li> <p>GPIO \u8f93\u51fa\u6a21\u5f0f = 0x01 </p> </li> </ul> <p>Table 6. GPIO_Mode \u7684\u7d22\u5f15\u548c\u7f16\u7801 </p> GPIO\u65b9\u5411 \u7d22\u5f15 \u6a21\u5f0f \u8bbe\u7f6e \u6a21\u5f0f\u4ee3\u7801 GPIO Input 0x00 GPIO_Mode_AIN 0x00 0x00 GPIO_Mode_IN_FLOATING 0x04 0x04 GPIO_Mode_IPD 0x08 0x28 GPIO_Mode_IPU 0x08 0x48 GPIO Output 0x01 GPIO_Mode_Out_OD 0x04 0x14 GPIO_Mode_Out_PP 0x00 0x10 GPIO_Mode_AF_OD 0x0C 0x1C GPIO_Mode_AF_PP 0x08 0x18 \u4f8b<pre><code>/* Configure all the GPIOA in Input Floating mode */ GPIO_InitTypeDef GPIO_InitStructure; //\u521d\u59cb\u5316\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_All; //\u5b9a\u4e49GPIO\u53e3\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\uff1f\uff1f\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING; //\u8bbe\u7f6e\u6d6e\u7a7a\u8f93\u5165\nGPIO_Init(GPIOA, &amp;GPIO_InitStructure);//\u521d\u59cb\u5316\u51fd\u6570\n</code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_readinputdatabit","title":"GPIO_ReadInputDataBit \u51fd\u6570","text":"<p>Table 7. \u51fd\u6570 GPIO_ReadInputDataBit </p> \u51fd\u6570\u540d GPIO_ReadInputDataBit \u51fd\u6570\u539f\u5f62 uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef*  GPIOx, uint16_t GPIO_Pin) \u529f\u80fd\u63cf\u8ff0 \u8bfb\u53d6\u6307\u5b9a\u7aef\u53e3\u7ba1\u811a\u7684\u8f93\u5165 \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_Pin\uff1a\u5f85\u8bfb\u53d6\u7684\u7aef\u53e3\u4f4d   \u53c2\u9605  Section\uff1aGPIO_Pin \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u8f93\u5165\u7aef\u53e3\u7ba1\u811a\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Reads the seventh pin of the GPIOB and store it in ReadValue variable */ u8 ReadValue; ReadValue = GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_readinputdata","title":"GPIO_ReadInputData\u51fd\u6570","text":"<p>Table 8. \u51fd\u6570 GPIO_ReadInputData </p> \u51fd\u6570\u540d GPIO_ReadInputData \u51fd\u6570\u539f\u5f62 u16 GPIO_ReadInputData(GPIO_TypeDef*  GPIOx) \u529f\u80fd\u63cf\u8ff0 \u8bfb\u53d6\u6307\u5b9a\u7684  GPIO \u7aef\u53e3\u8f93\u5165 \u8f93\u5165\u53c2\u6570 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c GPIO \u8f93\u5165\u6570\u636e\u7aef\u53e3\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/*Read the GPIOC input data port and store it in ReadValue variable*/ u16 ReadValue; ReadValue = GPIO_ReadInputData(GPIOC); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_readoutputdatabit","title":"GPIO_ReadOutputDataBit","text":"<p>Table 9. \u51fd\u6570 GPIO_ReadOutputDataBit </p> \u51fd\u6570\u540d GPIO_ReadOutputDataBit \u51fd\u6570\u539f\u5f62 u8  GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin) \u529f\u80fd\u63cf\u8ff0 \u8bfb\u53d6\u6307\u5b9a\u7aef\u53e3\u7ba1\u811a\u7684\u8f93\u51fa \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_Pin\uff1a\u5f85\u8bfb\u53d6\u7684\u7aef\u53e3\u4f4d   \u53c2\u9605  Section\uff1aGPIO_Pin \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u8f93\u51fa\u7aef\u53e3\u7ba1\u811a\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Reads the seventh pin of the GPIOB and store it in ReadValue variable */ u8 ReadValue; ReadValue = GPIO_ReadOutputDataBit(GPIOB, GPIO_Pin_7); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_readoutputdata","title":"GPIO_ReadOutputData \u51fd\u6570","text":"<p>Table 10. \u51fd\u6570 GPIO_ReadOutputData </p> \u51fd\u6570\u540d GPIO_ReadOutputData \u51fd\u6570\u539f\u5f62 u16 GPIO_ReadOutputData(GPIO_TypeDef*  GPIOx) \u529f\u80fd\u63cf\u8ff0 \u8bfb\u53d6\u6307\u5b9a\u7684  GPIO \u7aef\u53e3\u8f93\u51fa \u8f93\u5165\u53c2\u6570 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c GPIO \u8f93\u51fa\u6570\u636e\u7aef\u53e3\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Read the GPIOC output data port and store it in ReadValue variable */ u16 ReadValue; ReadValue = GPIO_ReadOutputData(GPIOC); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_setbits","title":"GPIO_SetBits \u51fd\u6570","text":"<p>Table 11. \u51fd\u6570 GPIO_SetBits </p> \u51fd\u6570\u540d GPIO_SetBits \u51fd\u6570\u539f\u5f62 void GPIO_SetBits(GPIO_TypeDef* GPIOx, u16  GPIO_Pin) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_Pin\uff1a\u5f85\u8bbe\u7f6e\u7684\u7aef\u53e3\u4f4d\u8be5\u53c2\u6570\u53ef\u4ee5\u53d6 GPIO_Pin_x(x \u53ef\u4ee5\u662f 0-15)\u7684\u4efb\u610f\u7ec4\u5408\u53c2\u9605 Section\uff1aGPIO_Pin \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Set the GPIOA port pin 10 and pin 15 */ GPIO_SetBits(GPIOA, GPIO_Pin_10 | GPIO_Pin_15); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_resetbits","title":"GPIO_ResetBits","text":"<p>Table 12.     GPIO_ResetBits</p> \u51fd\u6570\u540d GPIO_ResetBits \u51fd\u6570\u539f\u5f62 void GPIO_ResetBits(GPIO_TypeDef* GPIOx,  u16 GPIO_Pin) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_Pin\uff1a\u5f85\u6e05\u9664\u7684\u7aef\u53e3\u4f4d\u8be5\u53c2\u6570\u53ef\u4ee5\u53d6 GPIO_Pin_x(x \u53ef\u4ee5\u662f 0-15)\u7684\u4efb\u610f\u7ec4\u5408\u53c2\u9605 Section\uff1aGPIO_Pin \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Clears the GPIOA port pin 10 and pin 15 */ GPIO_ResetBits(GPIOA, GPIO_Pin_10 | GPIO_Pin_15); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_writebit","title":"GPIO_WriteBit \u51fd\u6570","text":"<p>Table 13. \u51fd\u6570 GPIO_WriteBit </p> \u51fd\u6570\u540d GPIO_WriteBit \u51fd\u6570\u539f\u5f62 void GPIO_WriteBit(GPIO_TypeDef*  GPIOx, u16 GPIO_Pin, BitAction BitVal) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e\u6216\u8005\u6e05\u9664\u6307\u5b9a\u7684\u6570\u636e\u7aef\u53e3\u4f4d \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 GPIO_Pin\uff1a\u5f85\u8bbe\u7f6e\u6216\u8005\u6e05\u9664\u6307\u7684\u7aef\u53e3\u4f4d\u8be5\u53c2\u6570\u53ef\u4ee5\u53d6 GPIO_Pin_x(x \u53ef\u4ee5\u662f 0-15)\u7684\u4efb\u610f\u7ec4\u5408\u53c2\u9605 Section\uff1aGPIO_Pin \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570 3 BitVal:  \u8be5\u53c2\u6570\u6307\u5b9a\u4e86\u5f85\u5199\u5165\u7684\u503c\u8be5\u53c2\u6570\u5fc5\u987b\u53d6\u679a\u4e3e  BitAction \u7684\u5176\u4e2d\u4e00\u4e2a\u503c   Bit_RESET: \u6e05\u9664\u6570\u636e\u7aef\u53e3\u4f4d   Bit_SET: \u8bbe\u7f6e\u6570\u636e\u7aef\u53e3\u4f4d \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Set the GPIOA port pin 15 */ GPIO_WriteBit(GPIOA, GPIO_Pin_15, Bit_SET); </code></pre>"},{"location":"EmbeddedSyS/STM32/GPIO/#gpio_write","title":"GPIO_Write \u51fd\u6570","text":"<p>Table 14.     GPIO_Write </p> \u51fd\u6570\u540d GPIO_Write \u51fd\u6570\u539f\u5f62 void GPIO_Write(GPIO_TypeDef* GPIOx, u16  PortVal) \u529f\u80fd\u63cf\u8ff0 \u5411\u6307\u5b9a GPIO \u6570\u636e\u7aef\u53e3\u5199\u5165\u6570\u636e \u8f93\u5165\u53c2\u6570 1 GPIOx\uff1ax \u53ef\u4ee5\u662f A\uff0cB\uff0cC\uff0cD \u6216\u8005 E\uff0c\u6765\u9009\u62e9 GPIO  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 PortVal: \u5f85\u5199\u5165\u7aef\u53e3\u6570\u636e\u5bc4\u5b58\u5668\u7684\u503c \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 \u4f8b<pre><code>/* Write data to GPIOA data port */ GPIO_Write(GPIOA, 0x1101); </code></pre>"},{"location":"EmbeddedSyS/STM32/KeilUse/","title":"Keil\u7684\u4f7f\u7528","text":"<p>\u672c\u7ad9\u603b\u8bbf\u95ee\u91cf\u6b21 </p>"},{"location":"EmbeddedSyS/STM32/LCD/","title":"LCD","text":"<p>\u5b66\u4e60\u8d44\u6599:</p> <ul> <li>\u3010\u6b63\u70b9\u539f\u5b50\u3011\u624b\u628a\u624b\u6559\u4f60\u5b66STM32 HAL\u5e93\u5f00\u53d1\u5168\u96c6</li> </ul>"},{"location":"EmbeddedSyS/STM32/LCD/#lcd_1","title":"LCD\u57fa\u7840\u77e5\u8bc6","text":"<p>LCD(Liquid Crystal Display)\uff0c\u5373\u6db2\u6676\u663e\u793a\u5668\uff0c\u7531\uff1a\u73bb\u7483\u57fa\u677f\u3001\u80cc\u5149\u3001\u9a71\u52a8IC\u7b49\u7ec4\u6210\u5168\u5f69LCD\uff0c\u662f\u4e00\u79cd\u5168\u5f69\u663e\u793a\u5c4f\uff08RGB565\u3001RGB888\uff09\uff0c\u53ef\u4ee5\u663e\u793a\u5404\u79cd\u989c\u8272</p> <p></p> <p>LCD\u63a5\u53e3\u5206\u7c7b:</p> \u63a5\u53e3 \u5206\u8fa8\u7387 \u7279\u6027 MCU \u2264800*480 \u81ea\u5e26SRAM\uff0c\u65e0\u9700\u9891\u7e41\u5237\u65b0\uff0c\u65e0\u9700\u5927\u5185\u5b58\uff0c\u9a71\u52a8\u7b80\u5355 RGB \u22641280*800 \u4e0d\u5e26SRAM\uff0c\u9700\u8981\u5b9e\u65f6\u5237\u65b0\uff0c\u9700\u8981\u5927\u5185\u5b58\uff0c\u9a71\u52a8\u7a0d\u5fae\u590d\u6742 MIPI 4K \u4e0d\u5e26SRAM\uff0c\u652f\u6301\u5206\u8fa8\u7387\u9ad8\uff0c\u7701\u7535\uff0c\u5927\u90e8\u5206\u624b\u673a\u5c4f\u7528\u6b64\u63a5\u53e3 <p>ILI9341\u82af\u7247\u652f\u6301\u591a\u79cd\u901a\u4fe1\u63a5\u53e3\uff1a</p> <ul> <li> <p>MCU\u63a5\u53e3\uff088/9/16/18\u4f4d\uff09--- LCD\u6a21\u7ec4\u63a5\u53e3\u7531\u5382\u5bb6\u8bbe\u8ba1\u7684\u51b3\u5b9a\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7684\u662f\u8fd9\u4e2a\u6a21\u5f0f</p> </li> <li> <p>3/4 \u7ebfSPI\u63a5\u53e3</p> </li> <li> <p>RGB\u63a5\u53e3\uff086/16/18\u4f4d\uff09</p> </li> </ul> <p>LCD\u9a71\u52a8\u57fa\u672c\u77e5\u8bc6:</p> <ol> <li> <p>LCD\u5c4f\uff08MCU\u63a5\u53e3\uff09\u9a71\u52a8\u7684\u6838\u5fc3\u662f\uff1a\u9a71\u52a8LCD\u9a71\u52a8\u82af\u7247</p> </li> <li> <p>8080\u65f6\u5e8f\uff0cLCD\u9a71\u52a8\u82af\u7247\u4e00\u822c\u4f7f\u75288080\u65f6\u5e8f\u63a7\u5236\uff0c\u5b9e\u73b0\u6570\u636e\u5199\u5165/\u8bfb\u53d6</p> </li> <li> <p>\u521d\u59cb\u5316\u5e8f\u5217\uff08\u6570\u7ec4\uff09\uff0c\u5c4f\u5382\u63d0\u4f9b\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u7279\u5b9a\u5c4f\u5e55\uff0c\u4e0d\u540c\u5c4f\u5e55\u5382\u5bb6\u4e0d\u5b8c\u5168\u76f8\u540c\uff01</p> </li> <li> <p>\u753b\u70b9\u51fd\u6570\u3001\u8bfb\u70b9\u51fd\u6570\uff08\u975e\u5fc5\u9700\uff09\uff0c\u57fa\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u7ed8\u56fe\u529f\u80fd\uff01</p> </li> </ol>"},{"location":"EmbeddedSyS/STM32/LCD/#8080","title":"8080\u65f6\u5e8f\u4ee3\u7801","text":"<p>8080\u65f6\u5e8f\u77e5\u8bc6\u5728OLED\u5b66\u4e60\u8fc7\u4e86\uff0c\u5c31\u4e0d\u518d\u91cd\u590d\u4e66\u5199\u4e86</p> <p>\u901a\u8fc78080\u65f6\u5e8f\uff0c\u5b9e\u73b0\u5bf9LCD\u8bfb\u5199\u7684\u51fd\u6570\u4ee3\u7801\u5982\u4e0b:</p>"},{"location":"EmbeddedSyS/STM32/LCD/#8080_1","title":"8080\u5199\u65f6\u5e8f\u4ee3\u7801","text":"<p>\u6570\u636e\uff08RS=1\uff09/\u547d\u4ee4\uff08RS=0\uff09\u5728WR\u7684\u4e0a\u5347\u6cbf\uff0c\u5199\u5165LCD\u9a71\u52a8IC\uff0cRD\u4fdd\u6301\u9ad8\u7535\u5e73</p> <p></p> <p><code>lcd_wr_data</code></p> <pre><code>/**\n * @brief       LCD\u5199\u6570\u636e -- \u8fd9\u4e2a\u5c31\u53ef\u4ee5\u5b8c\u6210\u5199\u5165\u4e86\n * @param       data : \u8981\u5199\u5165\u7684\u6570\u636e\n * @retval      \u65e0\n */\nvoid lcd_wr_data(uint16_t data)\n{\nLCD_RS(1);\nLCD_CS(0);\nLCD_DATA_OUT(data);\nLCD_WR(0);\nLCD_WR(1);\nLCD_CS(1);\n}\n</code></pre> <p><code>lcd_wr_regno</code></p> <pre><code>/**\n * @brief       LCD\u5199\u5bc4\u5b58\u5668\u7f16\u53f7/\u5730\u5740\u51fd\u6570  -- \u7ecf\u8fc7\u6211\u7684\u5206\u6790 \u8fd9\u4e2a\u5c31\u662f\u5355\u7eaf\u53d1\u9001ILI9341\u6307\u4ee4\u7684\n * @param       regno: \u5bc4\u5b58\u5668\u7f16\u53f7/\u5730\u5740\n * @retval      \u65e0\n */\n__attribute__((always_inline)) void lcd_wr_regno(volatile uint16_t regno)\n{\nLCD_RS(0);              /* RS=0,\u8868\u793a\u5199\u5bc4\u5b58\u5668 -- RS=0 \u4e0d\u5c31\u662f\u5199\u547d\u4ee4\u5417 \u975e\u8981\u641e\u4e24\u4e2a\u51fd\u6570 \u4e00\u4e2acmd\u4e0d\u5c31\u597d\u4e86*/\nLCD_CS(0);\nLCD_DATA_OUT(regno);    /* \u5199\u5165\u8981\u5199\u7684\u5bc4\u5b58\u5668\u5e8f\u53f7 */\nLCD_WR(0);\nLCD_WR(1);\nLCD_CS(1);\n}\n</code></pre> <p>\u4e00\u4e2a\u77e5\u8bc6\u70b9:\u5185\u8054\u51fd\u6570</p> <p>attribute((always_inline))\u7684\u610f\u601d\u662f\u5f3a\u5236\u5185\u8054\uff0c\u6240\u6709\u52a0\u4e86attribute((always_inline))\u7684\u51fd\u6570\u518d\u88ab\u8c03\u7528\u65f6\u4e0d\u4f1a\u88ab\u7f16\u8bd1\u6210\u51fd\u6570\u8c03\u7528\u800c\u662f\u76f4\u63a5\u6269\u5c55\u5230\u8c03\u7528\u51fd\u6570\u4f53\u5185</p> <pre><code>__attribute__((always_inline)) void a(){\nprint(\"a\"); }\nvoid b()\n{\na();\n}\n/*******************************************************************/\n/*\u7f16\u8bd1\u540e\u662f*/\nvoid b()\n\uff5b\nprint(\"a\"); \uff5d\n</code></pre> <p><code>lcd_write_reg</code></p> <pre><code>/**\n * @brief       LCD\u5199\u5bc4\u5b58\u5668  -- \u7ecf\u8fc7\u6211\u7684\u5206\u6790 \u8fd9\u4e2a\u5c31\u662f\u628a\u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7ed3\u5408\u4e00\u8d77 \u65b9\u4fbf\u4f7f\u7528\u7684\n * @param       regno:\u5bc4\u5b58\u5668\u7f16\u53f7/\u5730\u5740\n * @param       data:\u8981\u5199\u5165\u7684\u6570\u636e\n * @retval      \u65e0\n */\nvoid lcd_write_reg(uint16_t regno, uint16_t data)\n{\nlcd_wr_regno(regno);    /* \u5199\u5165\u8981\u5199\u7684\u5bc4\u5b58\u5668\u5e8f\u53f7 */\nlcd_wr_data(data);      /* \u5199\u5165\u6570\u636e */\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#8080_2","title":"8080\u8bfb\u65f6\u5e8f\u4ee3\u7801","text":"<p>\u6570\u636e\uff08RS=1\uff09/\u547d\u4ee4\uff08RS=0\uff09\u5728RD\u7684\u4e0a\u5347\u6cbf\uff0c\u8bfb\u53d6\u5230MCU\uff0cWR\u4fdd\u6301\u9ad8\u7535\u5e73</p> <p></p> <p><code>lcd_rd_data</code></p> <pre><code>/**\n * @brief       LCD\u8bfb\u6570\u636e\n * @param       \u65e0\n * @retval      \u8bfb\u53d6\u5230\u7684\u6570\u636e\n */\nstatic uint16_t lcd_rd_data(void)\n{\nvolatile uint16_t ram;  /* \u9632\u6b62\u88ab\u4f18\u5316 */\nGPIO_InitTypeDef gpio_init_struct;\n/* LCD_DATA \u5f15\u811a\u6a21\u5f0f\u8bbe\u7f6e, \u4e0a\u62c9\u8f93\u5165, \u51c6\u5907\u63a5\u6536\u6570\u636e */\ngpio_init_struct.Pin = LCD_DATA_GPIO_PIN;\ngpio_init_struct.Mode = GPIO_MODE_INPUT;\ngpio_init_struct.Pull = GPIO_PULLUP;\ngpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;\nHAL_GPIO_Init(LCD_DATA_GPIO_PORT, &amp;gpio_init_struct); LCD_RS(1);              /* RS=1,\u8868\u793a\u64cd\u4f5c\u6570\u636e */\nLCD_CS(0);\nLCD_RD(0);\nlcd_opt_delay(2);\nram = LCD_DATA_IN;      /* \u8bfb\u53d6\u6570\u636e */\nLCD_RD(1);\nLCD_CS(1);\n/* LCD_DATA \u5f15\u811a\u6a21\u5f0f\u8bbe\u7f6e, \u63a8\u633d\u8f93\u51fa, \u6062\u590d\u8f93\u51fa\u72b6\u6001 */\ngpio_init_struct.Pin = LCD_DATA_GPIO_PIN;\ngpio_init_struct.Mode = GPIO_MODE_OUTPUT_PP;\ngpio_init_struct.Pull = GPIO_PULLUP;\ngpio_init_struct.Speed = GPIO_SPEED_FREQ_HIGH;\nHAL_GPIO_Init(LCD_DATA_GPIO_PORT, &amp;gpio_init_struct);\nreturn ram;\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#lcdili9341","title":"LCD\u9a71\u52a8\u82af\u7247(ILI9341)\u6307\u4ee4","text":"\u6307\u4ee4(HEX) \u540d\u79f0 \u4f5c\u7528 0XD3 \u8bfbID \u7528\u4e8e\u8bfb\u53d6LCD\u63a7\u5236\u5668\u7684ID\uff0c\u533a\u5206\u578b\u53f7\u7528 0X36 \u8bbf\u95ee\u63a7\u5236 \u8bbe\u7f6eGRAM\u8bfb\u5199\u65b9\u5411\uff0c\u63a7\u5236\u663e\u793a\u65b9\u5411 0X2A \u5217\u5730\u5740 \u4e00\u822c\u7528\u4e8e\u8bbe\u7f6eX\u5750\u6807 0X2B \u9875\u5730\u5740 \u4e00\u822c\u7528\u4e8e\u8bbe\u7f6eY\u5750\u6807 0X2C \u5199GRAM \u7528\u4e8e\u5f80LCD\u5199GRAM\u6570\u636e 0X2E \u8bfbGRAM \u7528\u4e8e\u8bfb\u53d6LCD\u7684GRAM\u6570\u636e"},{"location":"EmbeddedSyS/STM32/LCD/#id-0xd3","title":"\u8bfb\u6307\u4ee4ID--0XD3","text":"<p>\u8bfb\u53d6LCD\u63a7\u5236\u5668\u578b\u53f7\uff0c\u901a\u8fc7\u578b\u53f7\u53ef\u4ee5\u6267\u884c\u4e0d\u540cLCD\u521d\u59cb\u5316\uff0c\u4ee5\u517c\u5bb9\u4e0d\u540cLCD</p> <p></p> <pre><code>uint16_t id;        /* LCD ID */\n/* \u5c1d\u8bd59341 ID\u7684\u8bfb\u53d6 */\nlcd_wr_regno(0xD3);\nlcddev.id = lcd_rd_data();  /* dummy read */\nlcddev.id = lcd_rd_data();  /* \u8bfb\u52300x00 */\nlcddev.id = lcd_rd_data();  /* \u8bfb\u53d693 */\nlcddev.id &lt;&lt;= 8;\nlcddev.id |= lcd_rd_data(); /* \u8bfb\u53d641 */\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#0x36","title":"\u8bbf\u95ee\u63a7\u5236\u6307\u4ee4\uff080X36\uff09","text":"<p>\u5b9e\u73b0GRAM\u8bfb\u5199\u65b9\u5411\u63a7\u5236\uff0c\u5373\uff1a\u63a7\u5236GRAM\u81ea\u589e\u65b9\u5411\uff0c\u4ece\u800c\u63a7\u5236\u663e\u793a\u65b9\u5411</p> <p></p> <p></p> <p><code>lcd_scan_dir</code></p> <pre><code>/**\n * @brief       \u8bbe\u7f6eLCD\u7684\u81ea\u52a8\u626b\u63cf\u65b9\u5411(\u5bf9RGB\u5c4f\u65e0\u6548)\n *   @note\n *               9341/5310/5510/1963/7789/7796/9806\u7b49IC\u5df2\u7ecf\u5b9e\u9645\u6d4b\u8bd5\n *              \u6ce8\u610f:\u5176\u4ed6\u51fd\u6570\u53ef\u80fd\u4f1a\u53d7\u5230\u6b64\u51fd\u6570\u8bbe\u7f6e\u7684\u5f71\u54cd(\u5c24\u5176\u662f9341),\n *              \u6240\u4ee5,\u4e00\u822c\u8bbe\u7f6e\u4e3aL2R_U2D\u5373\u53ef,\u5982\u679c\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u626b\u63cf\u65b9\u5f0f,\u53ef\u80fd\u5bfc\u81f4\u663e\u793a\u4e0d\u6b63\u5e38.\n *\n * @param       dir:0~7,\u4ee3\u88688\u4e2a\u65b9\u5411(\u5177\u4f53\u5b9a\u4e49\u89c1lcd.h)\n * @retval      \u65e0\n */\nvoid lcd_scan_dir(uint8_t dir)\n{\nuint16_t regval = 0;\nuint16_t dirreg = 0;\nuint16_t temp;\n/* \u6839\u636e\u626b\u63cf\u65b9\u5f0f \u8bbe\u7f6e 0X36/0X3600 \u5bc4\u5b58\u5668 bit 5,6,7 \u4f4d\u7684\u503c */\nswitch (dir)\n{\ncase L2R_U2D:/* \u4ece\u5de6\u5230\u53f3,\u4ece\u4e0a\u5230\u4e0b */\nregval |= (0 &lt;&lt; 7) | (0 &lt;&lt; 6) | (0 &lt;&lt; 5);\nbreak;\ncase L2R_D2U:/* \u4ece\u5de6\u5230\u53f3,\u4ece\u4e0b\u5230\u4e0a */\nregval |= (1 &lt;&lt; 7) | (0 &lt;&lt; 6) | (0 &lt;&lt; 5);\nbreak;\ncase R2L_U2D:/* \u4ece\u53f3\u5230\u5de6,\u4ece\u4e0a\u5230\u4e0b */\nregval |= (0 &lt;&lt; 7) | (1 &lt;&lt; 6) | (0 &lt;&lt; 5);\nbreak;\ncase R2L_D2U:/* \u4ece\u53f3\u5230\u5de6,\u4ece\u4e0b\u5230\u4e0a */\nregval |= (1 &lt;&lt; 7) | (1 &lt;&lt; 6) | (0 &lt;&lt; 5);\nbreak;\ncase U2D_L2R:/* \u4ece\u4e0a\u5230\u4e0b,\u4ece\u5de6\u5230\u53f3 */\nregval |= (0 &lt;&lt; 7) | (0 &lt;&lt; 6) | (1 &lt;&lt; 5);\nbreak;\ncase U2D_R2L:/* \u4ece\u4e0a\u5230\u4e0b,\u4ece\u53f3\u5230\u5de6 */\nregval |= (0 &lt;&lt; 7) | (1 &lt;&lt; 6) | (1 &lt;&lt; 5);\nbreak;\ncase D2U_L2R:/* \u4ece\u4e0b\u5230\u4e0a,\u4ece\u5de6\u5230\u53f3 */\nregval |= (1 &lt;&lt; 7) | (0 &lt;&lt; 6) | (1 &lt;&lt; 5);\nbreak;\ncase D2U_R2L:/* \u4ece\u4e0b\u5230\u4e0a,\u4ece\u53f3\u5230\u5de6 */\nregval |= (1 &lt;&lt; 7) | (1 &lt;&lt; 6) | (1 &lt;&lt; 5);\nbreak;\n}\ndirreg = 0X36;  /* \u5bf9\u7edd\u5927\u90e8\u5206\u9a71\u52a8IC, \u75310X36\u5bc4\u5b58\u5668\u63a7\u5236 */\nregval |= 0X08; /* 9341\u8981\u8bbe\u7f6eBGR\u4f4d */\nlcd_write_reg(dirreg, regval);//\u8bbe\u7f6eBGR\n/*\u5750\u6807\u5904\u7406*/\nif (regval &amp; 0X20)\n{\nif (lcddev.width &lt; lcddev.height)   /* \u4ea4\u6362X,Y */\n{\ntemp = lcddev.width;\nlcddev.width = lcddev.height;\nlcddev.height = temp;\n}\n}\nelse\n{\nif (lcddev.width &gt; lcddev.height)   /* \u4ea4\u6362X,Y */\n{\ntemp = lcddev.width;\nlcddev.width = lcddev.height;\nlcddev.height = temp;\n}\n}\n/* \u8bbe\u7f6e\u663e\u793a\u533a\u57df(\u5f00\u7a97)\u5927\u5c0f -- \u5168\u5c4f\u8bbe\u7f6e*/\nlcd_wr_regno(lcddev.setxcmd);//lcddev.setxcmd == 0X2A\nlcd_wr_data(0);//\u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data(0);//\u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u4f4e8\u4f4d\nlcd_wr_data((lcddev.width - 1) &gt;&gt; 8);//\u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data((lcddev.width - 1) &amp; 0XFF);//\u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u4f4e8\u4f4d\nlcd_wr_regno(lcddev.setycmd);//lcddev.setycmd == 0X2B\nlcd_wr_data(0);//\u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data(0);//\u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u4f4e8\u4f4d\nlcd_wr_data((lcddev.height - 1) &gt;&gt; 8);//\u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data((lcddev.height - 1) &amp; 0XFF);//\u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u4f4e8\u4f4d\n}\n</code></pre> <p><code>lcd_display_dir</code></p> <pre><code>/**\n * @brief       \u8bbe\u7f6eLCD\u663e\u793a\u65b9\u5411\n * @param       dir:0,\u7ad6\u5c4f; 1,\u6a2a\u5c4f\n * @retval      \u65e0\n */\nvoid lcd_display_dir(uint8_t dir)\n{\nlcddev.dir = dir;   /* \u7ad6\u5c4f/\u6a2a\u5c4f */\nif (dir == 0)       /* \u7ad6\u5c4f */\n{\nlcddev.width = 240;\nlcddev.height = 320;\nlcddev.wramcmd = 0X2C;\nlcddev.setxcmd = 0X2A;\nlcddev.setycmd = 0X2B;\n}\nelse                /* \u6a2a\u5c4f */\n{\nlcddev.width = 320;         /* \u9ed8\u8ba4\u5bbd\u5ea6 */\nlcddev.height = 240;        /* \u9ed8\u8ba4\u9ad8\u5ea6 */\nlcddev.wramcmd = 0X2C;\nlcddev.setxcmd = 0X2A;\nlcddev.setycmd = 0X2B;\n}\nlcd_scan_dir(DFT_SCAN_DIR);     /* \u9ed8\u8ba4\u7ad6\u5c4f\u626b\u63cf\u65b9\u5411 */\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#x0x2a","title":"X\u5750\u6807\u8bbe\u7f6e\u6307\u4ee4\uff080X2A\uff09","text":"<p>\u5217\u5730\u5740\u8bbe\u7f6e\u6307\u4ee4\uff0c\u4e00\u822c\u7528\u4e8e\u8bbe\u7f6eX\u5750\u6807</p> <p></p>"},{"location":"EmbeddedSyS/STM32/LCD/#y0x2b","title":"Y\u5750\u6807\u8bbe\u7f6e\u6307\u4ee4\uff080X2B\uff09","text":"<p>\u9875\u5730\u5740\u8bbe\u7f6e\u6307\u4ee4\uff0c\u4e00\u822c\u7528\u4e8e\u8bbe\u7f6eY\u5750\u6807</p> <p></p> <p>X,Y\u90fd\u6709\u4e86 --&gt; \u62e5\u6709\u4e00\u4e2a\u7a97\u53e3\u663e\u793a\u533a\u57df</p> <p><code>lcd_set_window\u8bbe\u7f6e\u7a97\u53e3</code></p> <pre><code>/**\n * @brief       \u8bbe\u7f6e\u7a97\u53e3(\u5bf9RGB\u5c4f\u65e0\u6548),\u5e76\u81ea\u52a8\u8bbe\u7f6e\u753b\u70b9\u5750\u6807\u5230\u7a97\u53e3\u5de6\u4e0a\u89d2(sx,sy).\n * @param       sx,sy:\u7a97\u53e3\u8d77\u59cb\u5750\u6807(\u5de6\u4e0a\u89d2)\n * @param       width,height:\u7a97\u53e3\u5bbd\u5ea6\u548c\u9ad8\u5ea6,\u5fc5\u987b\u5927\u4e8e0!!\n *   @note      \u7a97\u4f53\u5927\u5c0f:width*height.\n *\n * @retval      \u65e0\n */\nvoid lcd_set_window(uint16_t sx, uint16_t sy, uint16_t width, uint16_t height)\n{\nuint16_t twidth, theight;\ntwidth = sx + width - 1;\ntheight = sy + height - 1;\nlcd_wr_regno(lcddev.setxcmd);//lcddev.setxcmd == 0X2A\nlcd_wr_data(sx &gt;&gt; 8);//\u8fd9\u4e2a\u662f\u4e3a\u4e86\u8981\u9ad88\u4f4dSC15~8\u7684\u6570\u636e \u6240\u4ee5\u53f3\u79fb8\u4f4d &lt;-- \u53c2\u65701\uff0c2\u76f8\u5f53\u4e8e\u628aX\u8d77\u59cb\u5750\u6807\u5206\u6210\u4e86\u9ad8\u4f4e\u4e24\u4e2a\u53c2\u6570\nlcd_wr_data(sx &amp; 0XFF);//\u4e3a\u4e86\u8981\u4f4e8\u4f4d\u7684\u6570\u636e  16\u4f4d\u7684sx &amp; 0XFF \u5c31\u53ea\u6709\u4e86\u4f4e8\u4f4d\nlcd_wr_data(twidth &gt;&gt; 8);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data(twidth &amp; 0XFF);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u7ec8\u70b9\u5750\u6807 \u4f4e8\u4f4d\nlcd_wr_regno(lcddev.setycmd);//lcddev.setycmd == 0X2B\nlcd_wr_data(sy &gt;&gt; 8);\nlcd_wr_data(sy &amp; 0XFF);\nlcd_wr_data(theight &gt;&gt; 8);\nlcd_wr_data(theight &amp; 0XFF);  }\n</code></pre> <p><code>lcd_set_cursor\u8bbe\u7f6e\u5750\u6807\u4f4d\u7f6e</code></p> <pre><code>/**\n * @brief       \u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e(\u5bf9RGB\u5c4f\u65e0\u6548)\n * @param       x,y: \u5750\u6807\n * @retval      \u65e0\n */\nvoid lcd_set_cursor(uint16_t x, uint16_t y)\n{\nlcd_wr_regno(lcddev.setxcmd);//lcddev.setxcmd == 0X2A \u53ea\u8bbe\u7f6e\u4e86X\u8d77\u59cb\u5750\u6807\nlcd_wr_data(x &gt;&gt; 8);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data(x &amp; 0XFF);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u4f4e8\u4f4d\nlcd_wr_regno(lcddev.setycmd);//lcddev.setycmd == 0X2B \u53ea\u8bbe\u7f6e\u4e86Y\u8d77\u59cb\u5750\u6807\nlcd_wr_data(y &gt;&gt; 8);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u9ad88\u4f4d\nlcd_wr_data(y &amp; 0XFF);//\u548c\u4e0a\u9762\u540c\u7406 \u8bbe\u7f6e\u8d77\u59cb\u5750\u6807 \u4f4e8\u4f4d\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#_1","title":"\u4e09\u57fa\u8272\u539f\u7406","text":"<p>\u65e0\u6cd5\u901a\u8fc7\u5176\u4ed6\u989c\u8272\u6df7\u5408\u5f97\u5230\u7684\u989c\u8272\uff0c\u79f0\u4e4b\u4e3a\uff1a\u57fa\u672c\u8272\uff1b\u901a\u8fc7\u4e09\u57fa\u8272(\u7ea2\u3001\u7eff\u3001\u84dd)\u6df7\u5408\uff0c\u53ef\u4ee5\u5f97\u5230\u81ea\u7136\u754c\u4e2d\u7edd\u5927\u90e8\u5206\u989c\u8272\uff01</p> <p></p>"},{"location":"EmbeddedSyS/STM32/LCD/#gram0x2c","title":"\u5199GRAM\u6307\u4ee4\uff080X2C\uff09","text":"<p>\u53d1\u9001\u8be5\u6307\u4ee4\u540e\uff0c\u6570\u636e\u7ebf\u53d8\u621016\u4f4d\uff0c\u53ef\u4ee5\u5f00\u59cb\u5199\u5165GRAM\u6570\u636e\uff0c\u652f\u6301\u5730\u5740\u81ea\u589e</p> <p></p> <p><code>lcd_write_ram_prepare</code></p> <pre><code>/**\n * @brief       \u51c6\u5907\u5199GRAM -- \u5355\u7eaf\u5305\u88c5\u4e86\u4e00\u4e0b\u51fd\u6570 \u5199\u51650X2C\u547d\u4ee4\n * @param       \u65e0\n * @retval      \u65e0\n */\n__attribute__((always_inline)) void lcd_write_ram_prepare(void)\n{\nlcd_wr_regno(lcddev.wramcmd);//lcddev.wramcmd == 0X2C\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#gram0x2e","title":"\u8bfbGRAM\u6307\u4ee4\uff080X2E\uff09","text":"<p>\u53d1\u9001\u8be5\u6307\u4ee4\u540e\uff0c\u6570\u636e\u7ebf\u53d8\u621016\u4f4d\uff0c\u53ef\u4ee5\u5f00\u59cb\u8bfb\u53d6GRAM\u6570\u636e\uff0c\u652f\u6301\u5730\u5740\u81ea\u589e</p> <p></p> <p>\u7b2c\u4e00\u4e2a\u70b9  \u8bfb\u4e09\u6b21      \u7a7a\u8bfb \u8bfbR1G1 \u8bfbB1 R2</p> <p>\u7b2c\u4e8c\u4e2a\u70b9  \u518d\u8bfb\u4e00\u6b21  \u8bfbG2B2</p> <p>\u7b2c\u4e09\u4e2a\u70b9  \u518d\u8bfb\u4e24\u6b21  \u8bfbR3G3  \u8bfbB3R4</p> <p>\u7b2c\u56db\u4e2a\u70b9  \u518d\u8bfb\u4e00\u6b21  \u8bfbG4B4</p> <p>\u7b2c\u4e94\u4e2a\u70b9 \u518d\u5ea6\u4e24\u6b21   \u8bfbR5G5 \u8bfbB5R6</p> <p>\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7</p> <pre><code>/**\n * @brief       \u8bfb\u53d6\u4e2a\u67d0\u70b9\u7684\u989c\u8272\u503c -- \u8bfb\u90a3\u4e2a\u70b9\u90fd\u8981\u8c03\u7528\u4e00\u6b21\u8fd9\u4e2a\u51fd\u6570 \u8fde\u8bfb\u8981\u6839\u636e\u4e0a\u65b9\u89c4\u5f8b\u91cd\u5199\u4e00\u4e2a\u51fd\u6570\n * @param       x,y:\u5750\u6807\n * @retval      \u6b64\u70b9\u7684\u989c\u8272(32\u4f4d\u989c\u8272,\u65b9\u4fbf\u517c\u5bb9LTDC)\n */\nuint32_t lcd_read_point(uint16_t x, uint16_t y)\n{\nuint16_t r = 0, g = 0, b = 0;\nif (x &gt;= lcddev.width || y &gt;= lcddev.height)return 0;   /* \u8d85\u8fc7\u4e86\u8303\u56f4,\u76f4\u63a5\u8fd4\u56de */\nlcd_set_cursor(x, y);       /* \u8bbe\u7f6e\u5750\u6807 */\nlcd_wr_regno(0X2E);     /* 9341/5310/1963/7789/7796/9806 \u7b49\u53d1\u9001\u8bfbGRAM\u6307\u4ee4 */\nr = lcd_rd_data();          /* \u5047\u8bfb(dummy read) */\nr = lcd_rd_data();          /* \u5b9e\u9645\u5750\u6807\u989c\u8272 */\n/* ILI9341 \u8981\u52062\u6b21\u8bfb\u51fa */\nb = lcd_rd_data();\ng = r &amp; 0XFF;       /* \u5bf9\u4e8e ILI9341, \u7b2c\u4e00\u6b21\u8bfb\u53d6\u7684\u662fRG\u7684\u503c,R\u5728\u524d,G\u5728\u540e,\u5404\u53608\u4f4d */\ng &lt;&lt;= 8;\nreturn (((r &gt;&gt; 11) &lt;&lt; 11) | ((g &gt;&gt; 10) &lt;&lt; 5) | (b &gt;&gt; 11));  /* ILI9341\u9700\u8981\u516c\u5f0f\u8f6c\u6362\u4e00\u4e0b */\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#lcd_2","title":"LCD\u753b\u70b9","text":"<p>\u7ec8\u4e8e\u6765\u5230\u8fd9\u4e00\u6b65\u4e86 \u901a\u8fc7\u4ee5\u4e0a\u7684\u77e5\u8bc6 \u6211\u4eec\u73b0\u5728\u753b\u51fa\u4e00\u4e2a\u70b9  \u5c31\u53ef\u4ee5 \u5199\u5b57\u5199\u6570\u5b57\u4e86\uff01\uff01</p> <p><code>lcd_draw_point</code></p> <pre><code>/**\n * @brief       \u753b\u70b9\n * @param       x,y: \u5750\u6807\n * @param       color: \u70b9\u7684\u989c\u8272(32\u4f4d\u989c\u8272,\u65b9\u4fbf\u517c\u5bb9LTDC)\n * @retval      \u65e0\n */\nvoid lcd_draw_point(uint16_t x, uint16_t y, uint32_t color)\n{\nlcd_set_cursor(x, y);       /* \u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e */\nlcd_write_ram_prepare();    /* \u5f00\u59cb\u5199\u5165GRAM \u5c31\u662f\u8f93\u51650X2C\u547d\u4ee4*/\nlcd_wr_data(color);\n}\n</code></pre> <p><code>lcd_show_char</code></p> <pre><code>/**\n * @brief       \u5728\u6307\u5b9a\u4f4d\u7f6e\u663e\u793a\u4e00\u4e2a\u5b57\u7b26\n * @param       x,y  : \u5750\u6807\n * @param       chr  : \u8981\u663e\u793a\u7684\u5b57\u7b26:\" \"---&gt;\"~\"\n * @param       size : \u5b57\u4f53\u5927\u5c0f 12/16/24/32\n * @param       mode : \u53e0\u52a0\u65b9\u5f0f(1); \u975e\u53e0\u52a0\u65b9\u5f0f(0);\n * @param       color : \u5b57\u7b26\u7684\u989c\u8272;\n * @retval      \u65e0\n */\nvoid lcd_show_char(uint16_t x, uint16_t y, char chr, uint8_t size, uint8_t mode, uint16_t color)\n{\nuint8_t temp, t1, t;\nuint16_t y0 = y;\nuint8_t csize = 0;\nuint8_t *pfont = NULL;\ncsize = (size / 8 + ((size % 8) ? 1 : 0)) * (size / 2); /* \u5f97\u5230\u5b57\u4f53\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u70b9\u9635\u96c6\u6240\u5360\u7684\u5b57\u8282\u6570 */\nchr = chr - ' ';    /* \u5f97\u5230\u504f\u79fb\u540e\u7684\u503c\uff08ASCII\u5b57\u5e93\u662f\u4ece\u7a7a\u683c\u5f00\u59cb\u53d6\u6a21\uff0c\u6240\u4ee5-' '\u5c31\u662f\u5bf9\u5e94\u5b57\u7b26\u7684\u5b57\u5e93\uff09 */\nswitch (size)\n{\ncase 12:\npfont = (uint8_t *)asc2_1206[chr];  /* \u8c03\u75281206\u5b57\u4f53 */\nbreak;\ncase 16:\npfont = (uint8_t *)asc2_1608[chr];  /* \u8c03\u75281608\u5b57\u4f53 */\nbreak;\ncase 24:\npfont = (uint8_t *)asc2_2412[chr];  /* \u8c03\u75282412\u5b57\u4f53 */\nbreak;\ncase 32:\npfont = (uint8_t *)asc2_3216[chr];  /* \u8c03\u75283216\u5b57\u4f53 */\nbreak;\ndefault:\nreturn ;\n}\nfor (t = 0; t &lt; csize; t++)\n{\ntemp = pfont[t];    /* \u83b7\u53d6\u5b57\u7b26\u7684\u70b9\u9635\u6570\u636e */\nfor (t1 = 0; t1 &lt; 8; t1++)   /* \u4e00\u4e2a\u5b57\u82828\u4e2a\u70b9 */\n{\nif (temp &amp; 0x80)        /* \u6709\u6548\u70b9,\u9700\u8981\u663e\u793a \u6bcf\u6b21\u53ea\u5224\u65ad\u4e00\u4f4d \u6700\u9ad8\u4f4d \u4e0b\u9762\u4ee3\u7801temp\u5c31\u79fb\u4f4d\u4e86*/\n{\nlcd_draw_point(x, y, color);        /* \u753b\u70b9\u51fa\u6765,\u8981\u663e\u793a\u8fd9\u4e2a\u70b9 */\n}\nelse if (mode == 0)     /* \u65e0\u6548\u70b9,\u4e0d\u663e\u793a */\n{\nlcd_draw_point(x, y, g_back_color); /* \u753b\u80cc\u666f\u8272,\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u70b9\u4e0d\u663e\u793a(\u6ce8\u610f\u80cc\u666f\u8272\u7531\u5168\u5c40\u53d8\u91cf\u63a7\u5236) */\n}\ntemp &lt;&lt;= 1; /* \u79fb\u4f4d, \u4ee5\u4fbf\u83b7\u53d6\u4e0b\u4e00\u4e2a\u4f4d\u7684\u72b6\u6001 */\ny++;\nif (y &gt;= lcddev.height)return;  /* \u8d85\u533a\u57df\u4e86 */\nif ((y - y0) == size)   /* \u663e\u793a\u5b8c\u4e00\u5217\u4e86? */\n{\ny = y0; /* y\u5750\u6807\u590d\u4f4d */\nx++;    /* x\u5750\u6807\u9012\u589e */\nif (x &gt;= lcddev.width)return;   /* x\u5750\u6807\u8d85\u533a\u57df\u4e86 */\nbreak;\n}\n}\n}\n}\n</code></pre> <p><code>lcd_clear</code></p> <pre><code>/**\n * @brief       \u6e05\u5c4f\u51fd\u6570\n * @param       color: \u8981\u6e05\u5c4f\u7684\u989c\u8272\n * @retval      \u65e0\n */\nvoid lcd_clear(uint16_t color)\n{\nuint32_t index = 0;\nuint32_t totalpoint = lcddev.width;\ntotalpoint *= lcddev.height;    /* \u5f97\u5230\u603b\u70b9\u6570 */\nlcd_set_cursor(0x00, 0x0000);   /* \u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e */\nlcd_write_ram_prepare();        /* \u5f00\u59cb\u5199\u5165GRAM */\n/* \u4e3a\u4e86\u63d0\u9ad8\u5199\u5165\u901f\u5ea6, \u5c06lcd_wr_data\u51fd\u6570\u8fdb\u884c\u62c6\u5206, \u907f\u514d\u91cd\u590d\u8bbe\u7f6e\n     * RS, CS\u7684\u64cd\u4f5c, \u4ece\u800c\u63d0\u5347\u901f\u5ea6, \u4ece51\u5e27\u63d0\u9ad8\u523078\u5e27\u5de6\u53f3, \u63d0\u9ad850%\n     * \u6d4b\u8bd5\u6761\u4ef6: -O2\u4f18\u5316, \u7eaf\u5237\u5c4f\n     * \u5728\u6709\u901f\u5ea6\u8981\u6c42\u7684\u65f6\u5019, \u53ef\u4ee5\u7ee7\u7eed\u4f18\u5316: lcd_fill, lcd_color_fill, \n     * lcd_set_cursor \u548c lcd_draw_point \u7b49\u51fd\u6570, \u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u4f18\u5316\n     */\nLCD_RS(1);                      /* RS=1,\u8868\u793a\u5199\u6570\u636e */\nLCD_CS(0);\nfor (index = 0; index &lt; totalpoint; index++)\n{\nLCD_DATA_OUT(color);        /* \u5199\u5165\u8981\u5199\u7684\u6570\u636e */\nLCD_WR(0);\nLCD_WR(1);\n}\nLCD_CS(1);\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/LCD/#fsmc","title":"FSMC","text":"<p><sub>\u672a\u5f85\u5b8c\u7eed</sub></p>"},{"location":"EmbeddedSyS/STM32/OLED/","title":"OLED\u663e\u793a\u5c4f","text":"<p>\u5b66\u4e60\uff0c\u4e0d\u662f\u8ffd\u6c42\u901f\u5ea6\u7684\uff0c\u662f\u8ffd\u6c42\u8d28\u91cf\u7684</p> <p>\u5b66\u4e60\u8d44\u6599:</p> <ul> <li>\u3010\u6b63\u70b9\u539f\u5b50\u3011\u624b\u628a\u624b\u6559\u4f60\u5b66STM32 HAL\u5e93\u5f00\u53d1\u5168\u96c6</li> </ul>"},{"location":"EmbeddedSyS/STM32/OLED/#oled_1","title":"OLED\u57fa\u7840\u77e5\u8bc6","text":"<p>ATK_OLED\u6a21\u5757\u662f\u4e00\u5757\u5c0f\u5c3a\u5bf8\uff080.96\u5bf8\uff09\u3001\u9ad8\u4eae\u3001\u81ea\u5e26\u5347\u538b\u7535\u8def\u7684\u9ad8\u6027\u80fdOLED\u663e\u793a\u6a21\u5757\uff0c\u5206\u8fa8\u7387\u4e3a128 * 64\uff0c\u91c7\u7528SSD1306\u9a71\u52a8IC\uff0c\u8be5\u82af\u7247\u5185\u90e8\u96c6\u6210DCDC\u5347\u538b\uff0c\u4ec5\u97003.3V\u4f9b\u7535\u3002</p> <p>\u6a21\u5757\u652f\u63018\u4f4d6800\u5e76\u53e3\u30018\u4f4d8080\u5e76\u53e3\u30014\u7ebfSPI\u4ee5\u53caIIC\u7b494\u79cd\u901a\u4fe1\u63a5\u53e3\u3002</p> <p></p> <p>ATK_OLED\u5f15\u811a\u8bf4\u660e(8080\u5e76\u53e3\u6a21\u5f0f):</p> <ul> <li> <p>CS\uff1aOLED\u7247\u9009\u4fe1\u53f7\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09 </p> </li> <li> <p>WR\uff1a\u5411OLED\u5199\u5165\u6570\u636e</p> </li> <li> <p>RD\uff1a\u5411OLED\u8bfb\u53d6\u6570\u636e</p> </li> <li> <p>D[7:0]\uff1a8\u4f4d\u53cc\u5411\u6570\u636e\u7ebf</p> </li> <li> <p>RST(RES)\uff1a\u786c\u590d\u4f4dOLED\uff08\u4f4e\u7535\u5e73\u6709\u6548\uff09</p> </li> <li> <p>DC\uff1a\u6570\u636e/\u547d\u4ee4\u6807\u5fd7\uff080\uff0c\u547d\u4ee4\uff1b1\uff0c\u6570\u636e\uff09</p> </li> </ul> <p>OLED\u9a71\u52a8\u539f\u7406:</p> <ol> <li>\u9009\u62e9\u9a71\u52a8\u82af\u7247\u65f6\u5e8f(8080\u65f6\u5e8f)      --- \u6839\u636e\u65f6\u5e8f\u5b9e\u73b0\u6570\u636e\u5199\u5165/\u8bfb\u53d6</li> <li>\u521d\u59cb\u5316\u5e8f\u5217                                    --- \u7531\u5382\u5bb6\u63d0\u4f9b\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u5c4f\u5e55</li> <li>\u5b9e\u73b0\u753b\u70b9\u51fd\u6570\u3001\u8bfb\u70b9\u51fd\u6570(\u53ef\u9009)    ---- \u57fa\u4e8e\u8fd9\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u7ed8\u56fe\u529f\u80fd</li> </ol>"},{"location":"EmbeddedSyS/STM32/OLED/#ssd13068080","title":"SSD1306\u5de5\u4f5c\u65f6\u5e8f(8080\u65f6\u5e8f)","text":"<p>8080\u5e76\u53e3\u603b\u7ebf\u65f6\u5e8f\uff0c\u5e38\u7528\u4e8e\u5c4f\u5e55\u9a71\u52a8IC\u7684\u8bbf\u95ee\uff0c\u7531Intel\u63d0\u51fa\uff0c\u4e5f\u53eb\u82f1\u7279\u5c14\u603b\u7ebf</p> <p>8080\u5e76\u53e3\u8bfb/\u5199\u7684\u8fc7\u7a0b\uff1a</p> <ol> <li>\u8bbe\u7f6eDC\u4e3a\u9ad8(\u6570\u636e)/\u4f4e(\u547d\u4ee4)  --- \u6839\u636e --&gt; \u5199\u5165/\u8bfb\u53d6\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u62c9\u4f4e\u7247\u9009                                --- \u9009\u4e2d SSD1306\u9a71\u52a8\u82af\u7247</li> <li>\u8bbe\u7f6eRD/WR\u4e3a\u4f4e                   --- \u6839\u636e --&gt; \u8bfb\u6570\u636e\u8fd8\u662f\u5199\u6570\u636e</li> <li>\u51c6\u5907\u6570\u636e \u5e76\u884c\u76848\u4f4d(\u4e00\u4e2a\u5b57\u8282) \u540c\u65f6\u51c6\u5907\u5411SSD1306/\u5355\u7247\u673a \u53d1\u9001</li> <li>\u62c9\u9ad8RD/WR\uff0c\u51fa\u73b0\u4e0a\u5347\u6cbf    --- \u5728RD\u7684\u4e0a\u5347\u6cbf\uff0c\u4f7f\u6570\u636e\u9501\u5b58\u5230\u6570\u636e\u7ebfD[7:0]\u4e0a --&gt; \u5355\u7247\u673a\u8bfb\u53d6\u6570\u636e/\u547d\u4ee4</li> </ol> <p>\u200b                                                       --- \u5728WR\u7684\u4e0a\u5347\u6cbf\uff0c\u4f7f\u6570\u636e\u5199\u5165\u5230SSD1306 --&gt; \u5355\u7247\u673a\u5199\u5165\u6570\u636e/\u547d\u4ee4</p> <p>8080\u65f6\u5e8f--\u5199\u65f6\u5e8f</p> <p></p> <p><code>oled_wr_byte</code></p> <pre><code>void oled_data_out(uint8_t data)\n{\nGPIOC-&gt;ODR = (GPIOC-&gt;ODR &amp; 0XFF00) | (data &amp; 0X00FF);\n}\nvoid oled_wr_byte(uint8_t data, uint8_t cmd) //\u5355\u7247\u673a\u53d1\u9001\u4e00\u5b57\u8282\n{   OLED_RS (cmd);  /* \u6570\u636e\u7c7b\u578b\uff0c\u7531\u4f20\u53c2\u51b3\u5b9a */\nOLED_CS ( 0 );  /* \u62c9\u4f4e\u7247\u9009\u7ebf\uff0c\u9009\u4e2dSSD1306 */\nOLED_WR ( 0 );  /* \u62c9\u4f4eWR\u7ebf\uff0c\u51c6\u5907\u6570\u636e */\noled_data_out(data); /* WR\u4f4e\u7535\u5e73\u671f\u95f4\uff0c\u51c6\u5907\u6570\u636e */\nOLED_WR ( 1 );  /* \u5728WR\u4e0a\u5347\u6cbf\uff0c\u6570\u636e\u53d1\u51fa */\nOLED_CS ( 1 );  /* \u53d6\u6d88\u7247\u9009 */\nOLED_RS ( 1 );  /* \u91ca\u653eRS\u7ebf\uff0c\u6062\u590d\u9ed8\u8ba4 */\n}\n</code></pre> <p>8080\u65f6\u5e8f--\u8bfb\u65f6\u5e8f</p>"},{"location":"EmbeddedSyS/STM32/OLED/#ssd1306","title":"SSD1306\u82af\u7247\u6307\u4ee4","text":"<p>SSD1306\u6709\u4e09\u79cd\u8bbe\u7f6e\u5185\u5b58\u5730\u5740\u6a21\u5f0f\uff1a\u9875\u5730\u5740\u6a21\u5f0f(\u4ee5\u8be5\u6a21\u5f0f\u5b66\u4e60)\uff0c\u6c34\u5e73\u5730\u5740\u6a21\u5f0f\u548c\u5782\u76f4\u5730\u5740\u6a21\u5f0f</p> <p>SSD1306\u7684\u90e8\u5206\u6307\u4ee4:</p> <p></p> \u6307\u4ee4 \u540d\u79f0 \u8bf4\u660e 0XA0/0xA1 \u8bbe\u7f6e\u5217\u91cd\u6620\u5c04 A0 \uff0c\u6b63\u5e38\u6a21\u5f0f \uff0c\u5217\u5730\u57400\u6620\u5c04\u5230SEG0    A1,\u91cd\u6620\u5c04\u6a21\u5f0f\uff0c\u5217\u5730\u5740127\u6620\u5c04\u5230SEG0 0xC0/0xC8 \u8bbe\u7f6e\u5217\u8f93\u51fa\u626b\u63cf\u65b9\u5411 C0 \uff0c\u6b63\u5e38\u6a21\u5f0f\uff0c\u4eceCOM0\u5411COM63\u626b\u63cf  C8\uff0c\u91cd\u6620\u5c04\u6a21\u5f0f\uff0c\u4eceCOM63\u5411COM0\u626b\u63cf 0X20 \u53d1\u9001\u5185\u5b58\u5730\u5740\u6a21\u5f0f\u547d\u4ee4 \u6709\u4e09\u79cd\u8bbe\u7f6e\u5185\u5b58\u5730\u5740\u6a21\u5f0f(\u9ed8\u8ba4\u9875\u5730\u5740\u6a21\u5f0f) 0X02 \u53d1\u9001\u9875\u5730\u5740\u6a21\u5f0f\u547d\u4ee4"},{"location":"EmbeddedSyS/STM32/OLED/#ssd1306gram","title":"SSD1306\u7684\u56fe\u50cf\u663e\u793a\u539f\u7406(GRAM)","text":"<p>SSD1306\u7684GDDRAM\uff08Graphic Display Data RAM \uff09\u56fe\u50cf\u663e\u793a\u6570\u636e\u7684\u5185\u90e8\u7ed3\u6784\u5730\u5740\u5206\u5e03:</p> <p></p> <p>\u56fe\u5f62\u663e\u793a\u6570\u636eRAM\u662f\u4e00\u4e2a\u4f4d\u6620\u5c04\u9759\u6001RAM\uff0c\u4fdd\u5b58\u8981\u663e\u793a\u7684\u4f4d\u6a21\u5f0f\u3002\u5185\u5b58\u5927\u5c0f\u4e3a128 * 64\u4f4d\uff0c\u53ef\u5206\u4e3a8\u9875\uff0c\u4ece\u98750\u5230\u98757\uff0c\u7528\u4e8e\u9ed1\u767d128 * 64\u70b9\u9635\u663e\u793a\u3002</p> <p></p> <p>\u4f7f\u7528\u9875\u5730\u5740\u6a21\u5f0f\u65f6,\u901a\u8fc7\u9875\u5730\u5740(Y\u8f74\u5750\u6807)\u548c\u5217\u5730\u5740(X\u8f74\u5750\u6807)\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u5176\u6240\u5728\u7684\u8d77\u59cb\u4f4d\u7f6e,\u5f53\u4e00\u4e2a\u6570\u636e\u5b57\u8282(8\u4f4d) \u5199\u5165GDDRAM\u65f6,\u5f53\u524d \u5217SEG \u7684 \u540c\u4e00\u9875(PAGE) \u7684 \u6240\u6709\u884c\uff08COM\uff09\u56fe\u50cf\u6570\u636e\u90fd\u88ab\u586b\u5145\uff08\u5373\u7531\u5217\u5730\u5740\u6307\u9488\u6307\u5411\u7684\u6574\u5217\uff088\u4f4d\uff09\u88ab\u586b\u5145\u3002\u6570\u636e\u4f4d D0\u5199\u5165\u9876\u884c\uff0c\u6570\u636e\u4f4dD7\u5199\u5165\u5e95\u884c\uff09\u5982\u56fe8-14\u6240\u793a\u3002</p> <p></p> <p>\u5bf9GRAM\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5217\u5730\u5740\u6307\u9488\u4f1a\u81ea\u52a8\u9012\u589e\u3002\u5f53\u5217\u5730\u5740\u6307\u9488\u5230\u8fbe\u5217\u7ed3\u675f\u5730\u5740\u65f6\uff0c\u91cd\u7f6e\u4e3a\u5f00\u59cb\u5730\u5740\uff0c\u4f46\u9875\u5730\u5740\u6307\u9488\u4e0d\u53d8\u3002\u7528\u6237\u5fc5\u987b\u8bbe\u7f6e\u65b0\u7684\u9875\u9762\u548c\u5217\u5730\u5740(\u6211\u8ba4\u4e3a\u5217\u5730\u5740\u53ef\u4e0d\u8bbe\u7f6e\uff0c\u56e0\u4e3a\u5b83\u4f1a\u81ea\u52a8\u53d8\u6210\u5f00\u59cb\u5730\u5740\uff0c\u4f46\u624b\u52a8\u8bbe\u7f6e\u53ef\u4ee5\u9632\u4e07\u4e00)\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u4e0b\u4e00\u9875GRAM\u5185\u5bb9\u3002</p> <p>\u901a\u8fc7\u4ee5\u4e0a\u7684\u65b9\u5f0f \u5411\u90a3\u4e2a\u5750\u6807 \u5199\u5165\u6570\u636e 0X01 \u5c31\u53ef\u4ee5\u5c06 \u7b2c\u4e00\u4e2a\u70b9 \u70b9\u4eae\u4e86 \u4f46\u662f\u7531\u4e8e\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u5199\u5165\u65b9\u5f0f \u5c31\u4f1a\u9020\u6210\u5f71\u54cd\u5176\u5b83\u70b9\u7684\u95ee\u9898\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u5462?</p> <p>PS\uff1a\u56e0\u4e3a\u9875\u5730\u5740\u76f8\u5f53\u4e8e 8\u884c\u7684\u9996\u5730\u5740 \u60f3\u7cbe\u51c6\u77e5\u9053\u54ea\u4e00\u4e2a\u70b9\u7684\u5750\u6807</p> <p>\u89e3\u51b3\u663e\u793a\u8986\u76d6\u95ee\u9898\uff1a</p> <p>\u65b9\u5f0f\u4e00\uff08\u6548\u7387\u6162\uff09\uff1a</p> <ul> <li> <p>\u753b\u70b9\u524d\uff0c\u5fc5\u987b\u8981\u628a\u8bbe\u7f6e\u7684\u70b9\u6240\u5728\u5b57\u8282\u7684\u6bcf\u4e00\u4f4d\u5f04\u6e05\u695a\u5f53\u524d\u72b6\u6001\uff080/1\uff09 </p> </li> <li> <p>\u80fd\u8bfb\u6a21\u5f0f\u4e0b(SPI\u548cI2C\u4e0d\u652f\u6301):\u8bfb--&gt;\u6539--&gt;\u5199</p> </li> </ul> <p>\u65b9\u5f0f\u4e8c\uff08\u5360\u7528\u5355\u7247\u673a\u5185\u5b58\uff09\uff1a</p> <p>\u5efa\u7acb\u4e00\u4e2aOLED\u7684GRAM\uff1a\u5355\u7247\u673a\u5185\u90e8\u9700\u8981128*8\u4e2a\u5b57\u8282\uff0c\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ea\u662f\u4fee\u6539\u5355\u7247\u673a\u4e0a\u7684GRAM\uff08\u5b9e\u9645\u4e0a\u5c31\u662fSRAM\uff09\uff0c\u5728\u4fee\u6539\u5b8c\u4e4b\u540e\uff0c\u4e00\u6b21\u6027\u628a\u5355\u7247\u673a\u5185\u90e8\u7684GRAM\u5199\u5165\u5230OLED\u7684GRAM\u3002</p> <p>\u6ce8\u610f\uff1aSRAM\u5f88\u5c0f\u7684\u7684\u5355\u7247\u673a\uff0c\u5185\u5b58\u4e0d\u591f\uff0c\u63a8\u8350\u8fd8\u662f\u4f7f\u7528\u5e76\u53e3\u6a21\u5f0f(\u65b9\u5f0f\u4e00)\uff0c\u8282\u7701\u5185\u5b58</p> <p><code>oled_refresh_gram.c</code></p> <pre><code>/*\n * OLED\u7684\u663e\u5b58\n * \u6bcf\u4e2a\u5b57\u8282\u8868\u793a8\u4e2a\u50cf\u7d20, 128,\u8868\u793a\u6709128\u5217, 8\u8868\u793a\u670964\u884c, \u9ad8\u4f4d\u8868\u793a\u7b2c\u884c\u6570.\n * \u6bd4\u5982:g_oled_gram[0][0],\u5305\u542b\u4e86\u7b2c\u4e00\u5217,\u7b2c1~8\u884c\u7684\u6570\u636e. \n * \u6ce8\u610f: \u5750\u6807\u8d77\u59cb\u4f4d\u7f6e\u4e5f\u662f(0,0)\u54e6\n * g_oled_gram[0][0].b7,\u5373\u8868\u793a\u5750\u6807(0,7) \u7c7b\u4f3c\u7684: g_oled_gram[1][0].b6,\u8868\u793a\u5750\u6807(1,6), g_oled_gram[10][1].b5,\u8868\u793a\u5750\u6807(10,13),\n *\n * \u5b58\u653e\u683c\u5f0f\u5982\u4e0b(\u9ad8\u4f4d\u8868\u793a\u4f4e\u884c\u6570).\n * [0]0 1 2 3 ... 127\n * [1]0 1 2 3 ... 127\n * [2]0 1 2 3 ... 127\n * [3]0 1 2 3 ... 127\n * [4]0 1 2 3 ... 127\n * [5]0 1 2 3 ... 127\n * [6]0 1 2 3 ... 127\n * [7]0 1 2 3 ... 127\n */\nstatic uint8_t g_oled_gram[128][8];//128\u5217 8\u9875\n/**\n * @brief       \u66f4\u65b0\u663e\u5b58\u5230OLED\n * @param       \u65e0\n * @retval      \u65e0\n */\nvoid oled_refresh_gram(void)\n{\nuint8_t i, n;\nfor (i = 0; i &lt; 8; i++)\n{\noled_wr_byte (0xb0 + i, OLED_CMD);  /* \u8bbe\u7f6e\u9875\u5730\u5740\uff080~7\uff09 */\noled_wr_byte (0x00, OLED_CMD);      /* \u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u4f4e\u5730\u5740 */\noled_wr_byte (0x10, OLED_CMD);      /* \u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u2014\u5217\u9ad8\u5730\u5740 */\nfor (n = 0; n &lt; 128; n++)\n{\noled_wr_byte(g_oled_gram[n][i], OLED_DATA);\n}\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/OLED/#ssd1306_oled","title":"SSD1306_OLED\u7684\u771f\u5b9e\u5750\u6807\u7cfb","text":"<p><code>oled_draw_point.c</code></p> <pre><code>/**\n * @brief       OLED\u753b\u70b9\n * @param       x  : 0~127\n * @param       y  : 0~63\n * @param       dot: 1 \u586b\u5145 0,\u6e05\u7a7a\n * @retval      \u65e0\n */\nvoid oled_draw_point(uint8_t x, uint8_t y, uint8_t dot)\n{\nuint8_t pos, bx, temp = 0;//pos -- \u9875 \uff0cbx -- \u9875\u67098\u884c\u4e2d\u7684\u7b2c\u51e0\u4f4d\nif (x &gt; 127 || y &gt; 63) return;  /* \u8d85\u51fa\u8303\u56f4\u4e86. */\npos = y / 8;        /* \u8ba1\u7b97GRAM\u91cc\u9762\u7684y\u5750\u6807\u6240\u5728\u7684\u5b57\u8282, \u6bcf\u4e2a\u5b57\u8282\u53ef\u4ee5\u5b58\u50a88\u4e2a\u884c\u5750\u6807 */\nbx = y % 8;         /* \u53d6\u4f59\u6570,\u65b9\u4fbf\u8ba1\u7b97y\u5728\u5bf9\u5e94\u5b57\u8282\u91cc\u9762\u7684\u4f4d\u7f6e,\u53ca\u884c(y)\u4f4d\u7f6e */\ntemp = 1 &lt;&lt; bx;     /* \u9ad8\u4f4d\u8868\u793a\u4f4e\u884c\u53f7, \u5f97\u5230y\u5bf9\u5e94\u7684bit\u4f4d\u7f6e,\u5c06\u8be5bit\u5148\u7f6e1 */\nif (dot)                        /* \u753b\u5b9e\u5fc3\u70b9 */\n{\ng_oled_gram[x][pos] |= temp;\n}\nelse                            /* \u753b\u7a7a\u70b9,\u5373\u4e0d\u663e\u793a */\n{\ng_oled_gram[x][pos] &amp;= ~temp;\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/OLED/#olde","title":"OLDE\u663e\u793a\u5b57\u7b26","text":"<ol> <li>\u663e\u793a\u5b57\u7b26\uff0c\u5fc5\u987b\u5148\u6709\u5176\u70b9\u9635\u6570\u636e\uff0c\u70b9\u9635\u6570\u636e\u7684\u96c6\u5408\uff0c\u53eb\u505a\u5b57\u5e93</li> <li>\u5355\u7247\u673a\u6839\u636e\u70b9\u9635\u6570\u636e\u6309\u53d6\u6a21\u65b9\u5411\u8fdb\u884c\u63cf\u70b9\u8fd8\u539f\uff0c\u5c31\u80fd\u663e\u793a\u5b57\u7b26</li> <li>ASCII\u5b57\u7b26\u5bbd\u5ea6 = \u6c49\u5b57\u5bbd\u5ea6\u7684\u4e00\u534a</li> </ol> <pre><code>uint8_t temp, t1, t;\nuint8_t y0 = y;     /* \u4fdd\u5b58y\u7684\u521d\u503c */\nfor(t = 0; t &lt; 16; t++)  /* ASCL\u603b\u517116\u4e2a\u5b57\u8282\uff0c\u8981\u904d\u5386\u4e00\u904d */\n{\ntemp = oled_ascii_1608[t];  /* \u4f9d\u6b21\u83b7\u53d6\u70b9\u9635\u6570\u636e */\nfor(t1 = 0; t1 &lt; 8; t1++)\n{\nif(temp &amp; 0X80)          /* \u8fd9\u4e2a\u70b9\u6709\u6548\uff0c\u9700\u8981\u753b\u51fa\u6765 \u6bcf\u6b21\u53ea\u5224\u65ad\u4e00\u4f4d \u5224\u65ad\u6700\u9ad8\u4f4d*/&lt;----\u00b7\noled_draw_point(x, y, mode);//mode=1                               |\nelse                    /* \u8fd9\u4e2a\u70b9\u65e0\u6548\uff0c\u4e0d\u9700\u8981\u753b\u51fa\u6765 */                         |            oled_draw_point(x, y, !mode);                                      |\n|\ntemp &lt;&lt;= 1;      /* \u4f4e\u4f4d\u6570\u636e\u5f80\u9ad8\u4f4d\u79fb\u4f4d\uff0c\u6700\u9ad8\u4f4d\u6570\u636e\u76f4\u63a5\u4e22\u5f03 */  ------------------&gt;\ny++;            /* y\u5750\u6807\u81ea\u589e */\nif((y - y0) == 16) /* \u663e\u793a\u5b8c\u4e00\u5217\u4e86 */\n{\ny = y0;     /* y\u5750\u6807\u590d\u4f4d */\nx++;       /* x\u5750\u6807\u9012\u589e */\nbreak;    /* \u8df3\u51fa for\u5faa\u73af */\n}\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/OLED/#jkd","title":"JKD\u4ee3\u7801\u7a0b\u5e8f","text":"<p><code>OLED.c</code></p> <pre><code>#include \"stm32f10x.h\"\n#include \"OLED_Font.h\"\n/*\u5f15\u811a\u914d\u7f6e*/\n#define OLED_W_SCL(x)   GPIO_WriteBit(GPIOB, GPIO_Pin_8, (BitAction)(x))\n#define OLED_W_SDA(x)   GPIO_WriteBit(GPIOB, GPIO_Pin_9, (BitAction)(x))\n/*\u5f15\u811a\u521d\u59cb\u5316*/\nvoid OLED_I2C_Init(void)\n{\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);\nGPIO_InitTypeDef GPIO_InitStructure;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;\nGPIO_Init(GPIOB, &amp;GPIO_InitStructure);\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;\nGPIO_Init(GPIOB, &amp;GPIO_InitStructure);\nOLED_W_SCL(1);\nOLED_W_SDA(1);\n}\n/**\n  * @brief  I2C\u5f00\u59cb\n  * @param  \u65e0\n  * @retval \u65e0\n  */\nvoid OLED_I2C_Start(void)\n{\nOLED_W_SDA(1);\nOLED_W_SCL(1);\nOLED_W_SDA(0);\nOLED_W_SCL(0);\n}\n/**\n  * @brief  I2C\u505c\u6b62\n  * @param  \u65e0\n  * @retval \u65e0\n  */\nvoid OLED_I2C_Stop(void)\n{\nOLED_W_SDA(0);\nOLED_W_SCL(1);\nOLED_W_SDA(1);\n}\n/**\n  * @brief  I2C\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\n  * @param  Byte \u8981\u53d1\u9001\u7684\u4e00\u4e2a\u5b57\u8282\n  * @retval \u65e0\n  */\nvoid OLED_I2C_SendByte(uint8_t Byte)\n{\nuint8_t i;\nfor (i = 0; i &lt; 8; i++)\n{\nOLED_W_SDA(Byte &amp; (0x80 &gt;&gt; i));\nOLED_W_SCL(1);\nOLED_W_SCL(0);\n}\nOLED_W_SCL(1);    //\u989d\u5916\u7684\u4e00\u4e2a\u65f6\u949f\uff0c\u4e0d\u5904\u7406\u5e94\u7b54\u4fe1\u53f7\nOLED_W_SCL(0);\n}\n/**\n  * @brief  OLED\u5199\u547d\u4ee4\n  * @param  Command \u8981\u5199\u5165\u7684\u547d\u4ee4\n  * @retval \u65e0\n  */\nvoid OLED_WriteCommand(uint8_t Command)\n{\nOLED_I2C_Start();\nOLED_I2C_SendByte(0x78);      //\u4ece\u673a\u5730\u5740\nOLED_I2C_SendByte(0x00);      //\u5199\u547d\u4ee4\nOLED_I2C_SendByte(Command); OLED_I2C_Stop();\n}\n/**\n  * @brief  OLED\u5199\u6570\u636e\n  * @param  Data \u8981\u5199\u5165\u7684\u6570\u636e\n  * @retval \u65e0\n  */\nvoid OLED_WriteData(uint8_t Data)\n{\nOLED_I2C_Start();\nOLED_I2C_SendByte(0x78);      //\u4ece\u673a\u5730\u5740\nOLED_I2C_SendByte(0x40);      //\u5199\u6570\u636e\nOLED_I2C_SendByte(Data);\nOLED_I2C_Stop();\n}\n/**\n  * @brief  OLED\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\n  * @param  Y \u4ee5\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9\uff0c\u5411\u4e0b\u65b9\u5411\u7684\u5750\u6807\uff0c\u8303\u56f4\uff1a0~7\n  * @param  X \u4ee5\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9\uff0c\u5411\u53f3\u65b9\u5411\u7684\u5750\u6807\uff0c\u8303\u56f4\uff1a0~127\n  * @retval \u65e0\n  */\nvoid OLED_SetCursor(uint8_t Y, uint8_t X)\n{\nOLED_WriteCommand(0xB0 | Y);  //\u8bbe\u7f6eY\u4f4d\u7f6e\nOLED_WriteCommand(0x10 | ((X &amp; 0xF0) &gt;&gt; 4));  //\u8bbe\u7f6eX\u4f4d\u7f6e\u9ad84\u4f4d\nOLED_WriteCommand(0x00 | (X &amp; 0x0F));   //\u8bbe\u7f6eX\u4f4d\u7f6e\u4f4e4\u4f4d\n}\n/**\n  * @brief  OLED\u6e05\u5c4f\n  * @param  \u65e0\n  * @retval \u65e0\n  */\nvoid OLED_Clear(void)\n{  uint8_t i, j;\nfor (j = 0; j &lt; 8; j++)\n{\nOLED_SetCursor(j, 0);\nfor(i = 0; i &lt; 128; i++)\n{\nOLED_WriteData(0x00);\n}\n}\n}\n/**\n  * @brief  OLED\u663e\u793a\u4e00\u4e2a\u5b57\u7b26\n  * @param  Line \u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  Char \u8981\u663e\u793a\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u8303\u56f4\uff1aASCII\u53ef\u89c1\u5b57\u7b26\n  * @retval \u65e0\n  */\nvoid OLED_ShowChar(uint8_t Line, uint8_t Column, char Char)\n{       uint8_t i;\nOLED_SetCursor((Line - 1) * 2, (Column - 1) * 8); //\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\u5728\u4e0a\u534a\u90e8\u5206\nfor (i = 0; i &lt; 8; i++)\n{\nOLED_WriteData(OLED_F8x16[Char - ' '][i]);  //\u663e\u793a\u4e0a\u534a\u90e8\u5206\u5185\u5bb9\n}\nOLED_SetCursor((Line - 1) * 2 + 1, (Column - 1) * 8); //\u8bbe\u7f6e\u5149\u6807\u4f4d\u7f6e\u5728\u4e0b\u534a\u90e8\u5206\nfor (i = 0; i &lt; 8; i++)\n{\nOLED_WriteData(OLED_F8x16[Char - ' '][i + 8]);  //\u663e\u793a\u4e0b\u534a\u90e8\u5206\u5185\u5bb9\n}\n}\n/**\n  * @brief  OLED\u663e\u793a\u5b57\u7b26\u4e32\n  * @param  Line \u8d77\u59cb\u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u8d77\u59cb\u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  String \u8981\u663e\u793a\u7684\u5b57\u7b26\u4e32\uff0c\u8303\u56f4\uff1aASCII\u53ef\u89c1\u5b57\u7b26\n  * @retval \u65e0\n  */\nvoid OLED_ShowString(uint8_t Line, uint8_t Column, char *String)\n{\nuint8_t i;\nfor (i = 0; String[i] != '\\0'; i++)\n{\nOLED_ShowChar(Line, Column + i, String[i]);\n}\n}\n/**\n  * @brief  OLED\u6b21\u65b9\u51fd\u6570\n  * @retval \u8fd4\u56de\u503c\u7b49\u4e8eX\u7684Y\u6b21\u65b9\n  */\nuint32_t OLED_Pow(uint32_t X, uint32_t Y)\n{\nuint32_t Result = 1;\nwhile (Y--)\n{\nResult *= X;\n}\nreturn Result;\n}\n/**\n  * @brief  OLED\u663e\u793a\u6570\u5b57\uff08\u5341\u8fdb\u5236\uff0c\u6b63\u6570\uff09\n  * @param  Line \u8d77\u59cb\u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u8d77\u59cb\u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  Number \u8981\u663e\u793a\u7684\u6570\u5b57\uff0c\u8303\u56f4\uff1a0~4294967295\n  * @param  Length \u8981\u663e\u793a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u8303\u56f4\uff1a1~10\n  * @retval \u65e0\n  */\nvoid OLED_ShowNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)\n{\nuint8_t i;\nfor (i = 0; i &lt; Length; i++)  {\nOLED_ShowChar(Line, Column + i, Number / OLED_Pow(10, Length - i - 1) % 10 + '0');\n}\n}\n/**\n  * @brief  OLED\u663e\u793a\u6570\u5b57\uff08\u5341\u8fdb\u5236\uff0c\u5e26\u7b26\u53f7\u6570\uff09\n  * @param  Line \u8d77\u59cb\u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u8d77\u59cb\u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  Number \u8981\u663e\u793a\u7684\u6570\u5b57\uff0c\u8303\u56f4\uff1a-2147483648~2147483647\n  * @param  Length \u8981\u663e\u793a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u8303\u56f4\uff1a1~10\n  * @retval \u65e0\n  */\nvoid OLED_ShowSignedNum(uint8_t Line, uint8_t Column, int32_t Number, uint8_t Length)\n{\nuint8_t i;\nuint32_t Number1;\nif (Number &gt;= 0)\n{\nOLED_ShowChar(Line, Column, '+');\nNumber1 = Number;\n}\nelse\n{\nOLED_ShowChar(Line, Column, '-');\nNumber1 = -Number;\n}\nfor (i = 0; i &lt; Length; i++)  {\nOLED_ShowChar(Line, Column + i + 1, Number1 / OLED_Pow(10, Length - i - 1) % 10 + '0');\n}\n}\n/**\n  * @brief  OLED\u663e\u793a\u6570\u5b57\uff08\u5341\u516d\u8fdb\u5236\uff0c\u6b63\u6570\uff09\n  * @param  Line \u8d77\u59cb\u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u8d77\u59cb\u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  Number \u8981\u663e\u793a\u7684\u6570\u5b57\uff0c\u8303\u56f4\uff1a0~0xFFFFFFFF\n  * @param  Length \u8981\u663e\u793a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u8303\u56f4\uff1a1~8\n  * @retval \u65e0\n  */\nvoid OLED_ShowHexNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)\n{\nuint8_t i, SingleNumber;\nfor (i = 0; i &lt; Length; i++)  {\nSingleNumber = Number / OLED_Pow(16, Length - i - 1) % 16;\nif (SingleNumber &lt; 10)\n{\nOLED_ShowChar(Line, Column + i, SingleNumber + '0');\n}\nelse\n{\nOLED_ShowChar(Line, Column + i, SingleNumber - 10 + 'A');\n}\n}\n}\n/**\n  * @brief  OLED\u663e\u793a\u6570\u5b57\uff08\u4e8c\u8fdb\u5236\uff0c\u6b63\u6570\uff09\n  * @param  Line \u8d77\u59cb\u884c\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~4\n  * @param  Column \u8d77\u59cb\u5217\u4f4d\u7f6e\uff0c\u8303\u56f4\uff1a1~16\n  * @param  Number \u8981\u663e\u793a\u7684\u6570\u5b57\uff0c\u8303\u56f4\uff1a0~1111 1111 1111 1111\n  * @param  Length \u8981\u663e\u793a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u8303\u56f4\uff1a1~16\n  * @retval \u65e0\n  */\nvoid OLED_ShowBinNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length)\n{\nuint8_t i;\nfor (i = 0; i &lt; Length; i++)\n{\nOLED_ShowChar(Line, Column + i, Number / OLED_Pow(2, Length - i - 1) % 2 + '0');\n}\n}\n/**\n  * @brief  OLED\u521d\u59cb\u5316\n  * @param  \u65e0\n  * @retval \u65e0\n  */\nvoid OLED_Init(void)\n{\nuint32_t i, j;\nfor (i = 0; i &lt; 1000; i++)            //\u4e0a\u7535\u5ef6\u65f6\n{\nfor (j = 0; j &lt; 1000; j++);\n}\nOLED_I2C_Init();          //\u7aef\u53e3\u521d\u59cb\u5316\nOLED_WriteCommand(0xAE);  //\u5173\u95ed\u663e\u793a\nOLED_WriteCommand(0xD5);  //\u8bbe\u7f6e\u663e\u793a\u65f6\u949f\u5206\u9891\u6bd4/\u632f\u8361\u5668\u9891\u7387\nOLED_WriteCommand(0x80);\nOLED_WriteCommand(0xA8);  //\u8bbe\u7f6e\u591a\u8def\u590d\u7528\u7387\nOLED_WriteCommand(0x3F);\nOLED_WriteCommand(0xD3);  //\u8bbe\u7f6e\u663e\u793a\u504f\u79fb\nOLED_WriteCommand(0x00);\nOLED_WriteCommand(0x40);  //\u8bbe\u7f6e\u663e\u793a\u5f00\u59cb\u884c\nOLED_WriteCommand(0xA1);  //\u8bbe\u7f6e\u5de6\u53f3\u65b9\u5411\uff0c0xA1\u6b63\u5e38 0xA0\u5de6\u53f3\u53cd\u7f6e\nOLED_WriteCommand(0xC8);  //\u8bbe\u7f6e\u4e0a\u4e0b\u65b9\u5411\uff0c0xC8\u6b63\u5e38 0xC0\u4e0a\u4e0b\u53cd\u7f6e\nOLED_WriteCommand(0xDA);  //\u8bbe\u7f6eCOM\u5f15\u811a\u786c\u4ef6\u914d\u7f6e\nOLED_WriteCommand(0x12);\nOLED_WriteCommand(0x81);  //\u8bbe\u7f6e\u5bf9\u6bd4\u5ea6\u63a7\u5236\nOLED_WriteCommand(0xCF);\nOLED_WriteCommand(0xD9);  //\u8bbe\u7f6e\u9884\u5145\u7535\u5468\u671f\nOLED_WriteCommand(0xF1);\nOLED_WriteCommand(0xDB);  //\u8bbe\u7f6eVCOMH\u53d6\u6d88\u9009\u62e9\u7ea7\u522b\nOLED_WriteCommand(0x30);\nOLED_WriteCommand(0xA4);  //\u8bbe\u7f6e\u6574\u4e2a\u663e\u793a\u6253\u5f00/\u5173\u95ed\nOLED_WriteCommand(0xA6);  //\u8bbe\u7f6e\u6b63\u5e38/\u5012\u8f6c\u663e\u793a\nOLED_WriteCommand(0x8D);  //\u8bbe\u7f6e\u5145\u7535\u6cf5\nOLED_WriteCommand(0x14);\nOLED_WriteCommand(0xAF);  //\u5f00\u542f\u663e\u793a\nOLED_Clear();             //OLED\u6e05\u5c4f\n}\n</code></pre> <p><code>OLED.h</code></p> <pre><code>#ifndef __OLED_H\n#define __OLED_H\nvoid OLED_Init(void);\nvoid OLED_Clear(void);\nvoid OLED_ShowChar(uint8_t Line, uint8_t Column, char Char);\nvoid OLED_ShowString(uint8_t Line, uint8_t Column, char *String);\nvoid OLED_ShowNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length);\nvoid OLED_ShowSignedNum(uint8_t Line, uint8_t Column, int32_t Number, uint8_t Length);\nvoid OLED_ShowHexNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length);\nvoid OLED_ShowBinNum(uint8_t Line, uint8_t Column, uint32_t Number, uint8_t Length);\n#endif\n</code></pre> <p><code>OLED_FONT.h</code></p> <pre><code>#ifndef __OLED_FONT_H\n#define __OLED_FONT_H\n/*OLED\u5b57\u6a21\u5e93\uff0c\u5bbd8\u50cf\u7d20\uff0c\u9ad816\u50cf\u7d20*/\nconst uint8_t OLED_F8x16[][16]=\n{\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//  0\n0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//! 1\n0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//\" 2\n0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,\n0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//# 3\n0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,\n0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$ 4\n0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,\n0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//% 5\n0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,\n0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&amp; 6\n0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//' 7\n0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,\n0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//( 8\n0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,\n0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//) 9\n0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,\n0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//* 10\n0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,\n0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+ 11\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//, 12\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//- 13\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//. 14\n0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,\n0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,/// 15\n0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,\n0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//0 16\n0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,\n0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//1 17\n0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,\n0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//2 18\n0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,\n0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//3 19\n0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,\n0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//4 20\n0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,\n0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//5 21\n0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,\n0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//6 22\n0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,\n0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//7 23\n0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,\n0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//8 24\n0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,\n0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//9 25\n0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,\n0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//: 26\n0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,\n0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//; 27\n0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,\n0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//&lt; 28\n0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,\n0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//= 29\n0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,\n0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//&gt; 30\n0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,\n0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//? 31\n0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,\n0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@ 32\n0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,\n0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A 33\n0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,\n0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B 34\n0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,\n0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C 35\n0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,\n0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D 36\n0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,\n0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E 37\n0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,\n0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F 38\n0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,\n0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G 39\n0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,\n0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H 40\n0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,\n0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I 41\n0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,\n0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J 42\n0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,\n0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K 43\n0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,\n0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L 44\n0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,\n0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M 45\n0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,\n0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N 46\n0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,\n0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O 47\n0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,\n0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P 48\n0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,\n0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q 49\n0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,\n0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R 50\n0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,\n0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S 51\n0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,\n0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T 52\n0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,\n0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U 53\n0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,\n0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V 54\n0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,\n0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W 55\n0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,\n0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X 56\n0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,\n0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y 57\n0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,\n0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z 58\n0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,\n0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[ 59\n0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\\ 60\n0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,\n0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//] 61\n0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^ 62\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_ 63\n0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//` 64\n0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,\n0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a 65\n0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,\n0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b 66\n0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,\n0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c 67\n0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,\n0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d 68\n0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,\n0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e 69\n0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,\n0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f 70\n0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,\n0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g 71\n0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,\n0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h 72\n0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,\n0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i 73\n0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,\n0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j 74\n0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,\n0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k 75\n0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,\n0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l 76\n0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,\n0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m 77\n0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,\n0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n 78\n0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,\n0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o 79\n0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,\n0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p 80\n0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,\n0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q 81\n0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,\n0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r 82\n0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,\n0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s 83\n0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,\n0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t 84\n0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,\n0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u 85\n0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,\n0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v 86\n0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,\n0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w 87\n0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,\n0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x 88\n0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,\n0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y 89\n0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,\n0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z 90\n0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,\n0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{ 91\n0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//| 92\n0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,\n0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//} 93\n0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~ 94\n};\n#endif\n</code></pre>"},{"location":"EmbeddedSyS/STM32/STM32Introd/","title":"STM32\u7684\u4ecb\u7ecd","text":""},{"location":"EmbeddedSyS/STM32/StepMotor/","title":"\u6b65\u8fdb\u7535\u673a","text":"<p>\u5b66\u4e60\u8d44\u6599:</p> <ul> <li>\u91ce\u706b\u7535\u673a\u5e94\u7528\u5f00\u53d1\u5b9e\u6218\u6307\u5357</li> <li>\u53cc\u6781\u6027\u6b65\u8fdb\u7535\u673a\uff08\u4e0a\uff09\uff1a\u63a7\u5236\u6a21\u5f0f |\u6587\u7ae0 | MPS (monolithicpower.cn)</li> <li>\u7231\u4e0a\u534a\u5bfc\u4f53---\u6b65\u8fdb\u7535\u673a\u7684\u5de5\u4f5c\u539f\u7406</li> </ul>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_2","title":"\u6b65\u8fdb\u7535\u673a\u7684\u4ecb\u7ecd","text":"<p>\u6b65\u8fdb\u7535\u673a\u53c8\u79f0\u4e3a\u8109\u51b2\u7535\u673a\uff0c\u662f\u4e00\u79cd\u5c06\u7535\u8109\u51b2\u4fe1\u53f7\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u89d2\u4f4d\u79fb\u6216\u7ebf\u4f4d\u79fb\u7684\u7535\u52a8\u673a\u3002</p> <ul> <li>\u6bcf\u8f93\u5165\u4e00\u4e2a\u8109\u51b2\u4fe1\u53f7\uff0c\u8f6c\u5b50\u5c31\u8f6c\u52a8\u4e00\u4e2a\u89d2\u5ea6\u6216\u524d\u8fdb\u4e00\u6b65</li> <li>\u5176\u8f93\u51fa\u7684\u89d2\u4f4d\u79fb\u6216\u7ebf\u4f4d\u79fb\u4e0e\u8f93\u5165\u7684\u8109\u51b2\u6570\u6210\u6b63\u6bd4 </li> <li>\u8f6c\u901f\u4e0e\u8109\u51b2\u9891\u7387\u6210\u6b63\u6bd4 </li> </ul> <p>\u4ece\u63a7\u5236\u82af\u7247\u6765\u770b(STM32\u82af\u7247)\u4e0a\u9762\u7684\u8bdd:</p> <ul> <li>\u5047\u5982\u4f7f\u7528TIM\u8f93\u51fa\u6bd4\u8f83\u4e2d\u7684PWM1\u5411\u4e0a\u8ba1\u6570\u6a21\u5f0f\uff0c\u8f93\u51fa1\u4e2aPWM\u6ce2--\u8109\u51b2\u4fe1\u53f7--&gt;\u8f6c\u5b50\u8f6c\u52a8\u4e00\u4e2a\u89d2\u5ea6</li> <li>\u8f93\u5165\u8109\u51b2\u7684\u6570\u91cf --&gt; \u4e00\u5171\u8f93\u5165\u591a\u5c11\u4e2aPWM\u6ce2\u5f62 --&gt; \u8ba1\u6570\u5668CNT\u4ece0\u52a0\u5230\u91cd\u88c5\u683d\u690dARR(\u4e00\u4e2a\u5468\u671f) == \u4e00\u4e2aPWM\u6ce2\u5f62 --&gt; \u8f6c\u5b50\u7684\u89d2\u4f4d\u79fb</li> <li>\u5355\u4f4d\u65f6\u95f4\u8f93\u5165\u8109\u51b2\u7684\u6570\u91cf\uff1a</li> <li>500HZ --(1s\u53d1\u9001500\u4e2a\u8109\u51b2)  2ms\u4e00\u4e2a\u5468\u671f1\u4e2a\u8109\u51b2    \u5feb</li> <li>50HZ   -- (1s\u53d1\u900150\u4e2a\u8109\u51b2)   20ms\u4e00\u4e2a\u5468\u671f1\u4e2a\u8109\u51b2  \u6162</li> </ul>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_3","title":"\u6b65\u8fdb\u7535\u673a\u7684\u5355\u6781\u6027\u548c\u53cc\u6781\u6027","text":""},{"location":"EmbeddedSyS/STM32/StepMotor/#_4","title":"\u5355\u6781\u6027\u6b65\u8fdb\u7535\u673a","text":"<p>\u4e94\u7ebf\u56db\u76f8\u5355\u6781\u6027: A\u3001B\u3001C\u3001D\u56db\u76f8\uff0c\u5171\u9633\u6781</p> <p></p> <p></p> <p>\u5728\u56fe\u793a\u4e2d\u5206\u4e3a 5 \u6839\u7ebf\uff0c\u5206\u522b\u4e3a A\u3001B\u3001C\u3001D \u548c\u516c \u5171\u7aef\uff08+\uff09\uff0c\u516c\u5171\u7aef\u9700\u8981\u4e00\u76f4\u901a\u7535\uff0c\u5269\u4e0b ABCD \u76f8\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u76f8\u901a\u7535\uff0c\u5373\u53ef\u5f62\u6210\u56de\u8def\u4ea7\u751f\u78c1\u573a\uff0c \u56fe\u4e2d\u7684\u901a\u7535\u987a\u5e8f\u4e3aA- &gt;AB-&gt;B-&gt;BC-&gt;C-&gt;CD-&gt;D-&gt;DA\uff0c\u5373\u53ef\u5b8c\u6210\u4e0a\u56fe\u4e2d\u7684\u987a\u65f6\u9488\u65cb\u8f6c\uff0c\u5982\u679c\u60f3\u8981\u9006\u65f6\u9488\u65cb\u8f6c\u53ea\u9700\u8981\u5c06 \u5176\u5012\u5e8f\u5373\u53ef</p>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_5","title":"\u53cc\u6781\u6027\u6b65\u8fdb\u7535\u673a","text":"<ol> <li>A \u76f8\u901a\u7535\uff0cB \u76f8\u4e0d\u901a\u7535</li> <li>A\u3001B \u76f8\u5168\u90e8\u901a\u7535\uff0c\u4e14\u7535\u6d41\u76f8\u540c\uff0c\u4ea7\u751f\u76f8\u540c\u78c1\u6027 </li> <li>B \u76f8\u901a\u7535\uff0cA \u65ad\u7535 </li> <li>B \u76f8\u901a\u7535\uff0cA \u76f8\u901a\u7535\uff0c\u4e14\u7535\u6d41\u76f8\u7b49\uff0c\u4ea7\u751f\u76f8\u540c\u78c1\u6027</li> <li>A \u76f8\u901a\u7535\uff0cB \u65ad\u7535</li> <li>A\u3001B \u76f8\u5168\u90e8\u901a\u7535\uff0c\u4e14\u7535\u6d41\u76f8\u540c\uff0c\u4ea7\u751f\u76f8\u540c\u78c1\u6027</li> <li>B \u76f8\u901a\u7535\uff0cA \u65ad\u7535 </li> <li>B \u76f8\u901a\u7535\uff0cA \u76f8\u901a\u7535\uff0c\u4e14\u7535\u6d41\u76f8\u7b49\uff0c\u4ea7\u751f\u76f8\u540c\u78c1\u6027</li> </ol> <p>\u5176\u4e2d 1~4 \u6b65\u4e0e 5~8 \u6b65\u7684\u7535\u6d41\u65b9\u5411\u76f8\u53cd\uff08\u7535\u6d41\u76f8\u53cd\uff0c\u7535\u78c1\u7684\u6781\u6027\u5c31\u76f8\u53cd\uff09</p>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_6","title":"\u6b65\u8fdb\u7535\u673a\u7684\u4e00\u4e9b\u4e13\u4e1a\u8bcd","text":"<ul> <li> <p>\u76f8\u6570\uff1a\u4ea7\u751f\u4e0d\u540c\u5bf9\u6781 N\u3001S \u78c1\u573a\u7684\u6fc0\u78c1\u7ebf\u5708\u5bf9\u6570\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6b65\u8fdb\u7535\u673a\u4e2d\u7ebf\u5708\u7684\u7ec4\u6570\uff0c\u5176\u4e2d\u4e24\u76f8\u6b65\u8fdb\u7535\u673a\u6b65\u8ddd\u89d2\u4e3a 1.8\u00b0\uff0c\u4e09\u76f8\u7684\u6b65\u8fdb\u7535\u673a\u6b65\u8ddd\u89d2\u4e3a 1.5\u00b0\uff0c\u76f8\u6570\u8d8a\u591a\u7684\u6b65\u8fdb\u7535\u673a\uff0c\u5176\u6b65\u8ddd\u89d2\u5c31\u8d8a\u5c0f\u3002</p> </li> <li> <p>\u62cd\u6570\uff1a\u5b8c\u6210\u4e00\u4e2a\u78c1\u573a\u5468\u671f\u6027\u53d8\u5316\u6240\u9700\u8109\u51b2\u6570\u6216\u5bfc\u7535\u72b6\u6001\u7528 n \u8868\u793a\uff0c\u6216\u6307\u7535\u673a\u8f6c\u8fc7\u4e00\u4e2a\u9f7f\u8ddd\u89d2\u6240\u9700\u8109\u51b2\u6570\uff0c\u4ee5\u56db\u76f8\u7535\u673a\u4e3a\u4f8b\uff0c\u6709\u56db\u76f8\u56db\u62cd\u8fd0\u884c\u65b9\u5f0f\u5373 AB-BC-CD-DA-AB\uff0c\u56db\u76f8\u516b\u62cd\u8fd0\u884c\u65b9\u5f0f\u5373 A-AB-B-BC-C-CD-D-DA-A\u3002</p> </li> <li> <p>\u6b65\u8ddd\u89d2\uff1a\u4e00\u4e2a\u8109\u51b2\u4fe1\u53f7\u6240\u5bf9\u5e94\u7684\u7535\u673a\u8f6c\u52a8\u7684\u89d2\u5ea6\uff0c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u4e2a\u8109\u51b2\u4fe1\u53f7\u9a71\u52a8\u7684\u89d2\u5ea6\uff0c\u7535\u673a\u4e0a\u90fd\u6709\u5199\uff0c\u4e00\u822c 42 \u6b65\u8fdb\u7535\u673a\u7684\u6b65\u8ddd\u89d2\u4e3a 1.8\u00b0</p> </li> <li> <p>\u5b9a\u4f4d\u8f6c\u77e9\uff1a\u7535\u673a\u5728\u4e0d\u901a\u7535\u72b6\u6001\u4e0b\uff0c\u7535\u673a\u8f6c\u5b50\u81ea\u8eab\u7684\u9501\u5b9a\u529b\u77e9\uff08\u7531\u78c1\u573a\u9f7f\u5f62\u7684\u8c10\u6ce2\u4ee5\u53ca\u673a\u68b0\u8bef\u5dee\u9020\u6210\u7684\uff09\u3002</p> </li> <li> <p>\u9759\u8f6c\u77e9\uff1a\u7535\u673a\u5728\u989d\u5b9a\u9759\u6001\u7535\u538b\u4f5c\u7528\u4e0b\uff0c\u7535\u673a\u4e0d\u4f5c\u65cb\u8f6c\u8fd0\u52a8\u65f6\uff0c\u7535\u673a\u8f6c\u8f74\u7684\u9501\u5b9a\u529b\u77e9\u3002\u6b64\u529b \u77e9\u662f\u8861\u91cf\u7535\u673a\u4f53\u79ef\u7684\u6807\u51c6\uff0c\u4e0e\u9a71\u52a8\u7535\u538b\u53ca\u9a71\u52a8\u7535\u6e90\u7b49\u65e0\u5173\u3002</p> </li> <li>\u6b65\u8ddd\u89d2\u7cbe\u5ea6\uff1a\u6b65\u8fdb\u7535\u673a\u8f6c\u52a8\u4e00\u4e2a\u6b65\u8ddd\u89d2\u5ea6\u7684\u7406\u8bba\u503c\u4e0e\u5b9e\u9645\u503c\u7684\u8bef\u5dee\u3002\u7528\u767e\u5206\u6bd4\u8868\u793a\uff1a\u8bef\u5dee/\u6b65 \u8ddd\u89d2 *100%\u3002</li> <li>\u5931\u6b65\uff1a\u7535\u673a\u8fd0\u8f6c\u65f6\u8fd0\u8f6c\u7684\u6b65\u6570\uff0c\u4e0d\u7b49\u4e8e\u7406\u8bba\u4e0a\u7684\u6b65\u6570\u3002\u4e5f\u53ef\u4ee5\u53eb\u505a\u4e22\u6b65\uff0c\u4e00\u822c\u90fd\u662f\u56e0\u8d1f\u8f7d\u592a\u5927\u6216\u8005\u662f\u9891\u7387\u8fc7\u5feb\u3002</li> <li>\u5931\u8c03\u89d2\uff1a\u8f6c\u5b50\u9f7f\u8f74\u7ebf\u504f\u79fb\u5b9a\u5b50\u9f7f\u8f74\u7ebf\u7684\u89d2\u5ea6\uff0c\u7535\u673a\u8fd0\u8f6c\u5fc5\u5b58\u5728\u5931\u8c03\u89d2\uff0c\u7531\u5931\u8c03\u89d2\u4ea7\u751f\u7684\u8bef \u5dee\uff0c\u91c7\u7528\u7ec6\u5206\u9a71\u52a8\u662f\u4e0d\u80fd\u89e3\u51b3\u7684\u3002 </li> <li>\u6700\u5927\u7a7a\u8f7d\u8d77\u52a8\u9891\u7387\uff1a\u5728\u4e0d\u52a0\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u76f4\u63a5\u8d77\u52a8\u7684\u6700\u5927\u9891\u7387\u3002</li> <li>\u6700\u5927\u7a7a\u8f7d\u7684\u8fd0\u884c\u9891\u7387\uff1a\u7535\u673a\u4e0d\u5e26\u8d1f\u8f7d\u7684\u6700\u9ad8\u8f6c\u901f\u9891\u7387\u3002</li> <li>\u8fd0\u884c\u8f6c\u77e9\u7279\u6027\uff1a\u7535\u673a\u7684\u52a8\u6001\u529b\u77e9\u53d6\u51b3\u4e8e\u7535\u673a\u8fd0\u884c\u65f6\u7684\u5e73\u5747\u7535\u6d41\uff08\u800c\u975e\u9759\u6001\u7535\u6d41\uff09\uff0c\u5e73\u5747\u7535\u6d41 \u8d8a\u5927\uff0c\u7535\u673a\u8f93\u51fa\u529b\u77e9\u8d8a\u5927\uff0c\u5373\u7535\u673a\u7684\u9891\u7387\u7279\u6027\u8d8a\u786c\u3002 </li> <li>\u7535\u673a\u6b63\u53cd\u8f6c\u63a7\u5236\uff1a\u901a\u8fc7\u6539\u53d8\u901a\u7535\u987a\u5e8f\u800c\u6539\u53d8\u7535\u673a\u7684\u6b63\u53cd\u8f6c\u3002</li> </ul>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_7","title":"\u6b65\u8fdb\u7535\u673a\u7684\u8fdb\u4e00\u6b65\u8ba4\u77e5","text":"<p>\u4ece\u4e0a\u9762\u5b66\u4e60\u6765\u770b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e00\u6b21\u7684\u8f6c\u52a8\u89d2\u5ea6\u6700\u5c0f\u662f45\u5ea6\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u5b9e\u73b0\u66f4\u5c0f\u7684\u8f6c\u52a8\u89d2\u5ea6\uff0c\u90a3\u4e48\u5982\u4f55\u5b9e\u73b0\u5462\uff0c\u4e00\u822c\u6700\u5148\u60f3\u5230\u7684\u662f\u589e\u52a0\u76f8\u6570\u5bf9\u5427\uff0c\u8fd9\u6700\u597d\u7406\u89e3\u4e86\uff0c\u4f46\u662f\u5462\u6ca1\u6709\u91c7\u7528\u8bf4\u660e\u590d\u6742\u5ea6\u592a\u5927?\u6211\u540e </p> <p>\u539f\u6765\u662f:\u4eba\u4eec\u662f\u901a\u8fc7\u8bbe\u8ba1\u673a\u68b0\u7ed3\u6784\u6765\u51b3\u5b9a\u7684 --&gt;  \u5728\u4e0a\u9762\u7684\u793a\u610f\u56fe\u4e2d\uff0c\u8f6c\u5b50\u662f\u7531\u4e00\u6839\u78c1\u4f53\uff0c\u6709N,S\u4e24\u7ea7\uff0c\u6b65\u8ddd\u89d2\u662f45\u5ea6\uff0c\u4e8e\u662f\u4eba\u4eec\u628a\u8f6c\u5b50\u6539\u6210\u4e00\u4e2a\u62e5\u670950\u4e2a\u9f7f\u8f6e\u7684\u5168S\u6781\uff0c\u7136\u540e\u8bbe\u7f6e\u5b9a\u5b50\u7684\u8f6e\u9f7f\u662f48\u4e2a</p> <p></p> <p>\u8fd9\u6837\u4ee5 \u5355\u76f8\u6b65\u8fdb \u5b8c\u6210\u4e00\u4e2a 4\u62cd\u6570 --&gt; A-B-\\(\\overline A\\)-\\(\\overline B\\) \u524d\u8fdb\u4e867.2\u5ea6\uff0c\u4e00\u4e2a\u8109\u51b2\u4fe1\u53f7\u6240\u5bf9\u5e94\u7684\u7535\u673a\u8f6c\u52a8\u7684\u89d2\u5ea6--&gt;\u6b65\u8ddd\u89d21.8\u5ea6</p>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_8","title":"\u6b65\u8fdb\u7535\u673a\u9a71\u52a8\u5668","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u9a71\u52a8\u5668 -- \u56e0\u4e3a\u9a71\u52a8\u5668\u8d77\u5230\u5c06\u63a7\u5236\u5668\u4fe1\u53f7\u653e\u5927\u6216\u8005\u8f6c\u6362\u7684\u4f5c\u7528</p> <p></p> <p></p>"},{"location":"EmbeddedSyS/STM32/StepMotor/#_9","title":"\u7ec6\u5206\u5668\u9a71\u52a8\u539f\u7406","text":"<p>\u7ec6\u5206\u7684\u539f\u7406\u5c31\u662f\uff1a\u901a\u8fc7\u6539\u53d8\u5b9a\u5b50\u7684\u7535\u6d41\u6bd4\u4f8b\uff0c\u6539\u53d8\u8f6c\u5b50\u5728\u4e00\u4e2a\u6574\u6b65\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6574\u6b65\u5206\u6210\u591a\u4e2a\u5c0f\u6b65\u6765\u8fd0\u884c\u3002</p> <p>\u9a71\u52a8\u5668\u7684\u7ec6\u5206\u8bbe\u7f6e\u7531\u62e8\u7801\u5f00\u5173\u7684 SW1~SW3 \u6765\u8bbe\u5b9a\uff0c\u9ed8\u8ba4\u4e3a 2 \u7ec6\u5206\uff0c\u4e00\u822c\u7684\u4e24\u76f8\u56db\u7ebf(A+\u3001B+\u3001A-\u3001B-)\u5236\u6b65\u8fdb\u7535\u673a\u7684\u6b65\u8fdb\u89d2\u90fd\u662f1.8\u00b0\uff0c\u56e0\u6b64\u7535\u673a\u65cb\u8f6c\u4e00\u5708\u9700\u8981 360\u00b0 /1.8\u00b0 =200 \u4e2a\u8109\u51b2\uff0c\u8fd9\u91cc 2 \u7ec6\u5206\u8f6c\u4e00\u5708\u9700\u8981200*2=400 \u4e2a\u8109\u51b2\u3002</p> <p></p>"},{"location":"EmbeddedSyS/STM32/StepMotor/#stm32-","title":"STM32--\u6b65\u8fdb\u7535\u673a\u5b9e\u6218\u6f14\u4e60","text":"<p>\u7531\u4ee5\u4e0a\u5b66\u4e60\u53ef\u77e5\uff0c\u6211\u4eec\u4f7f\u7528MCU--STM32\u63a7\u5236\u6b65\u8fdb\u7535\u673a\uff0c\u53ea\u9700\u8981\u7ed9\u5b83\u4e24\u4e2a\u63a7\u5236\u4fe1\u53f7\uff0c1\u4e2a\u662f\u65b9\u5411\u4fe1\u53f7\uff0c\u4e00\u4e2a\u662f\u8109\u51b2\u4fe1\u53f7</p> <p><code>StepMotor.h</code></p> <pre><code>#ifndef  __STEPMOTOR_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __STEPMOTOR_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\ntypedef struct{\nu32   subdiv;                   //\u7ec6\u5206\u503c\nfloat speed;                    //\u901f\u5ea6\nfloat angle;                    //\u5f53\u524d\u89d2\u5ea6\nfloat targetangel;              //\u76ee\u6807\u89d2\u5ea6\nfloat pulseangle;               //\u5355\u8109\u51b2\u7684\u89d2\u5ea6\n}STEPMOTOR_TypeDef;\ntypedef enum{\nDIR_LEFT=0,\nDIR_RIGHT,\n}STEPDIR_Def;\n#define STEPDIRGET()  (GPIOB-&gt;ODR &amp; (1&lt;&lt;5)) //\u5982\u679cPB5\u8f93\u51fa\u662f1 \u4e0e1\u5f971 \u53f3\u8f6c -- \u8f93\u51fa0 \u4e0e0\u5f970 \u5de6\u8f6c \n#define STEPDIR(x)    x?(GPIOB-&gt;ODR |= (1&lt;&lt;5)):(GPIOB-&gt;ODR &amp;=~ (1&lt;&lt;5))//x=1 \u62161\u5f971 ; x=0 \u4e0e0\u5f970\nvoid StepMotor_Init (void);\nvoid StepMontor_Move (float angle);\nvoid StepMontor_Stop (void);\nvoid StepMotor_SetSpeed(float angle);\nu8 Step_MoveCheck(void);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>StepMotor.c</code></p> <pre><code>#include \"StepMotor.h\"\nSTEPMOTOR_TypeDef stepmotor = {1600,0,0,0,0};//\u521d\u59cb\u5316\u7ed3\u6784\u4f53\n/**\n  * @brief  StepMotor_Init()\u7535\u673a\u521d\u59cb\u5316\u51fd\u6570\n            PB5 --&gt; DIR+\u65b9\u5411 \n            PB6 --&gt; PUL+\u8109\u51b2  \n            \u6807\u5fd7\u8109\u51b2\u662f\u65b9\u6ce2 \u6240\u4ee5\u5360\u7a7a\u6bd4=50%\n  * @param  \u65e0\n  * @retval \u65e0\n  */\nvoid StepMotor_Init(void)\n{\n//1.\u5f00\u542f\u65f6\u949f\nRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE);//\u5f00\u542f\u5b9a\u65f6\u56684\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);//\u5f00\u542fGPIOB\u65f6\u949f\n//2.\u521d\u59cb\u5316IO\u53e3 \nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;//TIM4\u7684PWM\u7684OC1\u901a\u9053\u8f93\u51fa\u5728PB6\u5f15\u811a -- \u770b\u5f15\u811a\u624b\u518c\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP ;//\u8bbe\u7f6e\u4e3a\u590d\u7528\u63a8\u633d\u8f93\u51fa -- \u4f7f\u7528\u7247\u4e0a\u5916\u8bbe\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;//\u8bbe\u7f6e\u4e3a\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\nGPIO_Init(GPIOB,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n//3.\u521d\u59cb\u5316TIM\u5b9a\u65f6\u5668\nTIM_InternalClockConfig(TIM4); //\u8bbe\u7f6eTIM4\u4f7f\u7528\u5185\u90e8\u65f6\u949f -- \u53ef\u4e0d\u5199 \u539f\u56e0--STM32\u9ed8\u8ba4\u4f7f\u7528\u5185\u90e8\u65f6\u949f\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; //\u5b9a\u4e49\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u7ed3\u6784\u4f53\n//CK_CNT_OV = CK_PSC / (PSC + 1) / (ARR + 1) \u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\u53ef\u5f97\u51fa \u8bbe\u7f6e500HZ\u9891\u7387 \u6bcf2ms\u52a0\u4e00\uff0c72000000/72/2000\nTIM_TimeBaseStructure.TIM_Period = 2000-1; //\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c -- ARR \nTIM_TimeBaseStructure.TIM_Prescaler = 72 - 1; //\u9884\u5206\u9891\u503c -- PSC \nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //\u6ee4\u6ce2\u9891\u7387 1\u5206\u9891 \u4e5f\u5c31\u662f \u4e0d\u5206\u9891 \u4f7f\u7528\u7cfb\u7edf\u65f6\u949f\u9891\u7387\nTIM_TimeBaseStructure.TIM_RepetitionCounter = 0; //\u91cd\u590d\u8ba1\u6570\u5668\u53ea\u8981\u9ad8\u7ea7\u5b9a\u65f6\u5668\u624d\u6709 --TIM1/TIM8\nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //\u5b9a\u65f6\u5668\u6a21\u5f0f -- \u5411\u4e0a\u8ba1\u6570\nTIM_TimeBaseInit(TIM4, &amp; TIM_TimeBaseStructure);//\u521d\u59cb\u5316\u5b9a\u65f6\u56684\n//4.\u521d\u59cb\u5316\u8f93\u51fa\u6bd4\u8f83 --&gt;PWM1\u6a21\u5f0f\n/* Configures the TIM4 OC1 in PWM1 Mode */ TIM_OCInitTypeDef TIM_OCInitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\n/*\n  *\u56e0\u4e3a  \u6211\u4eec\u53ea\u9700\u8981\u7ed9\u4e0b\u9762\u90e8\u5206\u7ed3\u6784\u4f53\u6210\u5458\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u800c\u7ed3\u6784\u4f53\u91cc\u9762\u7684\u6210\u5458\u6709\u4e9b\u6ca1\u6709\u4f7f\u7528\u5230(\u6bd4\u5982\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u90e8\u5206),\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20\n  *\u6240\u4ee5  \u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20 \u6211\u4eec\u4f7f\u7528TIM_OCStructInit\u51fd\u6570 \u8bbe\u7f6e\u9ed8\u8ba4\u503c\n  */\nTIM_OCStructInit(&amp; TIM_OCInitStructure); TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; //\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\n/*\n  *  TIM_OCPolarity_High , \u9ad8\u6781\u6027 \u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u9ad8\u7535\u5e73  (\u6709\u6548\u7535\u5e73)\n  *  TIM_OCPolarity_Low , \u4f4e\u6781\u6027\uff0c\u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u4f4e\u7535\u5e73  (\u6709\u6548\u7535\u5e73)\n  *  \n  */\nTIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; //\u8bbe\u7f6e\u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f\u7684\u6781\u6027\nTIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;//\u8bbe\u7f6e\u8f93\u51fa\u4f7f\u80fd\nTIM_OCInitStructure.TIM_Pulse = 0; //\u8bbe\u7f6eCCR --&gt; \u5360\u7a7a\u6bd4 \nTIM_OC1Init(TIM4, &amp; TIM_OCInitStructure); //\u9009\u62e9TIM4 \u7684 OC1\u901a\u9053 \u8f93\u51faPWM\u6ce2\u5f62  \u4f7f\u7528\u5f15\u811a\u624b\u518c\u67e5\u770b\u8f93\u51fa\u5230\u90a3\u4e2a\u5f15\u811a\u4e0a\u4e86  -- \u8fd9\u91cc\u662fOC2 == CH2\u901a\u9053\n//5. \u542f\u52a8\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668 --&gt; \u5199\u5165\u7684\u503c\u4e0d\u4f1a\u7acb\u5373\u751f\u6548\u800c\u662f\u66f4\u65b0\u4e8b\u4ef6\u65f6\u751f\u6548 --&gt; \u907f\u514d\u4e00\u4e9b\u5c0f\u95ee\u9898\nTIM_OC1PreloadConfig(TIM4, TIM_OCPreload_Enable);\nTIM_ARRPreloadConfig(TIM4, ENABLE);\nTIM_SetCompare1(TIM4, 1000-1);/*\u5355\u72ec\u66f4\u6539TIM4_CCR1\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd450%*/\n//6.\u521d\u59cb\u5316\u6b65\u8fdb\u7535\u673a\u901f\u5ea6\nStepMotor_SetSpeed(50);//\u521d\u59cb\u901f\u5ea6\u4e3a50\u00b0/s \nStepMontor_Stop();//\u9632\u6b62\u6b65\u8fdb\u7535\u673a\u52a8\nTIM_ClearFlag(TIM4, TIM_FLAG_Update);//\u6e05\u9664\u4e2d\u65ad\u72b6\u6001\u6807\u5fd7\u4f4d\n//7.\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236\u51fd\u6570\nTIM_ITConfig(TIM4, TIM_IT_Update, ENABLE ); //TIM2\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236 -- \u66f4\u65b0\u4e2d\u65ad\n//8.\u521d\u59cb\u5316\u5916\u90e8\u4e2d\u65ad\u51fd\u6570\nNVIC_InitTypeDef NVIC_InitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\nNVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn; //\u6839\u636e\u4e0a\u9762\u7684\u6211\u4eec\u6240\u9009\u53d6\u7684\u662f\u5b9a\u65f6\u56682 -- \u5728\u4e2d\u65ad\u901a\u9053\u7684TIM2 \u6240\u4ee5\u8fd9\u91cc\u9009\u62e9 TIM2_IRQn\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;//\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u62a2\u5360 2\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; //\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u54cd\u5e941\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //\u4f7f\u80fd\u6307\u5b9a\u7684\u4e2d\u65ad\u901a\u9053\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nNVIC_Init(&amp;NVIC_InitStructure);\n//TIM_Cmd(TIM4, ENABLE); //\u4f7f\u80fd\u5b9a\u65f6\u56684 -- \u4e00\u5f00\u59cb\u5e76\u4e0d\u521d\u59cb\u5316TIM4 \u56e0\u4e3a\u4e00\u4f7f\u80fd \u4e00\u6709\u8109\u51b2\u6570 \u7535\u673a\u5c31\u5f00\u59cb\u8fd0\u52a8\u4e86 \u6240\u4ee5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528 \u4ec0\u4e48\u65f6\u5019\u4f7f\u80fd \u5728\u4e0d\u4f7f\u7528\u7535\u673a\u65f6 \u5931\u80fdTIM4\n}\n/**\n  * @brief  \u8ba9\u6b65\u8fdb\u7535\u673a\u65cb\u8f6c\u5230\u6307\u5b9a\u89d2\u5ea6 -- &gt; \u4e0a\u7535\u540e\u9ed8\u8ba4\u521d\u59cb\u65f6\u523b\u7684\u89d2\u5ea6\u4e3a0\u00b0\n  * @param  angle  \u88ab\u8bbe\u7f6e\u7684\u89d2\u5ea6\u503c\n  * @retval None\n  */\nvoid StepMontor_Move (float angle)\n{\nstepmotor.targetangel = angle;//\u66f4\u65b0\u76ee\u6807\u503c\nfloat difvalue = stepmotor.angle - stepmotor.targetangel;//\u5dee\u5ea6\u503c = \u5f53\u524d\u89d2\u5ea6 - \u76ee\u6807\u89d2\u5ea6\nif(difvalue &lt; -stepmotor.pulseangle || difvalue &gt; stepmotor.pulseangle)// \u5dee\u5ea6\u503c\u7684\u7edd\u5bf9\u503c \u5fc5\u987b\u5927\u4e8e \u5355\u8109\u51b2\u7684\u89d2\u5ea6\n{\n/*\u76ee\u6807\u89d2\u5ea6 &gt; 0 \u4e14 \u5dee\u5ea6\u503c &lt; 0  ==&gt; \u5411\u53f3\u8f6c (\u4e3e\u4f8b:\u5f53\u524d\u7684\u89d2\u5ea610\u00b0 \u76ee\u6807\u89d2\u5ea615\u00b0 \u5dee\u5ea6\u503c = -5\u00b0)*/\nif(angle &gt; 0 &amp;&amp; difvalue &lt; 0)\nSTEPDIR(DIR_RIGHT);\n/*\u76ee\u6807\u89d2\u5ea6 &gt;= 0 \u4e14 \u5dee\u5ea6\u503c &gt; 0  ==&gt; \u5411\u5de6\u8f6c (\u4e3e\u4f8b:\u5f53\u524d\u7684\u89d2\u5ea610\u00b0 \u76ee\u6807\u89d2\u5ea65\u00b0 \u5dee\u5ea6\u503c = 5\u00b0)*/\nif((angle &gt; 0 || angle == 0) &amp;&amp; difvalue &gt; 0)\nSTEPDIR(DIR_LEFT);\n/*\u76ee\u6807\u89d2\u5ea6 &lt;= 0 \u4e14 \u5dee\u5ea6\u503c &gt; 0  ==&gt; \u5411\u53f3\u8f6c (\u4e3e\u4f8b:\u5f53\u524d\u7684\u89d2\u5ea6-10\u00b0 \u76ee\u6807\u89d2\u5ea6-5\u00b0 \u5dee\u5ea6\u503c =-5\u00b0)*/\nif((angle &lt; 0 || angle == 0) &amp;&amp; difvalue &lt; 0)\nSTEPDIR(DIR_RIGHT);\n/*\u76ee\u6807\u89d2\u5ea6 &lt; 0 \u4e14 \u5dee\u5ea6\u503c &gt; 0  ==&gt; \u5411\u5de6\u8f6c (\u4e3e\u4f8b:\u5f53\u524d\u7684\u89d2\u5ea6-10\u00b0 \u76ee\u6807\u89d2\u5ea6-15\u00b0 \u5dee\u5ea6\u503c = 5\u00b0)*/\nif(angle &lt; 0 &amp;&amp; difvalue &gt; 0)\nSTEPDIR(DIR_LEFT);\nTIM_Cmd(TIM4, ENABLE);//\u4f7f\u80fd\u5b9a\u65f6\u5668\n}\nelse\nTIM_Cmd(TIM4, DISABLE);\n}\n/**\n  * @brief  \u5224\u65ad\u6b65\u8fdb\u7535\u673a\u662f\u5426\u79fb\u52a8\u5230\u4f4d\n  * @param  \n  * @retval \n  */\nu8 Step_MoveCheck(void)\n{\nfloat difvalue = stepmotor.angle - stepmotor.targetangel;\nif(difvalue &lt; -stepmotor.pulseangle || difvalue &gt; stepmotor.pulseangle)\nreturn 0;//\u6ca1\u6709\u79fb\u52a8\u5230\u4f4d\nelse\nreturn 1;//\u79fb\u52a8\u5230\u4f4d\n}\n/**\n  * @brief  \u5931\u80fd\u6b65\u8fdb\u7535\u673a -- \u505c\u6b62\n  * @param  \n  * @retval \n  */\nvoid StepMontor_Stop (void)\n{\nTIM_Cmd(TIM4, DISABLE);\n}\n/********************************************\n    \u8bbe\u7f6e: \u6b65\u8fdb\u7535\u673a\u7684\u65cb\u8f6c\u901f\u5ea6\n    \u89e3\u91ca: \u53d1\u9001\u8109\u51b2\u7684\u9891\u7387\u662f\u7531ARR\u548cPSC\u51b3\u5b9a\u7684 \u89d2\u901f\u5ea6\u8bbe\u7f6e\u4e3a\u6bcf\u79d2\u8f6c\u591a\u5c11\u5ea6 - angle \u00b0/s  1\u4e2a\u8109\u51b2\u8f6c \u6b65\u8fdb\u89d2(0.225\u00b0)\n          1s\u591a\u5c11\u4e2a\u8109\u51b2 ==&gt; \u9891\u7387HZ ==&gt; 7200000/PSC+1/ARR+1\n          \u9891\u7387HZ = angle / \u6b65\u8fdb\u89d2(\u5355\u8109\u51b2\u7684\u89d2\u5ea6) ==&gt; 1s\u6709\u591a\u5c11\u4e2a\u8109\u51b2\n          \u6b65\u8fdb\u89d2 * \u9891\u7387HZ(\u5355\u4f4d1/s) = \u6bcf1s\u8f6c\u591a\u5c11\u5ea6 \n    \u4f20\u53c2\uff1aangle \u00b0/s\n*********************************************/\nvoid StepMotor_SetSpeed(float angle)\n{\nstepmotor.pulseangle = 360.0 / stepmotor.subdiv;//\u6839\u636e\u7ec6\u5206--\u6c42\u51fa\u5355\u8109\u51b2\u7684\u89d2\u5ea6 \u4e5f\u5c31\u662f\u6b65\u8fdb\u89d2\u7684\u5ea6\u6570 1600 - 0.225\u00b0\nstepmotor.speed = angle;//\u66f4\u65b0\u76ee\u6807\u901f\u5ea6\u503c\n/*\u6839\u636e\u901f\u5ea6\u6c42\u6bcf\u79d2\u949f\u7684\u8109\u51b2\u6570 = \u6bcf\u79d2\u949f\u7684\u89d2\u5ea6 / \u5355\u8109\u51b2\u89d2\u5ea6*/\nfloat pulsenum = angle / stepmotor.pulseangle + 0.5;//\nif(pulsenum &lt; 0.16)\n{\n//\u5982\u679c\u6bcf\u79d2\u949f\u8109\u51b2\u6570\u5c0f\u4e8e0.16\u4e2a\uff0c\u5219\u8bbe\u7f6e\u901f\u5ea6\u4e3a\u6bcf\u79d20.16\u4e2a\u8109\u51b2 -- \u8fde\u4e00\u4e2a\u8109\u51b2\u90fd\u4e0d\u5230\nTIM4-&gt;PSC = 7200 - 1;\nTIM_SetAutoreload(TIM4, 65535);\nTIM_SetCompare1(TIM4, 32768);\n}\nelse if(pulsenum &lt; 16)\n{\n//\u5982\u679c\u8109\u51b2\u7ed9\u7684\u901f\u5ea6\u6bd4 65.536ms \u6162,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u4fee\u6539\u5206\u9891\u503c\nTIM4-&gt;PSC = 7200 - 1;\nTIM_SetAutoreload(TIM4, 10000.0f/pulsenum);\nTIM_SetCompare1(TIM4, 10000.0f/pulsenum/2);\n}\nelse\n{\n//\u57281us\u4e00\u6b21\u7684\u8ba1\u6570\u901f\u7387\u4e0b\uff0c1s\u5185\u7684\u8109\u51b2\u4e2a\u6570\u6700\u5feb1us\u4e00\u6b21\uff0c\u6700\u616265.536ms\u4e00\u6b21\nTIM4-&gt;PSC = 72 - 1;//72\u5206\u9891\uff0c1us\u8ba1\u6570\u4e00\u4e0b\nTIM_SetAutoreload(TIM4, 1000000.0f/pulsenum);\nTIM_SetCompare1(TIM4, 1000000.0f/pulsenum/2);\n}\n}\n//\u4e2d\u65ad\u670d\u52a1\u51fd\u6570\n//\u6267\u884c\u6b65\u8fdb\u7535\u673a\u7684\u65cb\u8f6c\u548c\u505c\u6b62\nvoid TIM4_IRQHandler (void)\n{\nTIM_ClearFlag(TIM4, TIM_FLAG_Update);//\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7\u4f4d\nif (STEPDIRGET())//\u5224\u65ad \u662f\u5de6\u8f6c\u8fd8\u662f\u53f3\u8f6c \nstepmotor.angle += stepmotor.pulseangle;//\u53f3\u8f6c --&gt; \u6700\u540e\u5f97\u51fa\u7684\u89d2\u5ea6\u503c = \u4e4b\u524d\u89d2\u5ea6\u503c + \u5355\u8109\u51b2\u7684\u89d2\u5ea6\u503c \nelse\nstepmotor.angle -= stepmotor.pulseangle;//\u53f3\u8f6c --&gt; \u6700\u540e\u5f97\u51fa\u7684\u89d2\u5ea6\u503c = \u4e4b\u524d\u89d2\u5ea6\u503c - \u5355\u8109\u51b2\u7684\u89d2\u5ea6\u503c\n/*\u5dee\u5ea6\u503c = \u5f53\u524d\u89d2\u5ea6 - \u76ee\u6807\u89d2\u5ea6*/\nfloat difvalue = stepmotor.angle - stepmotor.targetangel;\n/*\u68c0\u6d4b\u5f53\u524d\u89d2\u5ea6\u4e0e\u76ee\u6807\u89d2\u5ea6\u5dee\u503c\uff0c\u8bef\u5dee\u5728\u4e00\u4e2a\u00b1\u6b65\u8fdb\u89d2\u5ea6\u4e4b\u95f4\u5219\u8868\u793a\u89d2\u5ea6\u4e00\u81f4\uff0c\u5173\u95ed\u5b9a\u65f6\u5668*/\nif(difvalue &lt; -stepmotor.pulseangle || difvalue &gt; stepmotor.pulseangle)\nTIM_Cmd(TIM4, ENABLE);//\u5dee\u5ea6\u503c\u7684\u7edd\u5bf9\u503c \u5fc5\u987b\u5927\u4e8e \u5355\u8109\u51b2\u7684\u89d2\u5ea6==\u6b65\u8fdb\u89d2 \u624d\u4f1a\u7ee7\u7eed\u6253\u5f00\u5b9a\u65f6\u56684  \nelse\nTIM_Cmd(TIM4, DISABLE);\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/","title":"\u5b9a\u65f6\u5668","text":""},{"location":"EmbeddedSyS/STM32/TIM/#_2","title":"\u524d\u8a00","text":"<p>\u9700\u8981\u4e86\u89e3\u7684\u57fa\u672c\u77e5\u8bc6:</p> <ol> <li>\u9891\u7387\uff08frequency\uff09\uff1a\u662f\u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u5468\u671f\u6027\u53d8\u5316\u7684\u6b21\u6570\uff0c\u662f\u63cf\u8ff0\u5468\u671f\u8fd0\u52a8\u9891\u7e41\u7a0b\u5ea6\u7684\u91cf\uff0c\u5e38\u7528\u7b26\u53f7  f \u6216 \u03bd  \u8868\u793a\uff0c\u5355\u4f4d\u4e3a\u79d2\u5206\u4e4b\u4e00\uff0c\u7b26\u53f7\u4e3as<sup>-1</sup>\u3002</li> <li>\u8d6b\u5179(HZ)\uff1a\u662f\u56fd\u9645\u5355\u4f4d\u5236\u4e2d\u9891\u7387\u7684\u5355\u4f4d\uff0c\u5b83\u662f\u6bcf\u79d2\u949f\u7684\u5468\u671f\u6027\u53d8\u52a8\u91cd\u590d\u6b21\u6570\u7684\u8ba1\u91cf\u3002</li> </ol> <p>1MHz =1000kHz=1000 000 Hz\u3002</p> <ol> <li>\u5468\u671f\uff08T\uff09\uff1a\u7269\u4f53\u4f5c\u5f80\u590d\u8fd0\u52a8\u6216\u7269\u7406\u91cf\u4f5c\u5468\u800c\u590d\u59cb\u7684\u53d8\u5316\u65f6\uff0c\u91cd\u590d\u4e00\u6b21\u6240\u7ecf\u5386\u7684\u65f6\u95f4\u3002\u7269\u4f53\u6216\u7269\u7406\u91cf\uff08\u5982\u4ea4\u53d8\u7535\u6d41\u3001\u7535\u538b\u7b49\uff09\u5b8c\u6210\u4e00\u6b21\u632f\u52a8\uff08\u6216\u632f\u8361\uff09\u6240\u7ecf\u5386\u7684\u65f6\u95f4\u3002</li> </ol> <p>1s(\u79d2) =1000\u6beb\u79d2=1000 000 (\u5fae\u79d2) =1000 000 000 (\u7eb3\u79d2)\u3002</p> <ol> <li>\u9891\u7387\u4e0e\u5468\u671f\u7684\u5173\u7cfb\u5f0f\u4e3af=1/T\uff0c\u4e8c\u8005\u6210\u53cd\u6bd4\u3002</li> </ol> <p>\u4ece\u65f6\u949f\u6e90\u5165\u624b\u4e86\u89e3\u5b9a\u65f6\u5668\uff1a</p> <p>\u7528\u6237\u53ef\u901a\u8fc7\u591a\u4e2a\u9884\u5206\u9891\u5668\u914d\u7f6eAHB\u3001\u9ad8\u901fAPB(APB2)\u548c\u4f4e\u901fAPB(APB1)\u57df\u7684\u9891\u7387\u3002AHB\u548c APB2\u57df\u7684\u6700\u5927\u9891\u7387\u662f72MHz\u3002APB1\u57df\u7684\u6700\u5927\u5141\u8bb8\u9891\u7387\u662f36MHz\u3002</p> <p>\u65f6\u949f\u6e90\u76f8\u5173\u7684\u77e5\u8bc6: \u901a\u5e38\u60c5\u51b5\u4e0b\u914d\u7f6eAHB=72MHz\uff0cAPB1\u7684\u9884\u5206\u9891\u5668\u7684\u5206\u9891\u7cfb\u6570\u4e3a2\uff0c\u521a\u597dPCLK1=36MHz\uff0c\u6b64\u65f6TIMxCLK = \uff08AHB/2\uff092=72MHz\u3002\u5bf9\u4e8e\u8be5TIMxCLK\u65f6\u949f\u662fTIM2~7\u7684\u516c\u5171\u65f6\u949f\u6e90\uff0cTIM1\u548cTIM8\u5219\u662f\u5728APB2*,\u901a\u5e38\u60c5\u51b5\u4e0b\u4e5f\u662f72MHZ.</p> <p></p>"},{"location":"EmbeddedSyS/STM32/TIM/#_3","title":"\u5b9a\u65f6\u5668\u7684\u4ecb\u7ecd","text":"<p>\u4ece\u300aSTM32\u4e2d\u6587\u53c2\u8003\u624b\u518c\u300b\u7684\u76ee\u5f55\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0cSTM32F103\u5b9a\u65f6\u5668\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd(\u6839\u636e\u590d\u6742\u5ea6\u548c\u5e94\u7528\u573a\u666f):</p> \u7c7b\u578b \u7f16\u53f7 \u8ba1\u6570\u5668\u6a21\u5f0f \u603b\u7ebf \u529f\u80fd \u9ad8\u7ea7\u5b9a\u65f6\u5668 TIM1\u3001TIM8 \u5411\u4e0a\u3001\u5411\u4e0b\u3001\u5411\u4e0a/\u4e0b APB2 \u62e5\u6709\u901a\u7528\u5b9a\u65f6\u5668\u5168\u90e8\u529f\u80fd\uff0c\u5e76\u989d\u5916\u5177\u6709\u91cd\u590d\u8ba1\u6570\u5668\u3001\u6b7b\u533a\u751f\u6210\u3001\u4e92\u8865\u8f93\u51fa\u3001\u5239\u8f66\u8f93\u5165\u7b49\u529f\u80fd \u901a\u7528\u5b9a\u65f6\u5668 TIM2\u3001TIM3\u3001TIM4\u3001TIM5 \u5411\u4e0a\u3001\u5411\u4e0b\u3001\u5411\u4e0a/\u4e0b APB1 \u62e5\u6709\u57fa\u672c\u5b9a\u65f6\u5668\u5168\u90e8\u529f\u80fd\uff0c\u5e76\u989d\u5916\u5177\u6709\u5185\u5916\u65f6\u949f\u6e90\u9009\u62e9\u3001\u8f93\u5165\u6355\u83b7\u3001\u8f93\u51fa\u6bd4\u8f83\u3001\u7f16\u7801\u5668\u63a5\u53e3\u3001\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u7b49\u529f\u80fd \u57fa\u672c\u5b9a\u65f6\u5668 TIM6\u3001TIM7 \u5411\u4e0a APB1 \u62e5\u6709\u5b9a\u65f6\u4e2d\u65ad\u3001\u4e3b\u6a21\u5f0f\u89e6\u53d1DAC\u7684\u529f\u80fd\u3001\u4ea7\u751fDMA\u8bf7\u6c42 <p>\u8ba1\u6570\u5668\u6a21\u5f0f\u4e00\u5171\u6709\u4e09\u79cd:</p> <ul> <li> <p>\u5411\u4e0a\u8ba1\u6570:  \u8ba1\u6570\u5668\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u4e00\u76f4\u52a0\u5230\u91cd\u88c5\u8f7d\u503c\uff0c\u7136\u540e\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad(\u6ea2\u51fa\u4e8b\u4ef6)\uff0c\u7136\u540e\u53c8\u4ece0\u5f00\u59cb\u8ba1\u6570\uff0c\u5982\u6b64\u5f80\u590d\u3002</p> </li> <li> <p>\u5411\u4e0b\u8ba1\u6570:  \u8ddf\u5411\u4e0a\u8ba1\u6570\u662f\u4e00\u4e2a\u610f\u601d\uff0c\u5c31\u662f\u8fc7\u7a0b\u53cd\u8fc7\u6765\u4e86\uff0c\u5b83\u4ece\u91cd\u88c5\u8f7d\u503c\u5f00\u59cb\u8ba1\u6570\uff0c\u4e00\u76f4\u51cf\u5230\u52300\uff0c\u7136\u540e\u56de\u5230\u91cd\u88c5\u683d\u690d\uff0c\u540c\u65f6\u7533\u8bf7\u4e2d\u65ad(\u6ea2\u51fa\u4e8b\u4ef6)\uff0c\u7ee7\u7eed\u4e0b\u4e00\u8f6e\uff0c\u5982\u6b64\u5f80\u590d</p> </li> <li> <p>\u5411\u4e0a\u5411\u4e0b\u53cc\u5411\u8ba1\u6570\u53c8\u79f0\u4e2d\u592e\u5bf9\u9f50\u8ba1\u6570: \u8ba1\u6570\u5668\u4ece0\u5f00\u59cb\u8ba1\u6570\u5230\u91cd\u88c5\u8f7d\u503c\uff0c\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad(\u6ea2\u51fa\u4e8b\u4ef6)\uff0c\u7136\u540e\u53c8\u4ece\u91cd\u88c5\u8f7d\u503c\u5f00\u59cb\u9012\u51cf\u52300\uff0c\u53c8\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad(\u6ea2\u51fa\u4e8b\u4ef6)\u3002</p> </li> </ul> <p></p> <p>\u8fd9\u4e09\u79cd\u6a21\u5f0f\uff0c\u4ece\u672c\u8d28\u4e0a\u6765\u8bf4\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u4e00\u822c\u4f7f\u7528\u5411\u4e0a\u8ba1\u6570\u6a21\u5f0f\u3002</p>"},{"location":"EmbeddedSyS/STM32/TIM/#_4","title":"\u57fa\u672c\u5b9a\u65f6\u5668","text":""},{"location":"EmbeddedSyS/STM32/TIM/#_5","title":"\u57fa\u672c\u5b9a\u65f6\u5668\u7684\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u4eceTIMxCLK\u65f6\u949f\uff0c\u5230PSC\u9884\u5206\u9891\u5668\uff0c\u518d\u5230\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u4ece0\u4e0d\u65ad\u81ea\u589e\uff0c\u540c\u65f6\u4e0d\u65ad\u5730\u4e0e\u81ea\u52a8\u91cd\u88c5\u5bc4\u5b58\u5668\u6bd4\u8f83\uff0c\u503c\u76f8\u7b49\u65f6\uff0c\u5373\u5b9a\u65f6\u65f6\u95f4\u5230\uff0c\u8fd9\u65f6\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u66f4\u65b0\u4e2d\u65ad/\u66f4\u65b0\u4e8b\u4ef6\uff0c\u8ba1\u6570\u5668\u503c\u91cd\u65b0\u53d8\u62100\uff0c\u5c31\u8fd9\u6837\u5faa\u59cb\u5f80\u590d\u3002</p>"},{"location":"EmbeddedSyS/STM32/TIM/#_6","title":"\u57fa\u672c\u5b9a\u65f6\u5668\u7684\u7ed3\u6784","text":"<ul> <li> <p>\u5185\u90e8\u65f6\u949f(CK_INT)</p> </li> <li> <p>\u6765\u81eaRCC\u7684TIMxCLK\u65f6\u949f \u901a\u5e38\u65f6\u949f\u9891\u7387\u662f72MHZ</p> </li> <li> <p>\u65f6\u57fa\u5355\u5143</p> </li> <li> <p>\u9884\u5206\u9891\u5668\u5bc4\u5b58\u5668 (TIMx_PSC)(16\u4f4d\u5bc4\u5b58\u5668) --- \u5bf9\u8f93\u5165\u7684\u65f6\u949f\u9891\u7387\u8fdb\u884c\u9884\u5206\u9891</p> <ul> <li> <p>\u9884\u5206\u9891 \u53ef\u4ee5\u4ee5\u7cfb\u6570\u4ecb\u4e8e1\u81f365536\u4e4b\u95f4\u7684\u4efb\u610f\u6570\u503c\u5bf9\u8ba1\u6570\u5668\u65f6\u949f\u5206\u9891\u3002\u5b83\u662f\u901a\u8fc7\u4e00\u4e2a16\u4f4d\u5bc4\u5b58\u5668 (TIMx_PSC)\u7684\u8ba1\u6570\u5b9e\u73b0\u5206\u9891\u3002\u56e0\u4e3aTIMx_PSC\u63a7\u5236\u5bc4\u5b58\u5668\u5177\u6709\u7f13\u51b2\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u6539\u53d8\u5b83 \u7684\u6570\u503c\uff0c\u65b0\u7684\u9884\u5206\u9891\u6570\u503c\u5c06\u5728\u4e0b\u4e00\u4e2a\u66f4\u65b0\u4e8b\u4ef6\u65f6\u8d77\u4f5c\u7528\u3002</p> </li> <li> <p>\u6846\u56fe\u6709\u4e9b\u5bc4\u5b58\u5668\u5e26\u6709\u9634\u5f71\u6548\u679c ---&gt; \u8fd9\u8868\u793a\u5728\u7269\u7406\u4e0a\u8fd9\u4e2a\u5bc4\u5b58\u5668\u5bf9\u5e942\u4e2a\u5bc4\u5b58\u5668\uff1a\u4e00\u4e2a\u662f\u6211\u4eec\u53ef\u4ee5\u53ef\u4ee5\u5199\u5165\u6216\u8bfb\u51fa\u7684\u5bc4\u5b58\u5668\uff0c\u79f0\u4e3a\u9884\u88c5\u8f7d(\u63a7\u5236)\u5bc4\u5b58\u5668\uff0c\u53e6\u4e00\u4e2a\u662f\u6211\u4eec\u770b\u4e0d\u89c1\u7684\u3001\u65e0\u6cd5\u771f\u6b63\u5bf9\u5176\u8bfb\u5199\u64cd\u4f5c\u7684\uff0c\u4f46\u5728\u4f7f\u7528\u4e2d\u4f1a\u8d77\u4f5c\u7528\u7684\u5bc4\u5b58\u5668\uff0c\u79f0\u4e3a\u5f71\u5b50\u5bc4\u5b58\u5668.</p> </li> <li> <p>\u9884\u5206\u9891\u5668\u63a7\u5236\u5bc4\u5b58\u5668: \u7528\u6765\u914d\u7f6e\u5206\u9891\u7cfb\u6570\u7684\u5bc4\u5b58\u5668 --&gt; \u6211\u4eec\u76f4\u63a5\u64cd\u4f5c\u5199\u5165\u7684\u5bc4\u5b58\u5668 --&gt; \u4e5f\u5c31\u662f\u6211\u4eec\u8ba4\u4e3a\u7684 TIMx_PSC</p> </li> <li> <p>\u9884\u5206\u9891\u7f13\u51b2\u5668(\u5f71\u5b50\u5bc4\u5b58\u5668): \u4f5c\u7528\u662f\uff1a\u5b9a\u65f6\u5668\u542f\u52a8\u540e \u518d\u6b21\u66f4\u6539 \u5206\u9891\u503c(TIMx_PSC)\u7684\u503c\u5e76\u4e0d\u4f1a\u7acb\u5373\u5f71\u54cd\u5f53\u524d\u5b9a\u65f6\u5668\u7684\u65f6\u949f\u9891\u7387\uff0c\u8981\u7b49\u5230\u4e0b\u4e00\u4e2a\u66f4\u65b0\u4e8b\u4ef6\uff08UEV\uff09\u53d1\u751f\u65f6\u624d\u4f1a\u751f\u6548  <sub>\u4ee5\u540e\u8865\u5145\u4ec0\u4e48\u662f\u66f4\u65b0\u4e8b\u4ef6</sub></p> </li> <li> <p>\u9884\u5206\u9891\u8ba1\u6570\u5668: \u5b9a\u65f6\u5668\u7684 \u65f6\u949f\u6e90TIMxCLK \u6bcf\u5600\u55d2\u4e00\u6b21\uff0c\u9884\u5206\u9891\u5668\u8ba1\u6570\u5668\u503c+1\uff0c\u76f4\u5230\u8fbe\u5230\u9884\u5206\u9891\u5668\u7684\u8bbe\u5b9a\u503c -- TIMx_PSC(\u5bc4\u5b58\u5668\u5199\u5165\u7684\u503c)\uff0c\u7136\u540e\u518d\u5600\u55d2\u4e00\u6b21\u540e\u8ba1\u6570\u5668\u5f52\u96f6\uff0c\u540c\u65f6\uff0cTIMx_CNT\u8ba1\u6570\u5668\u503c+1\u3002</p> </li> <li> <ul> <li>--&gt; \u5411\u8be5\u5bc4\u5b58\u5668\u5199 0 \u5b9e\u9645\u4e0a\u662f\u7cfb\u6570 = 1\u5206\u9891 </li> <li>--&gt; \u5411\u8be5\u5bc4\u5b58\u5668\u5199 1 \u5b9e\u9645\u4e0a\u662f\u7cfb\u6570 = 2\u5206\u9891</li> <li>\u00b7\u00b7\u00b7</li> <li>--&gt; \u5411\u8be5\u5bc4\u5b58\u5668\u5199 65535 \u5b9e\u9645\u4e0a\u662f\u7cfb\u6570 = 65536\u5206\u9891</li> </ul> <p>\u9884\u5206\u9891\u5668\u7684\u4f5c\u7528: </p> <p>\u7531\u4e8e\u6765\u81eaRCC\u7684TIMxCLK\u65f6\u949f \u65f6\u949f\u9891\u7387\u53ef\u80fd\u662f72MHZ\uff0c\u4f53\u73b0\u572816\u4f4d\u7684\u5b9a\u65f6\u5668\u4e0a\u7684\u6548\u679c\u5c31\u662f\u4ece0\u8ba1\u6570\u523065535\u4e0a\u6ea2\u53ea\u9700\u89810.9\u6beb\u79d2\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u66f4\u957f\u65f6\u95f4\u7684\u5b9a\u65f6\u95f4\u9694\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u9884\u5206\u9891\u5668\u5bf9\u65f6\u949f\u8fdb\u884c\u5206\u9891\u5904\u7406\uff0c\u4ee5\u964d\u4f4e\u5b9a\u65f6\u5668\u65f6\u949f(CK_CNT)\u7684\u9891\u7387\uff1b\u4ea6\u6216\u8005\u53ef\u4ee5\u901a\u8fc7\u8c03\u89e3\u9884\u5206\u9891\u5668\u6765\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u8ba1\u65f6\u6548\u679c\u3002</p> </li> <li> <p></p> </li> <li> <p>\u901a\u8fc7\u4e0a\u56fe\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u8ba1\u6570\u5668\u8ba1\u6570\u9891\u7387\uff1a\\(\\(CK\\underline{\\phantom{l}}CNT = \\cfrac {CK\\underline{\\phantom{l}PSC}}{PSC + 1 }\\)\\)\uff08PS\uff1aCK_PSC\u662f\u65f6\u949f\u6e90\uff0cPSC\u662f\u5411\u5bc4\u5b58\u5668\u5199\u5165\u7684\u5206\u9891\u6570\uff09</p> </li> </ul> </li> <li> <p>\u8ba1\u6570\u5668\u5bc4\u5b58\u5668(TIMx_CNT)(16\u4f4d\u5bc4\u5b58\u5668) --- \u8ba1\u6570\u5668\u4f7f\u7528\u9884\u5206\u9891\u540e\u7684\u65f6\u949f\u9891\u7387 \\(\\(CK\\underline{\\phantom{l}}CNT = \\cfrac {CK\\underline{\\phantom{l}PSC}}{PSC + 1 }\\)\\) \u8fdb\u884c\u8ba1\u6570\uff0c\u5f53\u8ba1\u6570\u65f6\u949f\u6bcf\u6765\u4e00\u4e2a\u4e0a\u5347\u6cbf\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u8ba1\u6570\u5668\u53ef\u4ee5\u7d2f\u8ba1\u4ece 0--&gt; 65535--&gt;0 \u5b8c\u6210\u4e00\u4e2a\u5faa\u73af\uff0c\u5f53\u81ea\u589e\u884c\u4e3a\u5230\u8fbe\u76ee\u6807\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u4ea7\u751f\u4e2d\u65ad\uff0c\u5b8c\u6210\u4e86\u5b9a\u65f6\u4efb\u52a1</p> <p>\u901a\u8fc7\u4e0a\u56fe\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u8ba1\u6570\u5668\u6ea2\u51fa\u9891\u7387: \\(\\(CK\\underline{\\phantom{l}}CNT\\underline{\\phantom{l}}OV = \\cfrac {CK\\underline{\\phantom{l}CNT}}{ARR + 1 } = \\cfrac{CK\\underline{\\phantom{l}}PSC}{{\\cfrac{PSC + 1}{ARR + 1}}}\\)\\) \uff08PS\uff1aCK_PSC\u662f\u65f6\u949f\u6e90\uff0cPSC\u662f\u5411\u5bc4\u5b58\u5668\u5199\u5165\u7684\u5206\u9891\u6570\uff0cCK_CNT\u662f\u8ba1\u6570\u5668\u8ba1\u6570\u9891\u7387\uff0cARR\u662f\u91cd\u88c5\u683d\u503c\uff0c\u56e0\u4e3aARR\u662f\u4ece0\u5f00\u59cb\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u662fARR+1\uff09</p> </li> <li> <p>\u81ea\u52a8\u88c5\u8f7d\u5bc4\u5b58\u5668 (TIMx_ARR) **  --- \u5b58\u50a8\u76ee\u6807\u503c\u7684\u4efb\u52a1\uff0c\u662f\u56fa\u5b9a\u7684\u76ee\u6807**\uff0c\u8ba1\u6570\u5668\u4ece0\u7d2f\u52a0\u8ba1\u6570\u5230\u81ea\u52a8\u91cd\u88c5\u8f7d\u6570\u503c(TIMx_ARR\u5bc4\u5b58\u5668)\uff0c\u7136\u540e\u91cd\u65b0\u4ece0\u5f00\u59cb\u8ba1\u6570\u5e76\u4ea7\u751f\u4e00\u4e2a\u8ba1\u6570\u5668\u6ea2\u51fa\u4e8b\u4ef6\u3002</p> <p></p> <p>\u81ea\u52a8\u88c5\u8f7d\u5bc4\u5b58\u5668(TIMx_ARR)\u53ef\u4ee5\u63a7\u5236ARPE\u6765\u51b3\u5b9a\u662f\u5426\u542f\u7528\u5f71\u5b50\u5bc4\u5b58\u5668 --&gt;\u51fd\u6570 TIM_ARRPreloadConfig</p> </li> </ul> <p>\u5b9a\u65f6\u5668\u8ba1\u65f6\u65b9\u6cd5\u4e3e\u4f8b:</p> <p>\u6211\u4eec\u5c06\u9884\u5206\u9891\u5bc4\u5b58\u5668\u548c\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u90fd\u8c03\u5230 65535\uff0c\u9996\u5148\u8bbe\u7f6e\u4f7f\u7528\u65f6\u949f\u6e90\u4e3a 72MHz\uff0c\u7136\u540e\u7ecf\u8fc7\u8bbe\u7f6ePSC\u7cfb\u6570\u4e3a 65536 \u5206\u9891\uff0c\u7136\u540e\u8ba1\u6570\u5668 \u6bcf\u6b21\u4ece 0 \u8ba1\u6570\u5230 65535 \u89e6\u53d1\u4e00\u6b21\u4e2d\u65ad\uff0c\u5728\u6b64\u60c5\u51b5\u4e0b\u4e3a\u5b9a\u65f6\u5668\u6700\u957f\u7684\u8ba1\u65f6\u65f6\u95f4\u5373\u4e3a \\(\\cfrac{1}{{\\cfrac{72MHZ}{65536}}}\\times 65536 = 59.65s\\)  \u3002</p>"},{"location":"EmbeddedSyS/STM32/TIM/#_7","title":"\u57fa\u672c\u5b9a\u65f6\u5668\u7684\u529f\u80fd(\u90e8\u5206)","text":"<p>\u4e3b\u6a21\u5f0f\u89e6\u53d1DAC\u7684\u529f\u80fd\uff1a\u5185\u90e8\u786c\u4ef6\u5728\u4e0d\u53d7\u7a0b\u5e8f\u7684\u63a7\u5236\u4e0b\u5b9e\u73b0\u81ea\u52a8\u8fd0\u884c\uff0c\u901a\u8fc7\u66f4\u65b0\u4e8b\u4ef6\u6620\u5c04\u5230 \u89e6\u53d1\u63a7\u5236\u5668\u7684TRGO \u4e2d\uff0c\u7136\u540eTRGO\u76f4\u63a5\u63a5\u5230DAC\u7684\u89e6\u53d1\u8f6c\u6362\u5f15\u811a\u4e0a\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4e0d\u9700\u8981\u8f6f\u4ef6\u7684\u7684\u53c2\u4e0e(\u5229\u7528\u4e2d\u65ad\u673a\u5236\uff0c\u5f53\u67d0\u4e00\u6761\u4ef6\u8fbe\u6210\uff0c\u8fdb\u5165\u4e2d\u65ad\u63a7\u5236DAC)\uff0c\u5b9e\u73b0\u4e86\u786c\u4ef6\u7684\u81ea\u52a8\u5316</p>"},{"location":"EmbeddedSyS/STM32/TIM/#_8","title":"\u901a\u7528\u5b9a\u65f6\u5668","text":""},{"location":"EmbeddedSyS/STM32/TIM/#_9","title":"\u901a\u7528\u5b9a\u65f6\u5668\u7684\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u9009\u62e9\u65f6\u949f\u6e90\uff08\u6765\u81eaRCC\u7684TIMxCLK\u65f6\u949f\u6e90\uff1bTIMx_ETR\u5f15\u5165\u7684\u5916\u90e8\u65f6\u949f\u6e90\uff1bTIM\u7ea7\u8054\uff1b\u4f7f\u7528TI1F_ED \u8fb9\u6cbf \u8f93\u5165\u6355\u83b7\u65f6\u949f\u6e90\uff1b\u4f7f\u7528TI1FP1\u6216\u8005TI2FP2\u5f15\u5165\u8f93\u5165\u6355\u83b7\u65f6\u949f\u6e90\uff09\u5230PSC\u9884\u5206\u9891\u5668\uff0c\u518d\u5230\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u4ece0\u4e0d\u65ad\u81ea\u589e\uff0c\u540c\u65f6\u4e0d\u65ad\u5730\u4e0e\u81ea\u52a8\u91cd\u88c5\u5bc4\u5b58\u5668\u6bd4\u8f83\uff0c\u503c\u76f8\u7b49\u65f6\uff0c\u5373\u5b9a\u65f6\u65f6\u95f4\u5230\uff0c\u8fd9\u65f6\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u66f4\u65b0\u4e2d\u65ad/\u66f4\u65b0\u4e8b\u4ef6\uff0c\u8ba1\u6570\u5668\u503c\u91cd\u65b0\u53d8\u62100\uff0c\u5c31\u8fd9\u6837\u5faa\u59cb\u5f80\u590d\u3002</p>"},{"location":"EmbeddedSyS/STM32/TIM/#_10","title":"\u901a\u7528\u5b9a\u65f6\u5668\u7684\u7ed3\u6784","text":"<p>\u5728\u57fa\u7840\u5b9a\u65f6\u5668\u7684\u57fa\u7840\u7ed3\u6784\u4e0a\u589e\u52a0: \u66f4\u591a\u7684\u65f6\u949f\u6e90\uff0c\u8f93\u5165\u6355\u83b7\u548c\u8f93\u51fa\u6355\u83b7 </p> <p>\u8ba1\u6570\u5668\u65f6\u949f\u53ef\u7531\u4e0b\u5217\u65f6\u949f\u6e90\u63d0\u4f9b\uff1a </p> <p></p> <ul> <li>\u5185\u90e8\u65f6\u949f(CK_INT) </li> <li> <p>\u6765\u81eaRCC\u7684==TIMxCLK\u65f6\u949f== \u901a\u5e38\u65f6\u949f\u9891\u7387\u662f72MHZ</p> </li> <li> <p>\u5916\u90e8\u65f6\u949f\u6a21\u5f0f1\uff1a\u5916\u90e8\u8f93\u5165\u811a(TIx) </p> </li> <li> <p>TRGI(Trigger InPut)</p> <ul> <li> <p>\u4e3b\u8981\u7528\u505a\u89e6\u53d1\u8f93\u5165\u6765\u4f7f\u7528\uff0c\u53ef\u4ee5\u89e6\u53d1\u5b9a\u65f6\u5668\u7684\u4ece\u6a21\u5f0f</p> </li> <li> <p>\u4e5f\u53ef\u4ee5\u7528\u4f5c\u5916\u90e8\u65f6\u949f\u6765\u4f7f\u7528\uff0c\u5f15\u5165\u7684\u65f6\u949f\u6e90\u6709:</p> </li> <li> <p>\u2460\u53ef\u4ee5\u4f7f\u7528==ETR\u5f15\u811a==\u5f15\u5165\u7684\u5916\u90e8\u65f6\u949f\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e \u5916\u90e8\u65f6\u949f\u6a21\u5f0f2 \u53ea\u4e0d\u8fc7\u5360\u7528\u89e6\u53d1\u8f93\u5165\u901a\u9053</p> </li> <li> <p>\u2461\u4f7f\u7528==ITR(TIMx\u5185\u90e8\u89e6\u53d1\u8fde\u63a5 \u4e5f\u53eb\u505a \u5185\u90e8\u89e6\u53d1\u8f93\u5165(ITRx))==\u5f15\u5165\u7684\u65f6\u949f---&gt;TIM\u7684\u7ea7\u8054 -- \u4f7f\u7528\u4e00\u4e2a\u5b9a\u65f6\u5668\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u5b9a\u65f6\u5668\u7684\u9884\u5206\u9891\u5668\uff0c\u5982 \u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u5b9a\u65f6 \u5668Timer1\u800c\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u5b9a\u65f6\u5668Timer2\u7684\u9884\u5206\u9891\u5668\u3002</p> </li> <li> <p>\u4e3e\u4f8b: \u6211\u4eec\u5148\u521d\u59cb\u5316 TIM1\uff0c\u7136\u540e\u4f7f\u7528\u4e3b\u6a21\u5f0f\u628a\u5b83\u7684\u66f4\u65b0\u4e8b\u4ef6\u6620\u5c04\u5230 TRGO\u3002\u7136\u540e\u770b\u4e0a\u8868\uff0cTIM1 \u7684TRGO \u8fde\u63a5\u5230\u4e86 TIM2 \u7684 ITR0 \u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u521d\u59cb\u5316 TIM2\uff0c\u9009\u62e9 ITR0 \u901a\u9053\uff0c\u4f5c\u4e3a\u65f6\u949f\u6e90(TIM1)\uff0c\u5e76\u9009\u62e9\u5916\u90e8\u65f6\u949f\u6a21\u5f0f 1\uff0c\u5c31\u5b8c\u6210\u4e86 TIM1 \u5230 TIM2 \u7684\u7ea7\u8054\u3002</p> </li> <li> <p>\u2462\u4f7f\u7528==TI1F_ED==(\u8f93\u5165\u6355\u83b7\u5355\u5143\u7684CH1\u5f15\u811a\uff0cED(Edge\u8fb9\u6cbf\u7684\u610f\u601d))\u5f15\u5165\u7684\u65f6\u949f\uff0c\u901a\u8fc7\u8fd9\u4e00\u8def\u7684\u65f6\u949f\uff0c\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u5747\u6709\u6548</p> </li> <li> <p>\u4f7f\u7528==\u2463TI1FP1\u548c\u2464TI2FP2==\u5f15\u5165\u7684\u65f6\u949f--&gt;\u8f93\u5165\u6355\u83b7\u7684\u8109\u51b2</p> </li> </ul> </li> <li> <p></p> </li> <li> <p>\u5916\u90e8\u65f6\u949f\u6a21\u5f0f2\uff1a\u5916\u90e8\u89e6\u53d1\u8f93\u5165(ETR)  </p> </li> <li>TIMx_ETR(\u53ef\u901a\u8fc7\u5f15\u811a\u624b\u518c\u67e5\u8be2\u5bf9\u5e94TIM\u7684ETR\u5f15\u811a) \u5bf9\u5e94\u7684\u5f15\u811a\u63a5\u5165\u5916\u90e8\u65f6\u949f(\u53ef\u4ee5\u5411\u5176\u8f93\u5165\u65b9\u6ce2\u6ce2\u5f62)\u4f9b\u5b9a\u65f6\u5668\u4f7f\u7528</li> </ul>"},{"location":"EmbeddedSyS/STM32/TIM/#_11","title":"\u9ad8\u7ea7\u5b9a\u65f6\u5668","text":""},{"location":"EmbeddedSyS/STM32/TIM/#_12","title":"\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u7ed3\u6784","text":"<p>\u4ee5\u4e0b\u4e3a\u901a\u7528\u5b9a\u65f6\u5668\u7684\u57fa\u7840\u4e0a\u589e\u52a0:</p> <ul> <li>\u91cd\u590d\u6b21\u6570\u8ba1\u6570\u5668\uff1a\u53ef\u5b9e\u73b0\u6bcf\u9694\u51e0\u4e2a\u8ba1\u6570\u5468\u671f\uff0c\u518d\u53d1\u751f\u4e2d\u65ad\u6216\u8005\u4e8b\u4ef6 --&gt; \u76f8\u5f53\u4e8e \u5bf9\u8f93\u51fa\u7684\u66f4\u65b0\u4fe1\u53f7\u518d\u6b21\u505a\u51fa\u5206\u9891</li> </ul> <p>\u5728\u4e0a\u6587\u4e2d\uff0c\u6211\u4eec\u5728\u65f6\u949f\u6e90\u4e3a72MHZ\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u7684\u4e00\u6b21\u5b9a\u65f6\u65f6\u95f4\u4e3a59.65s\uff0c\u52a0\u4e0a\u91cd\u590d\u6b21\u6570\u8ba1\u6570\u5668\u540e \u8fd9\u4e2a\u6570\u503c\u53ef\u4ee5\u53d8\u6210</p> <p>$59.65s \\times 65536 = 3909.37s = 65.156min $ \u8fd9\u6837\u4e00\u4e2a\u9ad8\u7ea7\u5b9a\u65f6\u5668\u4e00\u6b21\u5b9a\u65f6\u65f6\u95f4\u6700\u5927\u53ef\u8fbe1\u4e2a\u591a\u5c0f\u65f6\u4e86\u3002</p> <ul> <li>DTG(Dead Time Generate)\u6b7b\u533a\u751f\u6210\u7535\u8def\uff1a\u53ef\u5728\u5f00\u5173\u5207\u6362\u671f\u95f4\uff0c\u751f\u6210\u4e00\u6bb5\u65f6\u95f4\u7684\u6b7b\u533a\uff0c\u9632\u6b62\u76f4\u901a\u73b0\u8c61</li> <li>TIMx_BKIN(Break IN)\uff1a\u5239\u8f66\u8f93\u5165\u4fe1\u53f7 \u548c \u65f6\u949f\u5931\u6548\u4e8b\u4ef6 --&gt; \u4e3a\u4e86\u7ed9\u7535\u673a\u9a71\u52a8\u63d0\u4f9b\u5b89\u5168\u4fdd\u969c </li> <li>\u5728\u8f93\u51fa\u6bd4\u8f83\u4e2d \u65b0\u589e\u4e24\u4e2a\u4e92\u8865\u8f93\u51fa</li> </ul>"},{"location":"EmbeddedSyS/STM32/TIM/#_13","title":"\u5b9a\u65f6\u4e2d\u65ad\u57fa\u672c\u7ed3\u6784","text":""},{"location":"EmbeddedSyS/STM32/TIM/#-","title":"\u5b9a\u65f6\u5668\u57fa\u7840\u529f\u80fd--\u5b9e\u6218\u6f14\u7ec3","text":""},{"location":"EmbeddedSyS/STM32/TIM/#-_1","title":"\u4f7f\u7528\u5185\u90e8\u65f6\u949f--\u5b9a\u65f6\u5668\u8ba1\u6570","text":"<p><code>Timer.h</code></p> <pre><code>#ifndef  __TIMER_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __TIMER_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\" void Timer_Init(void);\nextern uint16_t num ;\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>Timer.c</code></p> <pre><code>#include \"Timer.h\"\nuint16_t num = 0; void Timer_Init(void)\n{\n//1.\u5f00\u542f\u65f6\u949f\nRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);//\u5f00\u542f\u5b9a\u65f6\u56682\u65f6\u949f\n//2.\u521d\u59cb\u5316TIM\u5b9a\u65f6\u5668\nTIM_InternalClockConfig(TIM2); //\u8bbe\u7f6eTIM2\u4f7f\u7528\u5185\u90e8\u65f6\u949f -- \u53ef\u4e0d\u5199 \u539f\u56e0--STM32\u9ed8\u8ba4\u4f7f\u7528\u5185\u90e8\u65f6\u949f\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; //\u5b9a\u4e49\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u7ed3\u6784\u4f53\n//CK_CNT_OV = CK_PSC / (PSC + 1) / (ARR + 1) \u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\u53ef\u5f97\u51fa \u8bbe\u7f6e1HZ\u9891\u7387 \u6bcf1S\u66f4\u65b0\u4e2d\u65ad\u52a0\u4e00\uff0c72000000/7200/10000\nTIM_TimeBaseStructure.TIM_Period = 10000 - 1; //\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c \nTIM_TimeBaseStructure.TIM_Prescaler = 7200 - 1; //\u9884\u5206\u9891\u503c\nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //\u6ee4\u6ce2\u9891\u7387 1\u5206\u9891 \u4e5f\u5c31\u662f \u4e0d\u5206\u9891\u4f7f\u7528\u7cfb\u7edf\u65f6\u949f\u9891\u7387\nTIM_TimeBaseStructure.TIM_RepetitionCounter = 0; //\u91cd\u590d\u8ba1\u6570\u5668\u53ea\u8981\u9ad8\u7ea7\u5b9a\u65f6\u5668\u624d\u6709 --TIM1/TIM8\nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //\u5b9a\u65f6\u5668\u6a21\u5f0f -- \u5411\u4e0a\u8ba1\u6570\nTIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure);//\u521d\u59cb\u5316\u5b9a\u65f6\u56682\n/*\n  \u5f53\u8c03\u7528\u521d\u59cb\u5316\u5b9a\u65f6\u5668\u51fd\u6570\u540e\uff0c\u51fd\u6570\u5185\u90e8\u6700\u540e\u6709\u4ee5\u4e0b\u8fd9\u4e2a\u6b65\u9aa4\uff0c \n  Generate an update event to reload the Prescaler and the Repetition counter values immediately \n  \u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f -- \u751f\u6210\u66f4\u65b0\u4e8b\u4ef6\u4ee5\u7acb\u5373\u91cd\u65b0\u52a0\u8f7d\u9884\u5206\u9891\u5668\u548c\u91cd\u590d\u8ba1\u6570\u5668\u503c\n  TIMx-&gt;EGR = TIM_PSCReloadMode_Immediate; \n  \u662f\u56e0\u4e3a\u9884\u5206\u9891\u5668\u662f\u6709\u4e00\u4e2a \u7f13\u51b2\u5bc4\u5b58\u5668(\u5f71\u5b50\u5bc4\u5b58\u5668)\u7684\uff0c\u5fc5\u987b\u5728\u66f4\u65b0\u4e8b\u4ef6\u540e\uff0c\u5411\u5bc4\u5b58\u5668\u5199\u5165\u7684\u5206\u9891\u6570PSC\u624d\u4f1a\u8d77\u4f5c\u7528\n  \u6240\u4ee5\u5728\u6700\u540e\u624b\u52a8\u542f\u52a8\u4e86\u4e00\u4e2a\u66f4\u65b0\u4e8b\u4ef6\uff0c\u8fd9\u6837\u9884\u5206\u9891\u5668\u7684\u503c\u5c31\u6709\u6548\u4e86\uff0c\u4f46\u662f\u526f\u4f5c\u7528\u5c31\u662f\uff0c\u66f4\u65b0\u4e8b\u4ef6\u548c\u66f4\u65b0\u4e2d\u65ad\uff0c\n  \u66f4\u65b0\u4e2d\u65ad\u4f1a\u7f6e\u66f4\u65b0\u4e2d\u65ad\u6807\u5fd7\u4f4d\uff0c\u4e4b\u540e\u4e00\u65e6\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u66f4\u65b0\u4e2d\u65ad\u4f1a\u7acb\u523b\u8fdb\u5165 ==&gt;\u521a\u4e00\u4e0a\u7535 \u5c31\u8fdb\u5165\u4e2d\u65ad \u6570\u5b57\u663e\u793a1\n  \u89e3\u51b3\u65b9\u6cd5 \u5728\u4e2d\u65ad\u4e0a\u9762 \u52a0\u5165 TIM_ClearFlag(TIM2, TIM_FLAG_Update);//\u6e05\u9664\u4e2d\u65ad\u72b6\u6001\u6807\u5fd7\u4f4d\n  */\nTIM_ClearFlag(TIM2, TIM_FLAG_Update);//\u6e05\u9664\u4e2d\u65ad\u72b6\u6001\u6807\u5fd7\u4f4d\n//3.\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236\u51fd\u6570\nTIM_ITConfig(TIM2, TIM_IT_Update, ENABLE ); //TIM2\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236 -- \u66f4\u65b0\u4e2d\u65ad\n//4.\u521d\u59cb\u5316\u5916\u90e8\u4e2d\u65ad\u51fd\u6570\nNVIC_InitTypeDef NVIC_InitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\nNVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn; //\u6839\u636e\u4e0a\u9762\u7684\u6211\u4eec\u6240\u9009\u53d6\u7684\u662f\u5b9a\u65f6\u56682 -- \u5728\u4e2d\u65ad\u901a\u9053\u7684TIM2 \u6240\u4ee5\u8fd9\u91cc\u9009\u62e9 TIM2_IRQn\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;//\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u62a2\u5360 2\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; //\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u54cd\u5e941\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //\u4f7f\u80fd\u6307\u5b9a\u7684\u4e2d\u65ad\u901a\u9053\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nNVIC_Init(&amp;NVIC_InitStructure);\nTIM_Cmd(TIM2, ENABLE); //\u4f7f\u80fd\u5b9a\u65f6\u56682\n}\nvoid TIM2_IRQHandler(void)\n{\nif(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)\n{\nnum++;\nTIM_ClearITPendingBit(TIM2,TIM_IT_Update);\n}\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"OLED.h\"\n#include \"IRED.h\"\n#include \"Timer.h\"\nint main(void)\n{\nOLED_Init();\nOLED_ShowString(1,1,\"Count:\");\nOLED_ShowString(2,1,\"TIMCount:\");\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//\u8fdb\u884c\u5206\u7ec4 --&gt;\u6574\u4e2a\u82af\u7247(\u4e00\u4e2a\u9879\u76ee\u4e2d)\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u4e2d\u65ad\u5206\u7ec4 \nTimer_Init();\nwhile(1)\n{\nOLED_ShowNum(1,7,num,4);//\u8ba1\u6570\u5668\u7d2f\u52a0\nOLED_ShowNum(2,10,TIM_GetCounter(TIM2),5);//CNT\u8ba1\u6570\u5668\u503c\u7684\u53d8\u5316 -- 0000 --&gt; 9999 --&gt; 0000\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#2-","title":"\u4f7f\u7528\u5916\u90e8\u65f6\u949f\u6a21\u5f0f2 -- \u5b9a\u65f6\u5668\u8ba1\u6570","text":"<p>\u6ce8\u610f\uff1aPA0\u5f15\u811a\u662fTIM2\u7684ETR\u5f15\u811a</p> <p><code>Timer.h</code></p> <pre><code>#ifndef  __TIMER_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __TIMER_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\" void Timer_Init(void);\nuint16_t Timer_GetCounter(void);\nextern uint16_t Num ;\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>Timer.c</code></p> <pre><code>#include \"Timer.h\"\nuint16_t Num = 0; void Timer_Init(void)\n{\n//1.\u5f00\u542f\u65f6\u949f\nRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);//\u5f00\u542f\u5b9a\u65f6\u56682\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);\n//2.\u521d\u59cb\u5316IO\u53e3\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//\u8bbe\u7f6ePA0\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u4e3a\u4e0a\u62c9\u8f93\u5165\uff08\u9632\u6b62\u7535\u5e73\u8df3\u52a8 \u800c\u4e0d\u9002\u7528\u624b\u518c\u4e2d\u63a8\u8350\u7684\u6d6e\u7a7a\u8f93\u5165 --&gt; \u5728\u5916\u90e8\u8f93\u5165\u4fe1\u53f7\u529f\u7387\u5f88\u5c0f\u7684\u65f6\u5019 \u63a8\u8350\u4f7f\u7528\u6d6e\u7a7a\u8f93\u5165 \u9632\u6b62\u4e0a\u62c9\u7535\u963b\u5f71\u54cd\uff09\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\uff08\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\uff09\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n//3.\u521d\u59cb\u5316TIM\u5b9a\u65f6\u5668\nTIM_ETRClockMode2Config(TIM2,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_Inverted,0x04); //\u8bbe\u7f6eTIM2\u4f7f\u7528\u5916\u90e8\u65f6\u949f\uff0c\u5e76\u4e14\u5efa\u8bae\u914d\u7f6e\u6ee4\u6ce2\u9891\u7387\uff0c\u53ef\u4ee5\u9632\u6b62\u7535\u5e73\u6296\u52a8 \u5927\u4e8e\u7b49\u4e8e0X03\u57fa\u672c\u4e0a\u5c31\u7a33\u5b9a\u4e86\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; //\u5b9a\u4e49\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u7ed3\u6784\u4f53\nTIM_TimeBaseStructure.TIM_Period = 10 - 1; //\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c -- \u6bcf\u6321\u4f4f10\u4e0b \u66f4\u65b0\u4e00\u6b21\u4e2d\u65ad Num+1\nTIM_TimeBaseStructure.TIM_Prescaler = 1 - 1; //\u9884\u5206\u9891\u503c -- \u624b\u52a8\u7684\u6321\u4f4f\u7ea2\u5916\u5bf9\u5c04\u7684\u9891\u7387 -- \u6240\u4ee5\u5c31\u4e0d\u5206\u9891\u4e86\nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //\u6ee4\u6ce2\u9891\u7387 1\u5206\u9891 \u4e5f\u5c31\u662f \u4e0d\u5206\u9891\u4f7f\u7528\u6211\u4eec\u4e0a\u65b9\u5b9a\u4e49\u7684\u9891\u7387\nTIM_TimeBaseStructure.TIM_RepetitionCounter = 0; //\u91cd\u590d\u8ba1\u6570\u5668\u53ea\u8981\u9ad8\u7ea7\u5b9a\u65f6\u5668\u624d\u6709 --TIM1/TIM8\nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //\u5b9a\u65f6\u5668\u6a21\u5f0f -- \u5411\u4e0a\u8ba1\u6570\nTIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure);//\u521d\u59cb\u5316\u5b9a\u65f6\u56682\nTIM_ClearFlag(TIM2, TIM_FLAG_Update);//\u6e05\u9664\u4e2d\u65ad\u72b6\u6001\u6807\u5fd7\u4f4d\n//4.\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236\u51fd\u6570\nTIM_ITConfig(TIM2, TIM_IT_Update, ENABLE ); //TIM2\u914d\u7f6e\u4e2d\u65ad\u8f93\u51fa\u63a7\u5236 -- \u66f4\u65b0\u4e2d\u65ad\n//5.\u521d\u59cb\u5316\u5916\u90e8\u4e2d\u65ad\u51fd\u6570\nNVIC_InitTypeDef NVIC_InitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\nNVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn; //\u6839\u636e\u4e0a\u9762\u7684\u6211\u4eec\u6240\u9009\u53d6\u7684\u662f\u5b9a\u65f6\u56682 -- \u5728\u4e2d\u65ad\u901a\u9053\u7684TIM2 \u6240\u4ee5\u8fd9\u91cc\u9009\u62e9 TIM2_IRQn\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;//\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u62a2\u5360 2\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; //\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u54cd\u5e941\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //\u4f7f\u80fd\u6307\u5b9a\u7684\u4e2d\u65ad\u901a\u9053\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nNVIC_Init(&amp;NVIC_InitStructure);\nTIM_Cmd(TIM2, ENABLE); //\u4f7f\u80fd\u5b9a\u65f6\u56682\n}\nuint16_t Timer_GetCounter(void)//\u5c01\u88c5\u4e00\u4e0b\u51fd\u6570 \u4ea6\u53ef\u4ee5\u4e0d\u8981 \u76f4\u63a5\u4f7f\u7528 TIM_GetCounter(TIM2);\u8fd9\u4e2a\u51fd\u6570\n{\nreturn TIM_GetCounter(TIM2);//\u8fd4\u56de\u8ba1\u6570\u5668\u7684\u503c\n}\nvoid TIM2_IRQHandler(void)\n{\nif(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)\n{   Num++;\nTIM_ClearITPendingBit(TIM2,TIM_IT_Update);  }\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"OLED.h\"\n#include \"IRED.h\"\n#include \"Timer.h\"\nint main(void)\n{\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);//\u8fdb\u884c\u5206\u7ec4 --&gt;\u6574\u4e2a\u82af\u7247(\u4e00\u4e2a\u9879\u76ee\u4e2d)\u53ea\u80fd\u8fdb\u884c\u4e00\u6b21\u4e2d\u65ad\u5206\u7ec4 \nOLED_Init();\nOLED_ShowString(1,1,\"Count:\");\nOLED_ShowString(2,1,\"TIMCount:\");\nTimer_Init();\nwhile(1)\n{\nOLED_ShowNum(1,7,Num,4);//\u8ba1\u6570\u5668\u7d2f\u52a0\nOLED_ShowNum(2,10,Timer_GetCounter(),5);//CNT\u8ba1\u6570\u5668\u503c\u7684\u53d8\u5316 -- 0000 --&gt; 9999 --&gt; 0000\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#_14","title":"\u5b9a\u65f6\u5668\u8fdb\u9636\u529f\u80fd","text":""},{"location":"EmbeddedSyS/STM32/TIM/#pwm-","title":"PWM--\u7b80\u4ecb","text":"<p>PWM\uff08Pulse Width Modulation\uff09\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236:\u5728\u5177\u6709==\u60ef\u6027==\u7684\u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4e00\u7cfb\u5217\u8109\u51b2\u7684\u5bbd\u5ea6\u8fdb\u884c\u8c03\u5236\uff0c\u6765\u7b49\u6548\u5730\u83b7\u5f97\u6240\u9700\u8981\u7684\u6a21\u62df\u53c2\u91cf\uff0c\u5e38\u5e94\u7528\u4e8e\u7535\u673a\u63a7\u901f\u7b49\u9886\u57df</p> <p>PWM\u53c2\u6570\uff1a</p> <ul> <li> <p>\u8109\u51b2\u5468\u671f\uff08T\uff09\uff1a\u5355\u4f4d\u662f\u65f6\u95f4\uff0c\u6bd4\u5982\u79d2\uff08s\uff09\u3001\u7eb3\u79d2\uff08ns\uff09\u3001\u5fae\u5999\uff08\u03bcs\uff09\u3001\u6beb\u79d2\uff08ms\uff09\u7b49\uff1b</p> </li> <li> <p>\u8109\u51b2\u9891\u7387\uff08f\uff09\uff1a\u5355\u4f4d\u662f\u8d6b\u5179\uff08Hz\uff09\u3001\u5343\u8d6b\u5179\uff08kHz\uff09\u7b49\uff0c\u4e0e\u8109\u51b2\u5468\u671f\u6210\u5012\u6570\u5173\u7cfb\uff0cf=1/T\uff1b</p> </li> <li> <p>\u8109\u51b2\u5bbd\u5ea6\uff08W\uff09\uff1a\u7b80\u79f0\u201c\u8109\u5bbd\u201d\uff0c\u662f\u8109\u51b2\u9ad8\u7535\u5e73\u6301\u7eed\u7684\u65f6\u95f4\u3002\u5355\u4f4d\u662f\u65f6\u95f4\uff0c\u6bd4\u5982\u79d2\uff08s\uff09\u3001\u7eb3\u79d2\uff08ns\uff09\u3001\u5fae\u5999\uff08\u03bcs\uff09\u3001\u6beb\u79d2\uff08ms\uff09\u7b49\uff1b</p> </li> <li> <p>\u5360\u7a7a\u6bd4\uff08D\uff09\uff1a\u8109\u5bbd\u9664\u4ee5\u8109\u51b2\u5468\u671f\u7684\u503c\uff0c\u767e\u5206\u6570\u8868\u793a\uff0c\u6bd4\u598250%\u3002\u4e5f\u5e38\u6709\u5c0f\u6570\u6216\u5206\u6570\u8868\u793a\u7684\uff0c\u6bd4\u59820.5\u62161/2\u3002</p> </li> </ul> <p></p> <p>PWM\u516c\u5f0f:</p> <ul> <li> <p>\u8109\u5bbd:  \\(\\(W = Ton\\)\\)</p> </li> <li> <p>\u5468\u671f:   \\(\\(T = Ton + Toff=\\cfrac 1f\\)\\)</p> </li> <li> <p>\u5360\u7a7a\u6bd4\uff1a\\(\\(D = \\cfrac{Ton}{Ton+Toff} = \\cfrac{Ton}{T}\\)\\)</p> </li> <li> <p>\u5206\u8fa8\u7387 = \u5360\u7a7a\u6bd4\u53d8\u5316\u6b65\u8ddd\uff08\u5360\u7a7a\u6bd4\u7684\u6700\u5c0f\u53d8\u5316\u5355\u4f4d\uff09</p> </li> </ul>"},{"location":"EmbeddedSyS/STM32/TIM/#-_2","title":"\u5b9a\u65f6\u5668--\u8f93\u51fa\u6bd4\u8f83","text":"<p>OC\uff08Output Compare\uff09\u8f93\u51fa\u6bd4\u8f83:</p> <p>\u8f93\u51fa\u6bd4\u8f83\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83CNT\u4e0eCCR\u5bc4\u5b58\u5668\u503c\u7684\u5173\u7cfb\uff0c\u6765\u5bf9\u8f93\u51fa\u7535\u5e73\u8fdb\u884c\u7f6e1\u3001\u7f6e0\u6216\u7ffb\u8f6c\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u8f93\u51fa\u4e00\u5b9a\u9891\u7387\u548c\u5360\u7a7a\u6bd4\u7684PWM\u6ce2\u5f62</p> <p>CC (Compare/Capture) \u8f93\u5165\u6355\u83b7\u548c\u8f93\u51fa\u6bd4\u8f83\u7684\u5355\u5143:</p> <p></p> <p>\u6bcf\u4e2a\u9ad8\u7ea7\u5b9a\u65f6\u5668\u548c\u901a\u7528\u5b9a\u65f6\u5668\u90fd\u62e5\u67094\u4e2a\u8f93\u51fa\u6bd4\u8f83\u901a\u9053,\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u524d3\u4e2a\u901a\u9053\u989d\u5916\u62e5\u6709\u6b7b\u533a\u751f\u6210\u548c\u4e92\u8865\u8f93\u51fa\u7684\u529f\u80fd</p> <p></p> <p>\u8f93\u51fa\u6a21\u5f0f\u63a7\u5236\u5668\u76848\u79cd\u6a21\u5f0f:</p> \u6a21\u5f0f \u63cf\u8ff0 \u51bb\u7ed3 CNT=CCR\u65f6\uff0cREF\u4fdd\u6301\u4e3a\u539f\u72b6\u6001 \u5339\u914d\u65f6\u7f6e\u6709\u6548\u7535\u5e73 CNT=CCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73 \u5339\u914d\u65f6\u7f6e\u65e0\u6548\u7535\u5e73 CNT=CCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73 \u5339\u914d\u65f6\u7535\u5e73\u7ffb\u8f6c CNT=CCR\u65f6\uff0cREF\u7535\u5e73\u7ffb\u8f6c  --&gt; \u5360\u7a7a\u6bd4\u59cb\u7ec8\u4e3a50% -- \u8f93\u51fa\u6ce2\u5f62\u7684\u9891\u7387 = \u66f4\u65b0\u4e8b\u4ef6\u9891\u7387/2 (\u4e24\u6b21\u8ba1\u6570\u4e00\u4e2a\u5468\u671f) \u5f3a\u5236\u4e3a\u65e0\u6548\u7535\u5e73 CNT\u4e0eCCR\u65e0\u6548\uff0cREF\u5f3a\u5236\u4e3a\u65e0\u6548\u7535\u5e73 \u5f3a\u5236\u4e3a\u6709\u6548\u7535\u5e73 CNT\u4e0eCCR\u65e0\u6548\uff0cREF\u5f3a\u5236\u4e3a\u6709\u6548\u7535\u5e73 PWM\u6a21\u5f0f1 \u5411\u4e0a\u8ba1\u6570\uff1aCNTCCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73\uff0cCNT\u2264CCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73 PWM\u6a21\u5f0f2 \u5411\u4e0a\u8ba1\u6570\uff1aCNTCCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73\uff0cCNT\u2264CCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73 <p>\u4e00\u4e9b\u8f93\u51fa\u6bd4\u8f83\u7684\u5e93\u51fd\u6570\uff1a</p> <pre><code>TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast);//\u7528\u6765\u914d\u7f6e\u5feb\u901f\u4f7f\u80fd\uff0c\u5728\u5355\u6a21\u51b2\u6a21\u5f0f\u5c0f\u8282\u4e2d\u6709\u4ecb\u7ecd\nTIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear);//\u5728\u5916\u90e8\u4e8b\u4ef6\u65f6\u6e05\u9664ref\u4fe1\u53f7\u4e2d\u6709\u4ecb\u7ecd\n//\u5355\u72ec\u6570\u636e\u66f4\u6539\n/*\u5355\u72ec\u4fee\u6539\u8f93\u51fa\u6bd4\u8f83\u6781\u6027\uff0c\u5e26N\u7684\u662f\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u4e92\u8865\u914d\u7f6e\uff0cOC4\u6ca1\u6709\u4e92\u8865\u901a\u9053*/\nTIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity);\nTIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity);\n/*\u5355\u72ec\u4fee\u6539\u8f93\u51fa\u4f7f\u80fd\u53c2\u6570*/\nTIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx);\nvoid TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN);\n/*\u5355\u72ec\u9009\u62e9\u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f*/\nTIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode);\n/*\u5355\u72ec\u66f4\u6539CCR\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd4*/\nTIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#-pwm","title":"\u5b9a\u65f6\u5668--PWM\u529f\u80fd","text":"<p>PWM_STM32\u516c\u5f0f:</p> <p>PWM\u9891\u7387\uff1a\\(\\(Frep = \\cfrac{CK\\underline{\\phantom{l}}PSC}{{\\cfrac{PSC + 1}{ARR + 1}}}\\)\\) \uff08\u548c\u8ba1\u6570\u5668\u6ea2\u51fa\u9891\u7387\u5927\u5c0f\u662f\u4e00\u6837\u7684\uff09</p> <p>PWM\u5360\u7a7a\u6bd4\uff1a$$ Duty = \\cfrac {CCR}{ARR+1}$$</p> <p>PWM\u5206\u8fa8\u7387\uff1a\\(\\(RESO = \\cfrac{1}{ARR+1}\\)\\) (\u5360\u7a7a\u6bd4\u53d8\u5316\u7684\u6700\u5c0f\u6b65\u8ddd)</p>"},{"location":"EmbeddedSyS/STM32/TIM/#afio-","title":"AFIO--\u5f15\u811a\u91cd\u6620\u5c04\u529f\u80fd","text":"<pre><code>//\u6ce8\u610f\uff1a1. \u5e76\u4e0d\u662f\u6240\u6709\u7684\u529f\u80fd\u90fd\u53ef\u4ee5\u91cd\u6620\u5c04\u7684\uff0c\u53ea\u6709\u5728\u91cd\u5b9a\u4e49\u8868\u4e2d\u67e5\u8be2\u5230\uff0c\u624d\u53ef\u4ee5\u91cd\u6620\u5c04\n//     2. \u5728\u6709\u7684I/O\u53e3\u662f\u4e0a\u7535\u540e\u5c31\u9ed8\u8ba4\u6709\u590d\u7528\u529f\u80fd\u7684\uff0c\u6240\u4ee5\u60f3\u5c06\u5b83\u9ed8\u8ba4\u4f7f\u7528\u666e\u901aGPIO\u65f6\u9700\u8981\u89e3\u9664\u5176\u4e4b\u524d\u7684\u590d\u7528\u529f\u80fd\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);//\u5f00\u542fAFIO\u65f6\u949f -- \u5f15\u811a\u91cd\u6620\u5c04\u529f\u80fd\n/*\n\u5f15\u811a\u91cd\u6620\u5c04\u914d\u7f6e\u51fd\u6570 \nGPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState);\n*/\nGPIO_PinRemapConfig(GPIO_PartialRemap1_TIM2,ENABLE);//\u9009\u7528\u90e8\u5206\u91cd\u6620\u5c04\u65b9\u5f0f\u4e00 --&gt; \u4f7fTIM2\u7684OC1\u901a\u9053\u6620\u5c04\u5230PA15 -- \u67e5\u770bSTM32\u4e2d\u6587\u53c2\u8003\u624b\u518c P119\u886843\n/*\n\u7531\u4e8ePA15\u662f\u8c03\u8bd5\u7aef\u53e3\uff0c\u4e0d\u662f\u666e\u901a\u7684GPIO\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4f7f\u7528\u524d\u9700\u8981 \u89e3\u9664\u5176\u529f\u80fd\n\u5176\u4e2d\u6709\u4e09\u4e2a\u5173\u4e8e\u89e3\u9664\u8c03\u8bd5\u7aef\u53e3\u7684\u53c2\u6570\uff1a\n                * @arg GPIO_Remap_SWJ_NoJTRST  //\u5173\u95edNJTRST -- \u4f7fPB4\u53d8\u6210\u666e\u901aGPIO\u53e3    \n                * @arg GPIO_Remap_SWJ_JTAGDisable //\u5173\u95ed JTAG\u7684 --\u4f7fPA15,PB3,PB4\u53d8\u6210\u666e\u901aGPIO\u53e3\n                * @arg GPIO_Remap_SWJ_Disable  //\u5173\u95ed\u6240\u6709\u7684SW\u548cJTAG\u7684\u8c03\u8bd5\u7aef\u53e3--PA13\uff0cPA14,PA15,PB3,PB4\u53d8\u6210\u666e\u901aGPIO\u53e3 -- \u614e\u7528\uff01\uff01\uff01\u4e0b\u8f7d\u7a0b\u5e8f\u540e\u5c31\u4f1a\u6ca1\u6709\u8c03\u8bd5\u7aef\u53e3 -- \u89e3\u51b3\u529e\u6cd5 \u4f7f\u7528\u4e32\u53e3\u4e0b\u8f7d\u8fdb\u53bb\u65b0\u7a0b\u5e8f\n\u5176\u4e2d:SWJ\u5c31\u662f:SWD\u548cJTAG\u8fd9\u4e24\u79cd\u8c03\u8bd5\u65b9\u5f0f\u7684\u542b\u4e49\n*/\nGPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);//\u5f15\u811a\u91cd\u6620\u5c04\u914d\u7f6e\u51fd\u6570 -- \u89e3\u9664PA15\u7684\u8c03\u8bd5\u7aef\u53e3\u529f\u80fd\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#-_3","title":"\u5b9a\u65f6\u5668\u8fdb\u9636\u5b9e\u6218--\u547c\u5438\u706f\u5c0f\u706f","text":"<p>\u6ce8\u610f:</p> <ol> <li>TIM2\u7684PWM\u7684OC1\u901a\u9053\u8f93\u51fa\u5728PA0\u5f15\u811a -- \u770b\u5f15\u811a\u624b\u518c</li> <li>PWM1\u6a21\u5f0f\u662f\u9ad8\u7535\u5e73\u6709\u6548 --&gt; \u9ad8\u7535\u5e73\u662f\u5360\u7a7a\u6bd4 --&gt; \u5c0f\u706f\u6b63\u6781\u63a5\u5230PA0\u5f15\u811a</li> </ol> <p><code>PWM.h</code></p> <pre><code>#ifndef  __PWM_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __PWM_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\nvoid PWM_Init(void);\nvoid PWM_SetCompare1(uint16_t Compare);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>PWM.c</code></p> <pre><code>#include \"PWM.h\"\nvoid PWM_Init(void)\n{\n//1.\u5f00\u542f\u65f6\u949f\nRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);//\u5f00\u542f\u5b9a\u65f6\u56682\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);//\u5f00\u542fGPIOA\u65f6\u949f\n/*\n  //\u8fd9\u4e09\u53e5\u662f\u4e3a\u4e86\u4f7f\u7528\u4e00\u4e0b\u91cd\u6620\u5c04\u529f\u80fd\uff0c\u5982\u679c\u8981\u7528--\u8bb0\u5f97\u5c06\u4e0b\u9762GPIO\u521d\u59cb\u5316PA0\u6539\u6210PA15\n  RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);//\u5f00\u542fAFIO\u65f6\u949f -- \u5f15\u811a\u91cd\u6620\u5c04\u529f\u80fd\n  GPIO_PinRemapConfig(GPIO_PartialRemap1_TIM2,ENABLE);//\u5f15\u811a\u91cd\u6620\u5c04\u914d\u7f6e\u51fd\u6570 -- \u9009\u7528\u90e8\u5206\u91cd\u6620\u5c041 \n  GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);//\u5f15\u811a\u91cd\u6620\u5c04\u914d\u7f6e\u51fd\u6570 -- \u89e3\u9664PA15\u7684\u8c03\u8bd5\u7aef\u53e3\u529f\u80fd\n  */\n//2.\u521d\u59cb\u5316IO\u53e3 -- &gt; \u662f\u56e0\u4e3aTIM2\u7684PWM\u7684OC1\u901a\u9053\u8f93\u51fa\u5728PA0\u5f15\u811a -- \u770b\u5f15\u811a\u624b\u518c\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;//\u8bbe\u7f6ePA0\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP ;//\u8bbe\u7f6e\u4e3a\u590d\u7528\u63a8\u633d\u8f93\u51fa -- \u4f7f\u7528\u7247\u4e0a\u5916\u8bbe\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n//3.\u521d\u59cb\u5316TIM\u5b9a\u65f6\u5668 -- \u521d\u59cb\u5316 -- \u8bbe\u7f6ePWM\u9891\u73871000HZ \u5360\u7a7a\u6bd40% \u5206\u8fa8\u73871%\nTIM_InternalClockConfig(TIM2); //\u8bbe\u7f6eTIM2\u4f7f\u7528\u5185\u90e8\u65f6\u949f -- \u53ef\u4e0d\u5199 \u539f\u56e0--STM32\u9ed8\u8ba4\u4f7f\u7528\u5185\u90e8\u65f6\u949f\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; //\u5b9a\u4e49\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u7ed3\u6784\u4f53\n//CK_CNT_OV = CK_PSC / (PSC + 1) / (ARR + 1) \u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\u53ef\u5f97\u51fa \u8bbe\u7f6e1000HZ\u9891\u7387 \u6bcf1ms\u52a0\u4e00\uff0c72000000/720/100\nTIM_TimeBaseStructure.TIM_Period = 100 - 1; //\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c \nTIM_TimeBaseStructure.TIM_Prescaler = 720 - 1; //\u9884\u5206\u9891\u503c\nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //\u6ee4\u6ce2\u9891\u7387 1\u5206\u9891 \u4e5f\u5c31\u662f \u4e0d\u5206\u9891\u4f7f\u7528\u7cfb\u7edf\u65f6\u949f\u9891\u7387\nTIM_TimeBaseStructure.TIM_RepetitionCounter = 0; //\u91cd\u590d\u8ba1\u6570\u5668\u53ea\u8981\u9ad8\u7ea7\u5b9a\u65f6\u5668\u624d\u6709 --TIM1/TIM8\nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //\u5b9a\u65f6\u5668\u6a21\u5f0f -- \u5411\u4e0a\u8ba1\u6570\nTIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure);//\u521d\u59cb\u5316\u5b9a\u65f6\u56682\n/* Configures the TIM2 OC1 in PWM1 Mode */ TIM_OCInitTypeDef TIM_OCInitStructure; /*\n  *\u56e0\u4e3a \u6211\u4eec\u53ea\u9700\u8981\u7ed9\u4e0b\u9762\u90e8\u5206\u7ed3\u6784\u4f53\u6210\u5458\u8bbe\u7f6e\u521d\u59cb\u503c,\u800c\u7ed3\u6784\u4f53\u91cc\u9762\u7684\u6210\u5458\u6709\u4e9b\u6ca1\u6709\u4f7f\u7528\u5230(\u6bd4\u5982\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u90e8\u5206),\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20\n  *\u6240\u4ee5 \u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20 \u6211\u4eec\u4f7f\u7528TIM_OCStructInit\u51fd\u6570 \u8bbe\u7f6e\u9ed8\u8ba4\u503c\n  */\nTIM_OCStructInit(&amp; TIM_OCInitStructure); TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; //\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\nTIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; //\u8bbe\u7f6e\u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f\u7684\u6781\u6027\n/*\n  *  TIM_OCPolarity_High , \u9ad8\u6781\u6027 \u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u9ad8\u7535\u5e73  (\u6709\u6548\u7535\u5e73)\n  *  TIM_OCPolarity_Low , \u4f4e\u6781\u6027\uff0c\u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u4f4e\u7535\u5e73  (\u6709\u6548\u7535\u5e73) \n  */\nTIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;//\u8bbe\u7f6e\u8f93\u51fa\u4f7f\u80fd\nTIM_OCInitStructure.TIM_Pulse = 0; //\u8bbe\u7f6eCCR --&gt; \u5360\u7a7a\u6bd4 --&gt; \u6b63\u597d\u5bf9\u5e94\u4e3b\u51fd\u6570\u4e2d\u547c\u5438\u706f\u4ece\u6697\u5230\u706d\nTIM_OC1Init(TIM2, &amp; TIM_OCInitStructure); //\u9009\u62e9TIM2 \u7684 OC1\u901a\u9053 \u8f93\u51faPWM\u6ce2\u5f62  \u4f7f\u7528\u5f15\u811a\u624b\u518c\u67e5\u770b\u8f93\u51fa\u5230\u90a3\u4e2a\u5f15\u811a\u4e0a\u4e86  -- \u8fd9\u91cc\u662fOC1 == CH1\u901a\u9053\nTIM_Cmd(TIM2, ENABLE); //\u4f7f\u80fd\u5b9a\u65f6\u56682\n}\nvoid PWM_SetCompare1(uint16_t Compare)\n{\nTIM_SetCompare1(TIM2,Compare);/*\u5355\u72ec\u66f4\u6539CCR1\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd4*/\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"PWM.h\"\nuint8_t i ;\nint main(void)\n{\nPWM_Init();\nwhile(1)\n{\nfor(i = 0; i&lt;100;i++)\n{\nPWM_SetCompare1(i);/*\u5355\u72ec\u66f4\u6539CCR\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd4*/\nDelay_ms(10);\n}\nfor(i = 0; i&lt;100;i++)\n{\nPWM_SetCompare1(100-i);/*\u5355\u72ec\u66f4\u6539CCR\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd4*/\nDelay_ms(10);\n}\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#-_4","title":"\u5b9a\u65f6\u5668\u8fdb\u9636\u5b9e\u6218 -- \u8235\u673a\u63a7\u5236","text":"<p>\u8235\u673a\u7b80\u4ecb:</p> <p>\u8235\u673a\u662f\u4e00\u79cd\u6839\u636e\u8f93\u5165PWM\u4fe1\u53f7\u5360\u7a7a\u6bd4\u6765\u63a7\u5236\u8f93\u51fa\u89d2\u5ea6\u7684\u88c5\u7f6e,\u8f93\u5165PWM\u4fe1\u53f7\u8981\u6c42\uff1a\u5468\u671f\u4e3a20ms\uff0c\u9ad8\u7535\u5e73\u5bbd\u5ea6\u4e3a0.5ms~2.5ms</p> <p> </p> <p><code>PWM.h</code></p> <pre><code>#ifndef  __PWM_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __PWM_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\nvoid PWM_Init(void);\nvoid PWM_SetCompare2(uint16_t Compare);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>PWM.c</code></p> <pre><code>#include \"PWM.h\"\nvoid PWM_Init(void)\n{\n//1.\u5f00\u542f\u65f6\u949f\nRCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);//\u5f00\u542f\u5b9a\u65f6\u56682\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);//\u5f00\u542fGPIOA\u65f6\u949f\n//2.\u521d\u59cb\u5316IO\u53e3 -- &gt; \u662f\u56e0\u4e3aTIM2\u7684PWM\u7684OC2\u901a\u9053\u8f93\u51fa\u5728PA1\u5f15\u811a -- \u770b\u5f15\u811a\u624b\u518c\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;//\u8bbe\u7f6ePA1\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP ;//\u8bbe\u7f6e\u4e3a\u590d\u7528\u63a8\u633d\u8f93\u51fa -- \u4f7f\u7528\u7247\u4e0a\u5916\u8bbe\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\n//3.\u521d\u59cb\u5316TIM\u5b9a\u65f6\u5668 -- \u8235\u673a\u8981\u6c4220ms -- 50HZ \u8bbe\u7f6ePWM\u9891\u738750HZ  \u5360\u7a7a\u6bd4CRR/ARR+1 \u5206\u8fa8\u73871%\nTIM_InternalClockConfig(TIM2); //\u8bbe\u7f6eTIM2\u4f7f\u7528\u5185\u90e8\u65f6\u949f -- \u53ef\u4e0d\u5199 \u539f\u56e0--STM32\u9ed8\u8ba4\u4f7f\u7528\u5185\u90e8\u65f6\u949f\nTIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; //\u5b9a\u4e49\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u7ed3\u6784\u4f53\n//CK_CNT_OV = CK_PSC / (PSC + 1) / (ARR + 1) \u901a\u8fc7\u8fd9\u4e2a\u516c\u5f0f\u53ef\u5f97\u51fa \u8bbe\u7f6e50HZ\u9891\u7387 \u6bcf20ms\u52a0\u4e00\uff0c72000000/72/20000\nTIM_TimeBaseStructure.TIM_Period = 20000-1; //\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c -- ARR \nTIM_TimeBaseStructure.TIM_Prescaler = 72 - 1; //\u9884\u5206\u9891\u503c -- PSC \nTIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1; //\u6ee4\u6ce2\u9891\u7387 1\u5206\u9891 \u4e5f\u5c31\u662f \u4e0d\u5206\u9891\u4f7f\u7528\u7cfb\u7edf\u65f6\u949f\u9891\u7387\nTIM_TimeBaseStructure.TIM_RepetitionCounter = 0; //\u91cd\u590d\u8ba1\u6570\u5668\u53ea\u8981\u9ad8\u7ea7\u5b9a\u65f6\u5668\u624d\u6709 --TIM1/TIM8\nTIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; //\u5b9a\u65f6\u5668\u6a21\u5f0f -- \u5411\u4e0a\u8ba1\u6570\nTIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure);//\u521d\u59cb\u5316\u5b9a\u65f6\u56682\n/* Configures the TIM2 OC2 in PWM1 Mode */ TIM_OCInitTypeDef TIM_OCInitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\n/*\n  *\u56e0\u4e3a  \u6211\u4eec\u53ea\u9700\u8981\u7ed9\u4e0b\u9762\u90e8\u5206\u7ed3\u6784\u4f53\u6210\u5458\u8bbe\u7f6e\u521d\u59cb\u503c\uff0c\u800c\u7ed3\u6784\u4f53\u91cc\u9762\u7684\u6210\u5458\u6709\u4e9b\u6ca1\u6709\u4f7f\u7528\u5230(\u6bd4\u5982\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u90e8\u5206),\u5bfc\u81f4\u4e00\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20\n  *\u6240\u4ee5  \u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\u4e0d\u786e\u5b9a\u7684\u56e0\u7d20 \u6211\u4eec\u4f7f\u7528TIM_OCStructInit\u51fd\u6570 \u8bbe\u7f6e\u9ed8\u8ba4\u503c\n  */\nTIM_OCStructInit(&amp; TIM_OCInitStructure); TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; //\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\nTIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; //\u8bbe\u7f6e\u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f\u7684\u6781\u6027\n/*\n  *  TIM_OCPolarity_High , \u9ad8\u6781\u6027 \u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u9ad8\u7535\u5e73  (\u6709\u6548\u7535\u5e73)\n  *  TIM_OCPolarity_Low , \u4f4e\u6781\u6027\uff0c\u6781\u6027\u4e0d\u7ffb\u8f6c REF\u6ce2\u5f62\u76f4\u63a5\u8f93\u51fa \u4f4e\u7535\u5e73  (\u6709\u6548\u7535\u5e73)\n  *  \n  */\nTIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;//\u8bbe\u7f6e\u8f93\u51fa\u4f7f\u80fd\nTIM_OCInitStructure.TIM_Pulse = 0; //\u8bbe\u7f6eCCR --&gt; \u5360\u7a7a\u6bd4 --&gt; 20000 \u5bf9\u5e94 20ms 500\u5bf9\u5e940.5ms 2500 \u5bf9\u5e942.5ms\nTIM_OC2Init(TIM2, &amp; TIM_OCInitStructure); //\u9009\u62e9TIM2 \u7684 OC2\u901a\u9053 \u8f93\u51faPWM\u6ce2\u5f62  \u4f7f\u7528\u5f15\u811a\u624b\u518c\u67e5\u770b\u8f93\u51fa\u5230\u90a3\u4e2a\u5f15\u811a\u4e0a\u4e86  -- \u8fd9\u91cc\u662fOC2 == CH2\u901a\u9053\nTIM_Cmd(TIM2, ENABLE); //\u4f7f\u80fd\u5b9a\u65f6\u56682\n}\nvoid PWM_SetCompare2(uint16_t Compare)\n{\nTIM_SetCompare2(TIM2,Compare);/*\u5355\u72ec\u66f4\u6539CCR2\u5bc4\u5b58\u5668\u503c\u7684\u51fd\u6570 --&gt; \u4fee\u6539\u5360\u7a7a\u6bd4*/\n}\n</code></pre> <p><code>Server.h</code></p> <pre><code>#ifndef  __SERVER_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __SERVER_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\n#include \"PWM.h\"\nvoid Server_Init(void);\nvoid Server_SetAngle(float Angle);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>Server.c</code></p> <pre><code>#include \"Server.h\"\nvoid Server_Init(void)\n{\nPWM_Init();\n}\n/*\n  0\u00b0  --&gt;  500\n  180\u00b0--&gt;  2500\n  \u6bcf\u4e00\u5ea6 --&gt; 2000/180\n  1\u00b0 --&gt;  2000/180+500\n*/\nvoid Server_SetAngle(float Angle)//\u8bbe\u7f6e\u8235\u673a\u89d2\u5ea6\n{\nPWM_SetCompare2(Angle * 2000 / 180 + 500);\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"OLED.h\"\n#include \"Timer.h\"\n#include \"Server.h\"\n#include \"Key.h\"//\u8bf7\u770bGPIO--\u5e93\u51fd\u6570\u6309\u952e\u63a7\u5236\u90a3\u4e00\u7ae0\u8282\nuint8_t KeyNum ;\nfloat Angle;\nint main(void)\n{\nOLED_Init();\nKey_Init();\nServer_Init();\nOLED_ShowString(1,1,\"Angle:\");\nwhile(1)\n{\nKeyNum = Key_GetNum();//\u6309\u952e\u63a7\u5236\u8235\u673a\u89d2\u5ea6\nif(KeyNum == 1)\n{\nAngle += 30;\nif (Angle &gt; 180)\n{\nAngle = 0;\n}\n}\nServer_SetAngle(Angle);\nOLED_ShowNum(1,7,Angle,3);\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#-_5","title":"\u5b9a\u65f6\u5668 -- \u8f93\u5165\u6355\u83b7","text":""},{"location":"EmbeddedSyS/STM32/TIM/#_15","title":"\u5b9a\u65f6\u5668\u5e93\u51fd\u6570","text":"<p>Table 458. TIM \u5e93\u51fd\u6570 </p> \u51fd\u6570\u540d \u63cf\u8ff0 TIM_DeInit \u5c06\u5916\u8bbe  TIMx \u5bc4\u5b58\u5668\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c TIM_TimeBaseInit \u6839\u636e  TIM_TimeBaseInitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316 TIMx \u7684\u65f6\u95f4\u57fa\u6570\u5355\u4f4d TIM_OCxInit \u6839\u636e  TIM_OCInitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe TIMx TIM_ICInit \u6839\u636e  TIM_ICInitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe TIMx TIM_TimeBaseStructInit \u628a TIM_TimeBaseInitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 TIM_OCStructInit \u628a TIM_OCInitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 TIM_ICStructInit \u628a TIM_ICInitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 TIM_Cmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  TIMx \u5916\u8bbe TIM _ITConfig \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684  TIM \u4e2d\u65ad TIM_DMAConfig \u8bbe\u7f6e  TIMx \u7684 DMA \u63a5\u53e3 TIM_DMACmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684  TIMx \u7684 DMA \u8bf7\u6c42 TIM_InternalClockConfig \u8bbe\u7f6e  TIMx \u4f7f\u7528\u5185\u90e8\u65f6\u949f TIM_ITRxExternalClockConfig \u8bbe\u7f6e  TIMx \u5185\u90e8\u89e6\u53d1\u4e3a\u5916\u90e8\u65f6\u949f\u6a21\u5f0f TIM_TIxExternalClockConfig \u8bbe\u7f6e  TIMx \u89e6\u53d1\u4e3a\u5916\u90e8\u65f6\u949f TIM_ETRClockMode1Config \u914d\u7f6e  TIMx \u5916\u90e8\u65f6\u949f\u6a21\u5f0f 1 TIM_ETRClockMode2Config \u914d\u7f6e  TIMx \u5916\u90e8\u65f6\u949f\u6a21\u5f0f 2 TIM_ETRConfig \u914d\u7f6e  TIMx \u5916\u90e8\u89e6\u53d1(\u914d\u7f6eETR\u5f15\u811a\u7684\u9884\u5206\u9891\u3001\u6781\u6027\u3001\u6ee4\u6ce2\u5668\u8fd9\u4e9b\u53c2\u6570) TIM_SelectInputTrigger \u9009\u62e9  TIMx \u8f93\u5165\u89e6\u53d1\u6e90 --- \u6b64\u51fd\u6570\u662f\u4e3a\u4e86\u5355\u72ec\u914d\u7f6e\u53c2\u6570\u800c\u8bbe\u7f6e\u7684 \u4ece\u800c\u65e0\u9700\u518d\u521d\u59cb\u5316\u6574\u4e2a\u51fd\u6570 TIM_PrescalerConfig \u8bbe\u7f6e  TIMx \u9884\u5206\u9891--- \u6b64\u51fd\u6570\u662f\u4e3a\u4e86\u5355\u72ec\u914d\u7f6e\u53c2\u6570\u800c\u8bbe\u7f6e\u7684 \u4ece\u800c\u65e0\u9700\u518d\u521d\u59cb\u5316\u6574\u4e2a\u51fd\u6570 TIM_CounterModeConfig \u8bbe\u7f6e  TIMx \u8ba1\u6570\u5668\u6a21\u5f0f--- \u6b64\u51fd\u6570\u662f\u4e3a\u4e86\u5355\u72ec\u914d\u7f6e\u53c2\u6570\u800c\u8bbe\u7f6e\u7684 \u4ece\u800c\u65e0\u9700\u518d\u521d\u59cb\u5316\u6574\u4e2a\u51fd\u6570 TIM_ForcedOC1Config \u7f6e TIMx \u8f93\u51fa  1 \u4e3a\u6d3b\u52a8\u6216\u8005\u975e\u6d3b\u52a8\u7535\u5e73 TIM_ForcedOC2Config \u7f6e TIMx \u8f93\u51fa  2 \u4e3a\u6d3b\u52a8\u6216\u8005\u975e\u6d3b\u52a8\u7535\u5e73 TIM_ForcedOC3Config \u7f6e TIMx \u8f93\u51fa  3 \u4e3a\u6d3b\u52a8\u6216\u8005\u975e\u6d3b\u52a8\u7535\u5e73 TIM_ForcedOC4Config \u7f6e TIMx \u8f93\u51fa  4 \u4e3a\u6d3b\u52a8\u6216\u8005\u975e\u6d3b\u52a8\u7535\u5e73 TIM_ARRPreloadConfig \u4f7f\u80fd\u6216\u8005\u5931\u80fd  TIMx \u5728 ARR \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668 TIM_OC1PreloadConfig \u4f7f\u80fd\u6216\u8005\u5931\u80fd TIMx \u5728 CCR1 \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668 TIM_SelectOutputTrigger \u9009\u62e9  TIMx \u89e6\u53d1\u8f93\u51fa\u6a21\u5f0f TIM_SelectSlaveMode \u9009\u62e9  TIMx \u4ece\u6a21\u5f0f TIM_SelectMasterSlaveMode \u8bbe\u7f6e\u6216\u8005\u91cd\u7f6e  TIMx \u4e3b/\u4ece\u6a21\u5f0f TIM_SetCounter \u8bbe\u7f6e  TIMx \u8ba1\u6570\u5668\u5bc4\u5b58\u5668\u503c TIM_SetAutoreload \u8bbe\u7f6e  TIMx \u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u503c TIM_GetCounter \u83b7\u5f97  TIMx \u8ba1\u6570\u5668\u7684\u503c TIM_GetPrescaler \u83b7\u5f97  TIMx \u9884\u5206\u9891\u503c TIM_GetFlagStatus \u68c0\u67e5\u6307\u5b9a\u7684  TIM \u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e0e\u5426 TIM_ClearFlag \u6e05\u9664  TIMx \u7684\u5f85\u5904\u7406\u6807\u5fd7\u4f4d TIM_GetITStatus \u68c0\u67e5\u6307\u5b9a\u7684  TIM \u4e2d\u65ad\u53d1\u751f\u4e0e\u5426 TIM_ClearITPendingBit \u6e05\u9664  TIMx \u7684\u4e2d\u65ad\u5f85\u5904\u7406\u4f4d"},{"location":"EmbeddedSyS/STM32/TIM/#tim_timebaseinit","title":"\u51fd\u6570 TIM_TimeBaseInit","text":"<p>Table 460. \u51fd\u6570 TIM_TimeBaseInit </p> \u51fd\u6570\u540d TIM_TimeBaseInit \u51fd\u6570\u539f\u5f62 void TIM_TimeBaseInit(TIM_TypeDef  TIMx, TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct) \u529f\u80fd\u63cf\u8ff0 \u6839\u636e  TIM_TimeBaseInitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316 TIMx \u7684\u65f6\u95f4\u57fa\u6570\u5355\u4f4d \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIMTimeBase_InitStruct\uff1a\u6307\u5411\u7ed3\u6784 TIM_TimeBaseInitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86 TIMx \u65f6\u95f4\u57fa\u6570\u5355\u4f4d\u7684\u914d\u7f6e\u4fe1\u606f    \u53c2\u9605  Section\uff1aTIM_TimeBaseInitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>TIM_TimeBaseInitTypeDef structure </p> <pre><code>//TIM_TimeBaseInitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6\u201cstm32f10x_tim.h\u201d\uff1a \ntypedef struct { u16 TIM_Period;\nu16 TIM_Prescaler; u8 TIM_ClockDivision; u16 TIM_CounterMode; } TIM_TimeBaseInitTypeDef; </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_period","title":"\u53c2\u6570 TIM_Period","text":"<p>TIM_Period \u8bbe\u7f6e\u4e86\u5728\u4e0b\u4e00\u4e2a\u66f4\u65b0\u4e8b\u4ef6\u88c5\u5165\u6d3b\u52a8\u7684\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u5468\u671f\u7684\u503c\u3002\u5b83\u7684\u53d6\u503c\u5fc5\u987b\u5728 0x0000 \u548c0xFFFF \u4e4b\u95f4\u3002 </p>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_prescaler","title":"\u53c2\u6570 TIM_Prescaler","text":"<p>TIM_Prescaler \u8bbe\u7f6e\u4e86\u7528\u6765\u4f5c\u4e3a TIMx \u65f6\u949f\u9891\u7387\u9664\u6570\u7684\u9884\u5206\u9891\u503c\u3002\u5b83\u7684\u53d6\u503c\u5fc5\u987b\u5728 0x0000 \u548c 0xFFFF \u4e4b\u95f4\u3002 </p>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_clockdivision","title":"\u53c2\u6570 TIM_ClockDivision","text":"<p>TIM_ClockDivision \u8bbe\u7f6e\u4e86\u65f6\u949f\u5206\u5272 -- \u8fd9\u4e2a\u662f\u7528\u4e8e\u6ee4\u6ce2\u5206\u9891\u7684 -- \u5355\u7247\u673a\u5185\u5982\u4f55\u5bf9\u8fdb\u5165\u7684\u65f6\u949f\u8fdb\u884c\u6ee4\u6ce2\uff0c\u5254\u9664\u6bdb\u523a\uff0c\u4f7f\u7528\u7684\u539f\u7406\u5c31\u662f\uff0c\u91c7\u6837\u9891\u7387\u548c\u91c7\u6837N\u4e2a\u70b9\uff0c\u5728\u8fd9\u9891\u7387\u4e0bN\u4e2a\u70b9\u4fdd\u6301\u7a33\u5b9a\u5c31\u662f\u7a33\u5b9a\u7684\u72b6\u6001\uff0c\u8f93\u51fa\u3002\u8fd9\u4e2a\u9891\u7387\u5c31\u662f\u7531\u8fd9\u4e2a\u53c2\u6570\u51b3\u5b9a\u7684\uff0c\u8be5\u53c2\u6570\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 461. TIM_ClockDivision \u503c </p> TIM_ClockDivision \u63cf\u8ff0 TIM_CKD_DIV1 TDTS =  Tck_tim TIM_CKD_DIV2 TDTS =  2Tck_tim TIM_CKD_DIV4 TDTS =  4Tck_tim"},{"location":"EmbeddedSyS/STM32/TIM/#tim_countermode","title":"\u53c2\u6570 TIM_CounterMode","text":"<p>TIM_CounterMode \u9009\u62e9\u4e86\u8ba1\u6570\u5668\u6a21\u5f0f\u3002\u8be5\u53c2\u6570\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 462. TIM_CounterMode \u503c </p> TIM_CounterMode \u63cf\u8ff0 TIM_CounterMode_Up TIM \u5411\u4e0a\u8ba1\u6570\u6a21\u5f0f TIM_CounterMode_Down TIM \u5411\u4e0b\u8ba1\u6570\u6a21\u5f0f TIM_CounterMode_CenterAligned1 TIM \u4e2d\u592e\u5bf9\u9f50\u6a21\u5f0f 1 \u8ba1\u6570\u6a21\u5f0f TIM_CounterMode_CenterAligned2 TIM \u4e2d\u592e\u5bf9\u9f50\u6a21\u5f0f 2 \u8ba1\u6570\u6a21\u5f0f TIM_CounterMode_CenterAligned3 TIM \u4e2d\u592e\u5bf9\u9f50\u6a21\u5f0f 3 \u8ba1\u6570\u6a21\u5f0f <p>\u4f8b\uff1a </p> <pre><code>TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure; TIM_TimeBaseStructure.TIM_Period = 0xFFFF; TIM_TimeBaseStructure.TIM_Prescaler = 0xF; TIM_TimeBaseStructure.TIM_ClockDivision = 0x0; TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; TIM_TimeBaseInit(TIM2, &amp; TIM_TimeBaseStructure); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_ocxinit","title":"\u51fd\u6570 TIM_OCxInit","text":"<p>Table 463. \u51fd\u6570 TIM_OCInit </p> \u51fd\u6570\u540d TIM_OCxInit \u51fd\u6570\u539f\u5f62 void TIM_OCxInit(TIM_TypeDef TIMx,  TIM_OCInitTypeDef TIM_OCInitStruct)  //TIM_OCxINIT x\u53ef\u9009\u62e91 2 3 4 \u529f\u80fd\u63cf\u8ff0 \u6839\u636e TIM_OCInitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe TIMx \u8f93\u5165\u53c2\u6570 1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 TIM_OCInitStruct\uff1a\u6307\u5411\u7ed3\u6784 TIM_OCInitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86 TIMx \u65f6\u95f4\u57fa\u6570\u5355\u4f4d\u7684\u914d\u7f6e\u4fe1\u606f    \u53c2\u9605 Section\uff1aTIM_OCInitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>TIM_OCInitTypeDef structure </p> <pre><code>TIM_OCInitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6***\u201cstm32f10x_tim.h\u201d\\***\uff1a typedef struct { u16 TIM_OCMode;\nu16 TIM_Channel;\nu16 TIM_Pulse;\nu16 TIM_OCPolarity; } TIM_OCInitTypeDef;\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_ocmode","title":"\u53c2\u6570 TIM_OCMode","text":"<p>TIM_OCMode \u9009\u62e9\u5b9a\u65f6\u5668\u6a21\u5f0f\u3002\u8be5\u53c2\u6570\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 464. TIM_OCMode \u5b9a\u4e49 </p> TIM_OCMode \u63cf\u8ff0 TIM_OCMode_Timing TIM \u8f93\u51fa\u6bd4\u8f83\u65f6\u95f4\u6a21\u5f0f TIM_OCMode_Active TIM \u8f93\u51fa\u6bd4\u8f83\u4e3b\u52a8\u6a21\u5f0f TIM_OCMode_Inactive TIM \u8f93\u51fa\u6bd4\u8f83\u975e\u4e3b\u52a8\u6a21\u5f0f TIM_OCMode_Toggle TIM \u8f93\u51fa\u6bd4\u8f83\u89e6\u53d1\u6a21\u5f0f TIM_OCMode_PWM1 TIM \u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u6a21\u5f0f 1 TIM_OCMode_PWM2 TIM \u8109\u51b2\u5bbd\u5ea6\u8c03\u5236\u6a21\u5f0f 2"},{"location":"EmbeddedSyS/STM32/TIM/#tim_channel","title":"\u53c2\u6570 TIM_Channel","text":"<p>TIM_Channel \u9009\u62e9\u901a\u9053\u3002\u8be5\u53c2\u6570\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 465. TIM_Channel \u503c </p> TIM_Channel \u63cf\u8ff0 TIM_Channel_1 \u4f7f\u7528 TIM \u901a\u9053  1 TIM_Channel_2 \u4f7f\u7528 TIM \u901a\u9053  2 TIM_Channel_3 \u4f7f\u7528 TIM \u901a\u9053  3 TIM_Channel_4 \u4f7f\u7528 TIM \u901a\u9053  4"},{"location":"EmbeddedSyS/STM32/TIM/#tim_pulse","title":"\u53c2\u6570 TIM_Pulse","text":"<p>TIM_Pulse \u8bbe\u7f6e\u4e86\u5f85\u88c5\u5165\u6355\u83b7\u6bd4\u8f83\u5bc4\u5b58\u5668\u7684\u8109\u51b2\u503c\u3002\u5b83\u7684\u53d6\u503c\u5fc5\u987b\u5728 0x0000 \u548c 0xFFFF \u4e4b\u95f4\u3002 </p>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_ocpolarity","title":"\u53c2\u6570 TIM_OCPolarity","text":"<p>TIM_OCPolarity\u8f93\u51fa\u6781\u6027\u3002\u8be5\u53c2\u6570\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 466. TIM_OCPolarity \u503c </p> TIM_OCPolarity \u63cf\u8ff0 TIM_OCPolarity_High TIM \u8f93\u51fa\u6bd4\u8f83\u6781\u6027\u9ad8 TIM_OCPolarity_Low TIM \u8f93\u51fa\u6bd4\u8f83\u6781\u6027\u4f4e <p>\u4f8b\uff1a </p> <pre><code>/* Configures the TIM2 Channel1 in PWM Mode */ TIM_OCInitTypeDef TIM_OCInitStructure; TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; TIM_OCInitStructure.TIM_Channel = TIM_Channel_1; TIM_OCInitStructure.TIM_Pulse = 0x3FFF; TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; TIM_OCxInit(TIM2, &amp; TIM_OCInitStructure); //X\u9009\u62e91 2 3 4\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_ocstructinit","title":"\u51fd\u6570 TIM_OCStructInit","text":"<p>Table 475. \u63cf\u8ff0\u4e86\u51fd\u6570TIM_OCStructInit</p> <p>Table 475. \u51fd\u6570 TIM_TimeBaseStructInit </p> \u51fd\u6570\u540d TIM_TimeBaseStructInit \u51fd\u6570\u539f\u5f62 void  TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct) \u529f\u80fd\u63cf\u8ff0 \u628a TIM_OCInitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 \u8f93\u5165\u53c2\u6570 TIM_OCInitStruct\uff1a\u6307\u5411\u7ed3\u6784 TIM_OCInitTypeDef  \u7684\u6307\u9488\uff0c\u5f85\u521d\u59cb\u5316 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>Table 476. \u7ed9\u51fa\u4e86TIM_OCInitStruct\u5404\u4e2a\u6210\u5458\u7684\u7f3a\u7701\u503c </p> <p>Table 476. TIM_OCInitStruct \u7f3a\u7701\u503c </p> \u6210\u5458 \u7f3a\u7701\u503c TIM_OCMode TIM_OCMode_Timing TIM_Channel TIM_Channel_1 TIM_Pulse TIM_Pulse_Reset_Mask TIM_OCPolarity TIM_OCPolarity_High <p>\u4f8b\uff1a </p> <pre><code>/* The following example illustrates how to initialize a \nTIM_OCInitTypeDef structure */ TIM_OCInitTypeDef TIM_OCInitStructure; TIM_OCStructInit(&amp; TIM_OCInitStructure);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_cmd","title":"\u51fd\u6570 TIM_Cmd","text":"<p>Table 479. \u51fd\u6570 TIM_Cmd </p> \u51fd\u6570\u540d TIM_Cmd \u51fd\u6570\u539f\u5f62 void TIM_Cmd(TIM_TypeDef* TIMx,  FunctionalState NewState) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd  TIMx \u5916\u8bbe \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 NewState: \u5916\u8bbe TIMx \u7684\u65b0\u72b6\u6001\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u53d6\uff1aENABLE \u6216\u8005 DISABLE \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Enables the TIM2 counter */ TIM_Cmd(TIM2, ENABLE); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim-_itconfig","title":"\u51fd\u6570 TIM _ITConfig","text":"<p>Table 480. \u51fd\u6570 TIM_ITConfig </p> \u51fd\u6570\u540d TIM_ITConfig \u51fd\u6570\u539f\u5f62 void TIM_ITConfig(TIM_TypeDef* TIMx, u16  TIM_IT, FunctionalState NewState) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684  TIM \u4e2d\u65ad \u8f93\u5165\u53c2\u6570 1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 TIM_IT\uff1a\u5f85\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u7684 TIM \u4e2d\u65ad\u6e90   \u53c2\u9605  Section\uff1aTIM_IT \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570 3 NewState\uff1aTIMx \u4e2d\u65ad\u7684\u65b0\u72b6\u6001\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u53d6\uff1aENABLE \u6216\u8005 DISABLE \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_it","title":"\u53c2\u6570 TIM_IT","text":"<p>\u8f93\u5165\u53c2\u6570 TIM_IT \u4f7f\u80fd\u6216\u8005\u5931\u80fd TIM \u7684\u4e2d\u65ad\u3002\u53ef\u4ee5\u53d6\u4e0b\u8868\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u53d6\u503c\u7684\u7ec4\u5408\u4f5c\u4e3a\u8be5\u53c2\u6570\u7684\u503c\u3002</p> <p>Table 481. TIM_IT \u503c </p> TIM_IT \u63cf\u8ff0 TIM_IT_Update TIM \u66f4\u65b0\u4e2d\u65ad\u6e90(\u8ba1\u6570\u5668\u5411\u4e0a\u6ea2\u51fa/\u5411\u4e0b\u6ea2\u51fa\uff0c\u8ba1\u6570\u5668\u521d\u59cb\u5316) TIM_IT_CC1 TIM \u6355\u83b7/\u6bd4\u8f83 1 \u4e2d\u65ad\u6e90 TIM_IT_CC2 TIM \u6355\u83b7/\u6bd4\u8f83 2 \u4e2d\u65ad\u6e90 TIM_IT_CC3 TIM \u6355\u83b7/\u6bd4\u8f83 3 \u4e2d\u65ad\u6e90 TIM_IT_CC4 TIM \u6355\u83b7/\u6bd4\u8f83 4 \u4e2d\u65ad\u6e90 TIM_IT_Trigger TIM \u89e6\u53d1\u4e2d\u65ad\u6e90 (\u8ba1\u6570\u5668\u542f\u52a8\u3001\u505c\u6b62\u3001\u521d\u59cb\u5316\u6216\u8005\u7531\u5185\u90e8/\u5916\u90e8\u89e6\u53d1\u8ba1\u6570) <p>\u4f8b\uff1a </p> <pre><code>/* Enables the TIM2 Capture Compare channel 1 Interrupt source */ TIM_ITConfig(TIM2, TIM_IT_CC1, ENABLE ); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_internalclockconfig","title":"\u51fd\u6570 TIM_InternalClockConfig","text":"<p>Table 487. \u51fd\u6570 TIM_InternalClockConfig </p> \u51fd\u6570\u540d TIM_InternalClockConfig \u51fd\u6570\u539f\u5f62 TIM_InternalClockConfig(TIM_TypeDef* TIMx); \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u5185\u90e8\u65f6\u949f \u8f93\u5165\u53c2\u6570 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Selects the internal clock for TIM2 */ TIM_InternalClockConfig(TIM2); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_itrxexternalclockconfig","title":"\u51fd\u6570 TIM_ITRxExternalClockConfig","text":"<p>Table 488. \u51fd\u6570 TIM_ITRxExternalClockConfig</p> \u51fd\u6570\u540d TIM_ITRxExternalClockConfig \u51fd\u6570\u539f\u5f62 void  TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, u16 TIM_InputTriggerSource) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e TIMx \u5185\u90e8\u89e6\u53d1\u4e3a\u5916\u90e8\u65f6\u949f\u6a21\u5f0f \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_InputTriggerSource\uff1a\u8f93\u5165\u89e6\u53d1\u6e90   \u53c2\u9605  Section\uff1aTIM_InputTriggerSource \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_inputtriggersource","title":"\u53c2\u6570 TIM_InputTriggerSource","text":"<p>TIM_InputTriggerSource \u9009\u62e9 TIM \u8f93\u5165\u89e6\u53d1\u3002</p> <p>Table 489. TIM_InputTriggerSource \u503c </p> TIM_InputTriggerSource \u63cf\u8ff0 TIM_TS_ITR0 TIM \u5185\u90e8\u89e6\u53d1 0 TIM_TS_ITR1 TIM \u5185\u90e8\u89e6\u53d1 1 TIM_TS_ITR2 TIM \u5185\u90e8\u89e6\u53d1 2 TIM_TS_ITR3 TIM \u5185\u90e8\u89e6\u53d1 3 <p>\u4f8b\uff1a </p> <pre><code>/* TIM2 internal trigger 3 used as clock source */ TIM_ITRxExternalClockConfig(TIM2, TIM_TS_ITR3);  </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_tixexternalclockconfig","title":"\u51fd\u6570 TIM_TIxExternalClockConfig","text":"<p>Table 490. \u51fd\u6570 TIM_TIxExternalClockConfig</p> \u51fd\u6570\u540d TIM_TIxExternalClockConfig \u51fd\u6570\u539f\u5f62 void  TIM_TIxExternalClockConfig(TIM_TypeDef*  TIMx,  u16 TIM_TIxExternalCLKSource, u8  TIM_ICPolarity, u8 ICFilter) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u89e6\u53d1\u4e3a\u5916\u90e8\u65f6\u949f \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_ TIxExternalCLKSource\uff1a\u89e6\u53d1\u6e90   \u53c2\u9605  Section\uff1aTIM_ TIxExternalCLKSource \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  3 TIM_ ICPolarity\uff1a\u6307\u5b9a\u7684 TI  \u6781\u6027   \u53c2\u9605  Section\uff1aTIM_ ICPolarity \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  4 ICFilter\uff1a\u6307\u5b9a\u7684\u8f93\u5165\u6bd4\u8f83\u6ee4\u6ce2\u5668\u3002\u8be5\u53c2\u6570\u53d6\u503c\u5728 0x0 \u548c 0xF \u4e4b\u95f4\u3002 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_tixexternalclksource","title":"\u53c2\u6570 TIM_TIxExternalCLKSource","text":"<p>TIM_TIxExternalCLKSource\u9009\u62e9TIMx\u5916\u90e8\u65f6\u949f\u6e90\u3002</p> <p>Table 491. TIM_TIxExternalCLKSource \u503c </p> TIM_TIxExternalCLKSource \u63cf\u8ff0 TIM_TS_TI1FP1 TIM IC1 \u8fde\u63a5\u5230 TI1 TIM_TS_TI1FP2 TIM IC2 \u8fde\u63a5\u5230 TI2 TIM_TS_TI1F_ED TIM IC1 \u8fde\u63a5\u5230 TI1\uff1a\u4f7f\u7528\u8fb9\u6cbf\u63a2\u6d4b <p>\u4f8b\uff1a </p> <pre><code>/* Selects the TI1 as clock for TIM2: the external clock is connected to TI1 input pin, the rising edge is the active edge and no filter sampling is done (ICFilter = 0) */ TIM_TIxExternalClockConfig(TIM2, TIM_TS_TI1FP1, TIM_ICPolarity_Rising, 0); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_etrclockmode1config","title":"\u51fd\u6570 TIM_ETRClockMode1Config","text":"<p>Table 492. \u51fd\u6570 TIM_ETRClockMode1Config </p> \u51fd\u6570\u540d TIM_ETRClockMode1Config \u51fd\u6570\u539f\u5f62 void  TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, u16 TIM_ExtTRGPrescaler, u16  TIM_ExtTRGPolarity, u16 ExtTRGFilter) \u529f\u80fd\u63cf\u8ff0 \u914d\u7f6e TIMx \u5916\u90e8\u65f6\u949f\u6a21\u5f0f  1 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_ExtTRGPrescaler\uff1a\u5916\u90e8\u89e6\u53d1\u9884\u5206\u9891   \u53c2\u9605  Section\uff1aTIM_ExtTRGPrescaler \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  3 TIM_ExtTRGPolarity\uff1a\u5916\u90e8\u65f6\u949f\u6781\u6027   \u53c2\u9605 Section\uff1aTIM_ExtTRGPolarity \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  4 ExtTRGFilter\uff1a\u5916\u90e8\u89e6\u53d1\u6ee4\u6ce2\u5668\u3002\u8be5\u53c2\u6570\u53d6\u503c\u5728 0x0 \u548c 0xF \u4e4b\u95f4\u3002 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_exttrgprescaler","title":"\u53c2\u6570 TIM_ExtTRGPrescaler","text":"<p>TIM_ExtTRGPrescaler\u8bbe\u7f6eTIMx\u5916\u90e8\u89e6\u53d1\u9884\u5206\u9891\u3002\u89c1Table 493. \u53c2\u9605\u8be5\u53c2\u6570\u7684\u53d6\u503c\u3002 </p> <p>Table 493. TIM_ExtTRGPrescaler \u503c </p> TIM_ExtTRGPrescaler \u63cf\u8ff0 TIM_ExtTRGPSC_OFF TIM ETRP \u9884\u5206\u9891  OFF TIM_ExtTRGPSC_DIV2 TIM ETRP \u9891\u7387\u9664\u4ee5 2 TIM_ExtTRGPSC_DIV4 TIM ETRP \u9891\u7387\u9664\u4ee5 4 TIM_ExtTRGPSC_DIV8 TIM ETRP \u9891\u7387\u9664\u4ee5 8"},{"location":"EmbeddedSyS/STM32/TIM/#tim_exttrgpolarity","title":"\u53c2\u6570 TIM_ExtTRGPolarity","text":"<p>TIM_ExtTRGPolarity\u8bbe\u7f6eTIMx\u5916\u90e8\u89e6\u53d1\u6781\u6027\u3002\u89c1Table 494. \u53c2\u9605\u8be5\u53c2\u6570\u7684\u53d6\u503c\u3002</p> <p>Table 494. TIM_ExtTRGPolarity \u503c </p> TIM_ExtTRGPolarity \u63cf\u8ff0 TIM_ExtTRGPolarity_Inverted TIM \u5916\u90e8\u89e6\u53d1\u6781\u6027\u7ffb\u8f6c\uff1a\u4f4e\u7535\u5e73\u6216\u4e0b\u964d\u6cbf\u6709\u6548 TIM_ExtTRGPolarity_NonInverted TIM \u5916\u90e8\u89e6\u53d1\u6781\u6027\u975e\u7ffb\u8f6c\uff1a\u9ad8\u7535\u5e73\u6216\u4e0a\u5347\u6cbf\u6709\u6548 <p>\u4f8b\uff1a </p> <pre><code>/* Selects the external clock Mode 1 for TIM2: \nthe external clock is connected to ETR input pin, the rising edge is the active edge, no filter sampling is done (ExtTRGFilter = 0) and the prescaler is fixed to TIM_ExtTRGPSC_DIV2 */ TIM_ExternalCLK1Config(TIM2, TIM_ExtTRGPSC_DIV2, TIM_ExtTRGPolarity_NonInverted, 0x0); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_etrclockmode2config","title":"\u51fd\u6570 TIM_ETRClockMode2Config","text":"<p>Table 495. \u51fd\u6570 TIM_ETRClockMode2Config </p> \u51fd\u6570\u540d TIM_ETRClockMode2Config \u51fd\u6570\u539f\u5f62 void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, u16   TIM_ExtTRGPrescaler,  u16 TIM_ExtTRGPolarity, u16 ExtTRGFilter) \u529f\u80fd\u63cf\u8ff0 \u914d\u7f6eTIMx\u5916\u90e8\u65f6\u949f\u6a21\u5f0f2 \u8f93\u5165\u53c2\u65701 TIMx\uff1ax\u53ef\u4ee5\u662f1,2,3,4,5\u6216\u80058\uff0c\u6765\u9009\u62e9TIM\u5916\u8bbe \u8f93\u5165\u53c2\u65702 TIM_ExtTRGPrescaler\uff1a\u5916\u90e8\u89e6\u53d1\u9884\u5206\u9891 \u8f93\u5165\u53c2\u65703 TIM_ExtTRGPolarity\uff1a\u5916\u90e8\u65f6\u949f\u6781\u6027 \u8f93\u5165\u53c2\u65704 ExtTRGFilter\uff1a\u5916\u90e8\u89e6\u53d1\u6ee4\u6ce2\u5668\u3002\u8be5\u53c2\u6570\u53d6\u503c\u57280x0\u548c0xF\u4e4b\u95f4\u3002 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u51fd\u6570\u539f\u578b\uff1a</p> <pre><code>/**\n  * @brief  Configures the External clock Mode2\n  * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.\n  * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.\n  *   This parameter can be one of the following values:\n  *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF. --\u4e0d\u5206\u9891\n  *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.\n  *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.\n  *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.\n  * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.\n  *   This parameter can be one of the following values:\n  *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active. -- \u4f4e\u7535\u5e73\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\n  *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active. -- \u9ad8\u7535\u5e73\u6216\u4e0a\u5347\u6cbf\u89e6\u53d1\n  * @param  ExtTRGFilter: External Trigger Filter. -- \u5916\u90e8\u89e6\u53d1\u6ee4\u6ce2\u5668 \u53c2\u7167 TIM_TimeBaseInit\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u7684                                            TIM_ClockDivision\u53c2\u6570 \u4ece\u6a21\u5f0f\u63a7\u5236\u5bc4\u5b58\u5668(TIMx_SMCR)\u4e2d\u7684 ETF\n  *   This parameter must be a value between 0x00 and 0x0F\n  * @retval None\n  */\nvoid TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)\n{\n/* Check the parameters */\nassert_param(IS_TIM_LIST3_PERIPH(TIMx));\nassert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));\nassert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));\nassert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));\n/* Configure the ETR Clock source */\nTIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);\n/* Enable the External clock mode2 */\nTIMx-&gt;SMCR |= TIM_SMCR_ECE;\n}\n</code></pre> <p></p> <p>\u4f8b\uff1a </p> <pre><code>/* Selects the external clock Mode 2 for TIM2: \nthe external clock is connected to ETR input pin, the rising edge is the active edge, no filter sampling is done (ExtTRGFilter = 0) and the prescaler isfixed to TIM_ExtTRGPSC_DIV2 */ TIM_ExternalCLK2Config(TIM2, TIM_ExtTRGPSC_DIV2, TIM_ExtTRGPolarity_NonInverted, 0x0); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_etrconfig","title":"\u51fd\u6570 TIM_ETRConfig","text":"<p>Table 496. \u51fd\u6570 TIM_ETRConfig </p> \u51fd\u6570\u540d TIM_ETRConfig \u51fd\u6570\u539f\u5f62 void TIM_ETRConfig(TIM_TypeDef* TIMx, u16 TIM_ExtTRGPrescaler, u16  TIM_ExtTRGPolarity, u8 ExtTRGFilter) \u529f\u80fd\u63cf\u8ff0 \u914d\u7f6e  TIMx \u5916\u90e8\u89e6\u53d1 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_ExtTRGPrescaler\uff1a\u5916\u90e8\u89e6\u53d1\u9884\u5206\u9891   \u53c2\u9605  Section\uff1aTIM_ExtTRGPrescaler \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  3 TIM_ExtTRGPolarity\uff1a\u5916\u90e8\u65f6\u949f\u6781\u6027   \u53c2\u9605  Section\uff1aTIM_ExtTRGPolarity \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  4 ExtTRGFilter\uff1a\u5916\u90e8\u89e6\u53d1\u6ee4\u6ce2\u5668\u3002\u8be5\u53c2\u6570\u53d6\u503c\u5728 0x0 \u548c 0xF \u4e4b\u95f4\u3002 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Configure the External Trigger (ETR) for TIM2: \nthe rising edge is the active edge, no filter sampling is done (ExtTRGFilter = 0) and the prescaler is fixed to TIM_ExtTRGPSC_DIV2 */ TIM_ExternalCLK2Config(TIM2, TIM_ExtTRGPSC_DIV2, TIM_ExtTRGPolarity_NonInverted, 0x0); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_selectinputtrigger","title":"\u51fd\u6570 TIM_SelectInputTrigger","text":"<p>Table 497. \u51fd\u6570 TIM_SelectInputTrigger </p> \u51fd\u6570\u540d TIM_SelectInputTrigger \u51fd\u6570\u539f\u5f62 void TIM_SelectInputTrigger(TIM_TypeDef*  TIMx, u16 TIM_InputTriggerSource) \u529f\u80fd\u63cf\u8ff0 \u9009\u62e9 TIMx \u8f93\u5165\u89e6\u53d1\u6e90 \u8f93\u5165\u53c2\u6570 1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 TIM_InputTriggerSource\uff1a\u8f93\u5165\u89e6\u53d1\u6e90   \u53c2\u9605  Section\uff1aTIM_InputTriggerSource \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_inputtriggersource_1","title":"\u53c2\u6570 TIM_InputTriggerSource","text":"<p>TIM_InputTriggerSource\u9009\u62e9TIMx\u8f93\u5165\u89e6\u53d1\u6e90\u3002\u89c1Table 498. \u53c2\u9605\u8be5\u53c2\u6570\u7684\u53d6\u503c\u3002</p> <p>Table 498. TIM_InputTriggerSource \u503c </p> TIM_InputTriggerSource \u63cf\u8ff0 TIM_TS_ITR0 TIM \u5185\u90e8\u89e6\u53d1 0 TIM_TS_ITR1 TIM \u5185\u90e8\u89e6\u53d1 1 TIM_TS_ITR2 TIM \u5185\u90e8\u89e6\u53d1 2 TIM_TS_ITR3 TIM \u5185\u90e8\u89e6\u53d1 3 TIM_TS_TI1F_ED TIM TL1 \u8fb9\u6cbf\u63a2\u6d4b\u5668 TIM_TS_TI1FP1 TIM \u7ecf\u6ee4\u6ce2\u5b9a\u65f6\u5668\u8f93\u5165 1 TIM_TS_TI2FP2 TIM \u7ecf\u6ee4\u6ce2\u5b9a\u65f6\u5668\u8f93\u5165 2 TIM_TS_ETRF TIM \u5916\u90e8\u89e6\u53d1\u8f93\u5165 <p>\u4f8b\uff1a </p> <pre><code>/* Selects the Internal Trigger 3 as input trigger fot TIM2 */\nvoid TIM_SelectInputTrigger(TIM2, TIM_TS_ITR3); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_prescalerconfig","title":"\u51fd\u6570 TIM_PrescalerConfig","text":"<p>Table 499. \u51fd\u6570 TIM_PrescalerConfig </p> \u51fd\u6570\u540d TIM_PrescalerConfig \u51fd\u6570\u539f\u5f62 void    TIM_PrescalerConfig(TIM_TypeDef*   TIMx,   u16   Prescaler,u16 TIM_PSCReloadMode) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u9884\u5206\u9891 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 Prescaler\u8981\u5199\u5165\u7684\u9884\u5206\u9891\u503c \u8f93\u5165\u53c2\u6570  3 TIM_PSCReloadMode\uff1a\u9884\u5206\u9891\u91cd\u8f7d\u6a21\u5f0f \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_pscreloadmode","title":"\u53c2\u6570 TIM_PSCReloadMode","text":"<p>TIM_PSCReloadMode\u9009\u62e9\u9884\u5206\u9891\u91cd\u8f7d\u6a21\u5f0f\u3002\u89c1Table 500. \u53c2\u9605\u8be5\u53c2\u6570\u7684\u53d6\u503c\u3002 </p> <p>Table 500. TIM_PSCReloadMode \u503c </p> TIM_PSCReloadMode \u63cf\u8ff0 TIM_PSCReloadMode_Update TIM \u9884\u5206\u9891\u503c\u5728\u66f4\u65b0\u4e8b\u4ef6\u88c5\u5165 TIM_PSCReloadMode_Immediate TIM \u9884\u5206\u9891\u503c\u5373\u65f6\u88c5\u5165 <p>\u4f8b\uff1a </p> <pre><code>/* Configures the TIM2 new Prescaler value */\nu16 TIMPrescaler = 0xFF00; TIM_PrescalerConfig(TIM2, TIMPrescaler, TIM_PSCReloadMode_Immediate); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_countermodeconfig","title":"\u51fd\u6570 TIM_CounterModeConfig","text":"<p>Table 501. \u51fd\u6570 TIM_CounterModeConfig </p> \u51fd\u6570\u540d TIM_CounterModeConfig \u51fd\u6570\u539f\u5f62 void  TIM_CounterModeConfig(TIM_TypeDef* TIMx, u16 TIM_CounterMode) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u8ba1\u6570\u5668\u6a21\u5f0f \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_CounterMode\uff1a\u5f85\u4f7f\u7528\u7684\u8ba1\u6570\u5668\u6a21\u5f0f   \u53c2\u9605  Section\uff1aTIM_CounterMode \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Selects the Center Aligned counter Mode 1 for the TIM2 */ TIM_CounterModeConfig(TIM2, TIM_Counter_CenterAligned1); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_forcedoc1config","title":"\u51fd\u6570 TIM_ForcedOC1Config","text":"<p>Table 502. \u51fd\u6570 TIM_ForcedOC1Config </p> \u51fd\u6570\u540d TIM_ForcedOC1Config \u51fd\u6570\u539f\u5f62 void TIM_ForcedOC1Config(TIM_TypeDef*  TIMx, u16 TIM_ForcedAction) \u529f\u80fd\u63cf\u8ff0 \u7f6e TIMx OC1 \u4e3a\u6d3b\u52a8\u6216\u8005\u975e\u6d3b\u52a8\u7535\u5e73   -- \u914d\u7f6e\u5f3a\u5236\u8f93\u51fa\u6a21\u5f0f \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_ForcedAction\uff1a\u8f93\u51fa\u4fe1\u53f7\u7684\u8bbe\u7f6e\u52a8\u4f5c   \u53c2\u9605  Section\uff1aTIM_ForcedAction \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>TIM_ForcedAction \u8f93\u51fa\u4fe1\u53f7\u7684\u8bbe\u7f6e\u52a8\u4f5c\u53d6\u503c\u89c1\u4e0b\u8868\u3002 </p> <p>Table 503. TIM_ForcedAction \u503c </p> TIM_ForcedAction \u63cf\u8ff0 TIM_ForcedAction_Active \u7f6e\u4e3a  OCxREF \u4e0a\u7684\u6d3b\u52a8\u7535\u5e73 TIM_ForcedAction_InActive \u7f6e\u4e3a  OCxREF \u4e0a\u7684\u975e\u6d3b\u52a8\u7535\u5e73 <p>\u4f8b\uff1a </p> <pre><code>/* Forces the TIM2 Output Compare 1 signal to the active level */ TIM_ForcedOC1Config(TIM2, TIM_ForcedAction_Active); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_arrpreloadconfig","title":"\u51fd\u6570 TIM_ARRPreloadConfig","text":"<p>Table 507. \u51fd\u6570 TIM_ARRPreloadConfig </p> \u51fd\u6570\u540d TIM_ARRPreloadConfig \u51fd\u6570\u539f\u5f62 void TIM_ARRPreloadConfig(TIM_TypeDef*  TIMx, FunctionalState Newstate) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd  TIMx \u5728 ARR \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 NewState: TIM_CR1 \u5bc4\u5b58\u5668 ARPE  \u4f4d\u7684\u65b0\u72b6\u6001\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u53d6\uff1aENABLE \u6216\u8005 DISABLE \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Enables the TIM2 Preload on ARR Register */\nTIM_ARRPreloadConfig(TIM2, ENABLE);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_oc1preloadconfig","title":"\u51fd\u6570 TIM_OC1PreloadConfig","text":"<p>Table 509. \u51fd\u6570 TIM_OC1PreloadConfig </p> \u51fd\u6570\u540d TIM_OC1PreloadConfig \u51fd\u6570\u539f\u5f62 void TIM_OC1PreloadConfig(TIM_TypeDef*  TIMx, u16 TIM_OCPreload) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd  TIMx \u5728 CCR1 \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_OCPreload\uff1a\u8f93\u51fa\u6bd4\u8f83\u9884\u88c5\u8f7d\u72b6\u6001 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>TIM_OCPreload \u8f93\u51fa\u6bd4\u8f83\u9884\u88c5\u8f7d\u72b6\u6001\u53ef\u4ee5\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u5982\u4e0b\u8868\u3002 </p> <p>Table 510. TIM_OCPreload \u503c </p> TIM_OCPreload \u63cf\u8ff0 TIM_OCPreload_Enable TIMx \u5728 CCR1 \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668\u4f7f\u80fd TIM_OCPreload_Disable TIMx \u5728 CCR1 \u4e0a\u7684\u9884\u88c5\u8f7d\u5bc4\u5b58\u5668\u5931\u80fd <p>\u4f8b\uff1a </p> <pre><code>/* Enables the TIM2 Preload on CC1 Register */ TIM_OC1PreloadConfig(TIM2, TIM_OCPreload_Enable); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_setcounter","title":"\u51fd\u6570 TIM_SetCounter","text":"<p>Table 544. \u51fd\u6570 TIM_SetCounter </p> \u51fd\u6570\u540d TIM_SetCounter \u51fd\u6570\u539f\u5f62 void TIM_SetCounter(TIM_TypeDef* TIMx,  u16 Counter) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u8ba1\u6570\u5668\u5bc4\u5b58\u5668\u503c \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 Counter\uff1a\u8ba1\u6570\u5668\u5bc4\u5b58\u5668\u65b0\u503c \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <p>/ Sets the TIM2 new Counter value / u16 TIMCounter = 0xFFFF; TIM_SetCounter(TIM2, TIMCounter); </p>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_setautoreload","title":"\u51fd\u6570 TIM_SetAutoreload","text":"<p>Table 545. \u51fd\u6570 TIM_ SetAutoreload </p> \u51fd\u6570\u540d TIM_ SetAutoreload \u51fd\u6570\u539f\u5f62 void TIM_SetCounter(TIM_TypeDef* TIMx,  u16 Counter) \u529f\u80fd\u63cf\u8ff0 \u8bbe\u7f6e  TIMx \u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u503c \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 Autoreload\uff1a\u81ea\u52a8\u91cd\u88c5\u8f7d\u5bc4\u5b58\u5668\u65b0\u503c \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Sets the TIM2 new Autoreload value */ u16 TIMAutoreload = 0xFFFF; TIM_SetAutoreload(TIM2, TIMAutoreload); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_getcounter","title":"\u51fd\u6570 TIM_GetCounter","text":"<p>Table 559. \u51fd\u6570 TIM_GetCounter </p> \u51fd\u6570\u540d TIM_GetCounter \u51fd\u6570\u539f\u5f62 u16 TIM_GetCounter(TIM_TypeDef* TIMx) \u529f\u80fd\u63cf\u8ff0 \u83b7\u5f97  TIMx \u8ba1\u6570\u5668\u7684\u503c \u8f93\u5165\u53c2\u6570 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u8ba1\u6570\u5668\u7684\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Gets TIM2 counter value */ u16 TIMCounter = TIM_GetCounter(TIM2); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_getprescaler","title":"\u51fd\u6570 TIM_GetPrescaler","text":"<p>Table 560. \u51fd\u6570 TIM_GetPrescaler </p> \u51fd\u6570\u540d TIM_GetPrescaler \u51fd\u6570\u539f\u5f62 u16 TIM_GetPrescaler (TIM_TypeDef*  TIMx) \u529f\u80fd\u63cf\u8ff0 \u83b7\u5f97  TIMx \u9884\u5206\u9891\u503c \u8f93\u5165\u53c2\u6570 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u9884\u5206\u9891\u7684\u503c \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Gets TIM2 prescaler value */\nu16 TIMPrescaler = TIM_GetPrescaler(TIM2);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_getflagstatus","title":"\u51fd\u6570 TIM_GetFlagStatus","text":"<p>Table 561. \u51fd\u6570 TIM_ GetFlagStatus </p> \u51fd\u6570\u540d TIM_ GetFlagStatus \u51fd\u6570\u539f\u5f62 FlagStatus TIM_GetFlagStatus(TIM_TypeDef*  TIMx, u16 TIM_FLAG) \u529f\u80fd\u63cf\u8ff0 \u68c0\u67e5\u6307\u5b9a\u7684  TIM \u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e0e\u5426 \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_FLAG\uff1a\u5f85\u68c0\u67e5\u7684 TIM \u6807\u5fd7\u4f4d   \u53c2\u9605  Section\uff1aTIM_FLAG \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c TIM_FLAG \u7684\u65b0\u72b6\u6001\uff08SET  \u6216\u8005 RESET\uff09 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/TIM/#tim_flag","title":"\u53c2\u6570 TIM_FLAG","text":"<p>Table 562. \u7ed9\u51fa\u4e86\u6240\u6709\u53ef\u4ee5\u88ab\u51fd\u6570TIM_ GetFlagStatus\u68c0\u67e5\u7684\u6807\u5fd7\u4f4d\u5217\u8868  </p> <p>Table 562. TIM_FLAG \u503c </p> TIM_FLAG \u63cf\u8ff0 TIM_FLAG_Update TIM \u66f4\u65b0\u6807\u5fd7\u4f4d TIM_FLAG_CC1 TIM \u6355\u83b7/\u6bd4\u8f83 1 \u6807\u5fd7\u4f4d TIM_FLAG_CC2 TIM \u6355\u83b7/\u6bd4\u8f83 2 \u6807\u5fd7\u4f4d TIM_FLAG_CC3 TIM \u6355\u83b7/\u6bd4\u8f83 3 \u6807\u5fd7\u4f4d TIM_FLAG_CC4 TIM \u6355\u83b7/\u6bd4\u8f83 4 \u6807\u5fd7\u4f4d TIM_FLAG_Trigger TIM \u89e6\u53d1\u6807\u5fd7\u4f4d TIM_FLAG_CC1OF TIM \u6355\u83b7/\u6bd4\u8f83 1 \u6ea2\u51fa\u6807\u5fd7\u4f4d TIM_FLAG_CC2OF TIM \u6355\u83b7/\u6bd4\u8f83 2 \u6ea2\u51fa\u6807\u5fd7\u4f4d TIM_FLAG_CC3OF TIM \u6355\u83b7/\u6bd4\u8f83 3 \u6ea2\u51fa\u6807\u5fd7\u4f4d TIM_FLAG_CC4OF TIM \u6355\u83b7/\u6bd4\u8f83 4 \u6ea2\u51fa\u6807\u5fd7\u4f4d <p>\u4f8b\uff1a </p> <pre><code>/* Check if the TIM2 Capture Compare 1 flag is set or reset */\nif(TIM_GetFlagStatus(TIM2, TIM_FLAG_CC1) == SET) {\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_clearflag","title":"\u51fd\u6570 TIM_ClearFlag","text":"<p>Table 563. \u51fd\u6570 TIM_ ClearFlag </p> \u51fd\u6570\u540d TIM_ ClearFlag \u51fd\u6570\u539f\u5f62 void TIM_ClearFlag(TIM_TypeDef* TIMx,  u32 TIM_FLAG) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664  TIMx \u7684\u5f85\u5904\u7406\u6807\u5fd7\u4f4d \u8f93\u5165\u53c2\u6570  1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 TIM_FLAG\uff1a\u5f85\u6e05\u9664\u7684 TIM \u6807\u5fd7\u4f4d   \u53c2\u9605 Section\uff1aTIM_FLAG  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Clear the TIM2 Capture Compare 1 flag */ TIM_ClearFlag(TIM2, TIM_FLAG_CC1); </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_getitstatus","title":"\u51fd\u6570 TIM_GetITStatus","text":"<p>Table 564. \u51fd\u6570 TIM_ GetITStatus </p> \u51fd\u6570\u540d TIM_ GetITStatus \u51fd\u6570\u539f\u5f62 ITStatus TIM_GetITStatus(TIM_TypeDef*  TIMx, u16 TIM_IT) \u529f\u80fd\u63cf\u8ff0 \u68c0\u67e5\u6307\u5b9a\u7684 TIM \u4e2d\u65ad\u53d1\u751f\u4e0e\u5426 \u8f93\u5165\u53c2\u6570 1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 TIM_IT\uff1a\u5f85\u68c0\u67e5\u7684 TIM \u4e2d\u65ad\u6e90   \u53c2\u9605  Section\uff1aTIM_IT \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c TIM_IT \u7684\u65b0\u72b6\u6001 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Check if the TIM2 Capture Compare 1 interrupt has occured or not \n*/ if(TIM_GetITStatus(TIM2, TIM_IT_CC1) == SET) {\n} </code></pre>"},{"location":"EmbeddedSyS/STM32/TIM/#tim_clearitpendingbit","title":"\u51fd\u6570 TIM_ClearITPendingBit","text":"<p>Table 565. \u51fd\u6570 TIM_ ClearITPendingBit </p> \u51fd\u6570\u540d TIM_ ClearITPendingBit \u51fd\u6570\u539f\u5f62 void TIM_ClearITPendingBit(TIM_TypeDef*  TIMx, u16 TIM_IT) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664 TIMx \u7684\u4e2d\u65ad\u5f85\u5904\u7406\u4f4d \u8f93\u5165\u53c2\u6570 1 TIMx\uff1ax \u53ef\u4ee5\u662f 2\uff0c3 \u6216\u8005 4\uff0c\u6765\u9009\u62e9 TIM  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 TIM_IT\uff1a\u5f85\u68c0\u67e5\u7684 TIM \u4e2d\u65ad\u5f85\u5904\u7406\u4f4d   \u53c2\u9605  Section\uff1aTIM_IT \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Clear the TIM2 Capture Compare 1 interrupt pending bit */ TIM_ClearITPendingBit(TIM2, TIM_IT_CC1);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/USART/","title":"USART","text":""},{"location":"EmbeddedSyS/STM32/USART/#_1","title":"\u901a\u4fe1\u662f\u4ec0\u4e48","text":"<ul> <li> <p>\u901a\u4fe1\u7684\u76ee\u7684\uff1a\u5c06\u4e00\u4e2a\u8bbe\u5907\u7684\u6570\u636e\u4f20\u9001\u5230\u53e6\u4e00\u4e2a\u8bbe\u5907\uff0c\u6269\u5c55\u786c\u4ef6\u7cfb\u7edf</p> </li> <li> <p>\u901a\u4fe1\u534f\u8bae\uff1a\u662f\u4e24\u4e2a\uff08\u6216\u591a\u4e2a\uff09\u8bbe\u5907\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c\u5fc5\u987b\u8981\u9075\u5faa\u7684\u4e00\u79cd\u534f\u8bae\u3002\u901a\u8baf\u534f\u8bae\u5206\u4e3a\u7269\u7406\u5c42\u548c\u534f\u8bae\u5c42\u3002</p> </li> <li> <p>\u7269\u7406\u5c42\uff1a\u89c4\u5b9a\u901a\u8baf\u7cfb\u7edf\u4e2d\u5177\u6709\u673a\u68b0\u3001\u7535\u5b50\u529f\u80fd\u90e8\u5206\u7684\u7279\u6027\uff0c\u786e\u4fdd\u539f\u59cb\u6570\u636e\u5728\u7269\u7406\u5a92\u4f53\u7684\u4f20\u8f93\uff1b</p> </li> <li> <p>\u534f\u8bae\u5c42\uff1a\u89c4\u5b9a\u901a\u8baf\u903b\u8f91\uff0c\u7edf\u4e00\u6536\u53d1\u53cc\u65b9\u7684\u6570\u636e\u6253\u5305\u3001\u89e3\u5305\u6807\u51c6\u3002</p> </li> <li> <p>\u901a\u4fe1\u7684\u65b9\u5f0f:</p> </li> </ul> <p></p>"},{"location":"EmbeddedSyS/STM32/USART/#usart_1","title":"USART\u4ecb\u7ecd","text":"<p>USART(\u901a\u7528\u540c\u6b65\u5f02\u6b65\u6536\u53d1\u5668):\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\u7684\u65b9\u6cd5\u4e0e\u4f7f\u7528\u5de5\u4e1a\u6807\u51c6NRZ\u5f02\u6b65\u4e32\u884c\u6570\u636e\u683c\u5f0f\u7684\u5916\u90e8\u8bbe\u5907\u4e4b\u95f4\u8fdb\u884c\u5168\u53cc\u5de5\u6570\u636e\u4ea4\u6362\u3002</p> <p>USART\u5229\u7528\u5206\u6570\u6ce2\u7279\u7387\u53d1\u751f\u5668\u63d0\u4f9b\u5bbd\u8303\u56f4\u7684\u6ce2\u7279\u7387\u9009\u62e9\u3002 \u5b83\u652f\u6301\u540c\u6b65\u5355\u5411\u901a\u4fe1\u548c\u534a\u53cc\u5de5\u5355\u7ebf\u901a\u4fe1\uff0c\u4e5f\u652f\u6301LIN(\u5c40\u90e8\u4e92\u8fde\u7f51)\uff0c\u667a\u80fd\u5361\u534f\u8bae\u548cIrDA(\u7ea2\u5916\u6570\u636e \u7ec4\u7ec7)SIR ENDEC\u89c4\u8303\uff0c\u4ee5\u53ca\u8c03\u5236\u89e3\u8c03\u5668(CTS/RTS)\u64cd\u4f5c\u3002\u5b83\u8fd8\u5141\u8bb8\u591a\u5904\u7406\u5668\u901a\u4fe1\u3002 \u4f7f\u7528\u591a\u7f13\u51b2\u5668\u914d\u7f6e\u7684DMA\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u901f\u6570\u636e\u901a\u4fe1\u3002</p> <p></p>"},{"location":"EmbeddedSyS/STM32/USART/#_2","title":"\u540c\u6b65\u901a\u4fe1","text":"<p>\u540c\u6b65\u901a\u4fe1\u53cc\u65b9\u90fd\u8981\u6709\u65f6\u949f\u5f15\u811a\uff0c\u53cc\u65b9\u7684\u65f6\u949fCLK\u5f15\u811a\u662f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\uff0c\u901a\u4fe1\u65f6\u7531\u4e3b\u673a\u4f20\u9001\u65f6\u949f\u4fe1\u53f7\uff0c\u63d0\u4f9b\u540c\u6b65\u8109\u51b2\uff0c\u53cc\u65b9\u6839\u636e\u8fd9\u4e2a\u65f6\u949f\u4fe1\u53f7\uff0c\u6765\u786e\u5b9a\u53d1\u9001\u6216\u63a5\u53d7\u6bcf\u4e2a\u4f4d\uff0c\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u65f6\u5019\u5b8c\u5168\u540c\u6b65\u3002</p> <ul> <li>\u65f6\u949f\u540c\u6b65</li> <li>\u4fe1\u606f\u683c\u5f0f\u4e3a\u4fe1\u606f\u5e27(\u4e00\u6b21\u901a\u4fe1\u4e2d\u4f20\u8f93\u7684\u6570\u636e\uff0c\u53ef \u4e0d\u6b628\u4f4d)</li> </ul> <p>\u5177\u4f53\u4fe1\u606f\u5c06\u5728SPI\u4e00\u8282\u8bb2\u89e3</p>"},{"location":"EmbeddedSyS/STM32/USART/#_3","title":"\u5f02\u6b65\u901a\u4fe1","text":"<p>\u6211\u4eec\u4f7f\u7528USART\u5b9e\u73b0\u5f02\u6b65\u901a\u4fe1\uff0c\u90a3\u4e48\u5982\u4f55\u4fdd\u8bc1\u5f02\u6b65\u901a\u4fe1\u7684\u53ef\u9760\u6027</p> <ul> <li>\u56fa\u5b9a\u7684\u6570\u636e\u5e27</li> <li>\u4f20\u8f93\u901f\u5ea6\u53cc\u65b9\u5fc5\u987b\u76f8\u540c,\u6ce2\u7279\u7387</li> </ul> <p>\u5bf9\u4e8e\u53d1\u9001\u8bbe\u5907\u548c\u63a5\u6536\u8bbe\u5907\u6765\u8bf4\uff0c\u4e24\u8005\u7684\u4e32\u884c\u901a\u4fe1\u914d\u7f6e\uff08\u6ce2\u7279\u7387\u3001\u5355\u4f4d\u5b57\u7684\u4f4d\u6570\u3001\u5947\u5076\u6821\u9a8c\u3001\u8d77\u59cb\u4f4d\u6570\u4e0e\u7ed3\u675f\u4f4d\u3001\u6d41\u91cf\u63a7\u5236\uff09\u5e94\u8be5\u8bbe\u7f6e\u4e3a\u5b8c\u5168\u76f8\u540c\u3002\u901a\u8fc7\u5728\u6570\u636e\u6d41\u4e2d\u63d2\u5165\u7279\u5b9a\u7684\u6bd4\u7279\u5e8f\u5217\uff0c\u53ef\u4ee5\u6307\u793a\u901a\u4fe1\u7684\u5f00\u59cb\u4e0e\u7ed3\u675f\u3002\u5f53\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\u6570\u636e\u7684\u65f6\u5019\uff0c\u9700\u8981\u5728\u6bd4\u7279\u6d41\u7684\u5f00\u5934\u52a0\u4e0a\u8d77\u59cb\u4f4d\uff0c\u5e76\u5728\u6bd4\u7279\u6d41\u7684\u672b\u5c3e\u52a0\u4e0a\u7ed3\u675f\u4f4d\u3002\u6570\u636e\u5b57\u8282\u7684\u6700\u4f4e\u4f4d\u7d27\u63a5\u5728\u8d77\u59cb\u4f4d\u4e4b\u540e\u3002</p>"},{"location":"EmbeddedSyS/STM32/USART/#_4","title":"\u7535\u5e73\u6807\u51c6","text":"<p>\u7535\u5e73\u6807\u51c6\u662f\u6570\u636e1\u548c\u6570\u636e0\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u662f\u4f20\u8f93\u7ebf\u7f06\u4e2d\u4eba\u4e3a\u89c4\u5b9a\u7684\u7535\u538b\u4e0e\u6570\u636e\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e32\u53e3\u5e38\u7528\u7684\u7535\u5e73\u6807\u51c6\u6709\u5982\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li> <p>TTL\u7535\u5e73\uff1a+3.3V\u6216+5V\u8868\u793a1\uff0c0V\u8868\u793a0</p> </li> <li> <p>RS232\u7535\u5e73\uff1a-3V ~ -15V\u8868\u793a1\uff0c+3 ~ +15V\u8868\u793a0</p> </li> <li> <p>RS485\u7535\u5e73\uff1a\u4e24\u7ebf\u538b\u5dee+2 ~ +6V\u8868\u793a1\uff0c-2 ~ -6V\u8868\u793a0\uff08\u5dee\u5206\u4fe1\u53f7\uff09</p> </li> </ul>"},{"location":"EmbeddedSyS/STM32/USART/#_5","title":"\u4e32\u53e3\u7684\u4e13\u4e1a\u540d\u8bcd","text":"<ul> <li>\u6ce2\u7279\u7387\uff1a\u4e32\u53e3\u901a\u4fe1\u7684\u901f\u7387,\u5355\u4f4d\u65f6\u95f4\u4f20\u8f93\u4e86\u591a\u5c11\u4e2a\u7801\u5143\uff0c0\u62161</li> <li>\u7801\u5143:\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7b49\u65f6\u51fa\u73b0\u7684\u7b26\u53f7</li> <li>\u5355\u7247\u673a\u4e2d\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u7801\u5143\uff0c\u7801\u5143\u5c31\u662f0\u62169600bps: \u6bcf\u79d2\u4f20\u8f939600\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u6570 \u6216 \u4f20\u8f93\u4e00\u4e2a0\u62161\u9700\u89811/9600s</li> <li>\u6bd4\u7279\u7387: \u6bcf\u79d2\u4f20\u8f93\u4e86\u591a\u5c11\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u6570 0\u62161</li> <li> <p>\u603b\u7ed3:\u5728\u5355\u7247\u673a\u91cc\uff0c\u6ce2\u7279\u7387\u548c\u6bd4\u7279\u7387\u4ee3\u8868\u7684\u610f\u4e49\u76f8\u540c\uff0c\u4f46\u662f\u5176\u5b83\u9886\u57df\uff0c\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002\u56e0\u4e3a\u4e0d\u679c\u6240\u6709\u9886\u57df\u91cc\u9762\u7684\u7801\u5143\u90fd\u662f\u4e8c\u8fdb\u5236\u76840\u62161\u3002</p> </li> <li> <p>\u8d77\u59cb\u4f4d\uff081\u4f4d\uff09\uff1a\u6807\u5fd7\u4e00\u4e2a\u6570\u636e\u5e27\u7684\u5f00\u59cb\uff0c\u56fa\u5b9a\u4e3a\u4f4e\u7535\u5e73\uff0c\u4e5f\u5c31\u662f \u7a7a\u95f2\u72b6\u6001\u4e0b \u4e3a\u9ad8\u7535\u5e73 </p> </li> <li> <p>\u6570\u636e\u4f4d\uff088\u4f4d\uff09\uff1a\u6570\u636e\u5e27\u7684\u6709\u6548\u8f7d\u8377\uff0c1\u4e3a\u9ad8\u7535\u5e73\uff0c0\u4e3a\u4f4e\u7535\u5e73\uff0c\u4f4e\u4f4d\u5148\u884c</p> </li> <li> <p>\u5947\u5076\u6821\u9a8c\u4f4d\uff081\u4f4d\uff09\uff1a\u7528\u4e8e\u6570\u636e\u9a8c\u8bc1\uff0c\u6839\u636e\u6570\u636e\u4f4d\u8ba1\u7b97\u5f97\u6765 -- \u53ef\u9009 \u65e0\u6821\u9a8c\u4f4d\uff0c\u5947\u6821\u9a8c\uff0c\u5076\u6821\u9a8c</p> </li> <li> <p>\u505c\u6b62\u4f4d\uff081\u4f4d\uff09\uff1a\u7528\u4e8e\u6570\u636e\u5e27\u95f4\u9694\uff0c\u56fa\u5b9a\u4e3a\u9ad8\u7535\u5e73</p> </li> </ul>"},{"location":"EmbeddedSyS/STM32/USART/#stm32usart","title":"STM32\u4e2d\u7684USART\u5916\u8bbe","text":"<p>USART\u7684\u6846\u56fe</p> <p></p> <ul> <li>\u6807\u5fd7\u4f4dTXE(TX Empty)\uff0c\u5f53\u5176\u7f6e1\u65f6\uff0c\u5176\u5b9e\u6570\u636e\u8fd8\u672a\u53d1\u9001\u8fc7\u53bb\uff0c\u4f46\u662f\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5199\u5165\u4e0b\u4e00\u4e2a\u6570\u636e \u539f\u56e0\u662f : \u53ea\u662f\u4ece\u53d1\u9001\u6570\u636e\u5bc4\u5b58\u5668TDR\u8f6c\u79fb\u5230\u4e86 \u53d1\u9001\u79fb\u4f4d\u5bc4\u5b58\u4e2d \u5176\u5c31\u4f1a\u7f6e1 \u5728\u4ee3\u7801\u4e2d \u5c31\u662f</li> </ul> <pre><code>void  Usart_Tx(uint8_t data)//\u5355\u5b57\u8282 8\u4f4d \u53d1\u9001\n{\nwhile(USART_GetFlagStatus(USART1,USART_FLAG_TC)==0);//\u7b49\u5f85\u6570\u636e\u8f6c\u79fb\u5230\u53d1\u9001\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d \u76f4\u5230TC == 1\u65f6 \u8868\u793a\u6570\u636e\u5df2\u7ecf\u53d1\u9001\u7ed9\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e86 \u53ef\u4ee5\u5199\u5165\u65b0\u7684\u6570\u636e\u4e86\nUSART_SendData(USART1,data);\n}\n/**\n  * @brief  Transmits single data through the USARTx peripheral.\n  * @param  USARTx: Select the USART or the UART peripheral. \n  *   This parameter can be one of the following values:\n  *   USART1, USART2, USART3, UART4 or UART5.\n  * @param  Data: the data to transmit.\n  * @retval None\n  */\nvoid USART_SendData(USART_TypeDef* USARTx, uint16_t Data)\n{\n/* Check the parameters */\nassert_param(IS_USART_ALL_PERIPH(USARTx));\nassert_param(IS_USART_DATA(Data)); /* Transmit Data */\nUSARTx-&gt;DR = (Data &amp; (uint16_t)0x01FF); //\u8fd9\u91cc\u5c31\u662fTDR\n}\n</code></pre> <ul> <li>TDR \u548c RDR\u5360\u7528\u4e00\u4e2a\u5730\u5740\uff0c\u4f46\u5b9e\u9645\u786c\u4ef6\u4e2d\u662f\u4e24\u4e2a\u5bc4\u5b58\u5668 \u53ef\u5bf9\u6bd451\u5355\u7247\u673a\u4e2d\u7684 SUBF\u6765\u7406\u89e3</li> <li> <p>SBUF: \u4e32\u53e3\u6570\u636e\u7f13\u5b58\u5bc4\u5b58\u5668\uff0c\u7269\u7406\u4e0a\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5bc4\u5b58\u5668\u76f8\u540c\u7684\u5730\u5740\u3002\u5199\u64cd\u4f5c\u65f6\uff0c\u5199\u5165\u7684\u662f\u53d1\u9001\u5bc4\u5b58\u5668\uff0c\u8bfb\u64cd\u4f5c\u65f6\uff0c\u8bfb\u51fa\u7684\u662f\u63a5\u6536\u5bc4\u5b58\u5668 \u4e5f\u5c31\u662f \u4e32\u53e3\u901a\u4fe1\u7684\u53d1\u9001\u548c\u63a5\u6536\u7535\u8def\u5728\u7269\u7406\u4e0a\u6709 2 \u4e2a\u540d\u5b57\u76f8\u540c\u7684 SBUF \u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u7684\u5730\u5740\u4e5f\u90fd\u662f 0x99\uff0c\u4f46\u662f\u4e00\u4e2a\u7528\u6765\u505a\u53d1\u9001\u7f13\u51b2\uff0c\u4e00\u4e2a\u7528\u6765\u505a\u63a5\u6536\u7f13\u51b2\u3002\u610f\u601d\u5c31\u662f\u8bf4\uff0c\u6709 2 \u4e2a\u623f\u95f4\uff0c\u4e24\u4e2a\u623f\u95f4\u7684\u95e8\u724c\u53f7\u662f\u4e00\u6837\u7684\uff0c\u5176\u4e2d\u4e00\u4e2a\u53ea\u51fa\u4eba\u4e0d\u8fdb\u4eba\uff0c\u53e6\u5916\u4e00\u4e2a\u53ea\u8fdb\u4eba\u4e0d\u51fa\u4eba\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0 UART \u7684\u5168\u53cc\u5de5\u901a\u4fe1\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u4ea7\u751f\u5e72\u6270\u3002\u4f46\u662f\u5728\u903b\u8f91\u4e0a\u5462\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u64cd\u4f5c SBUF\uff0c\u5355\u7247\u673a\u4f1a\u81ea\u52a8\u6839\u636e\u5bf9\u5b83\u6267\u884c\u7684\u662f\u201c\u8bfb\u201d\u8fd8\u662f\u201c\u5199\u201d\u64cd\u4f5c\u6765\u9009\u62e9\u662f\u63a5\u6536 SBUF \u8fd8\u662f\u53d1\u9001 SBUF</p> </li> <li> <p>\u53d1\u9001\u79fb\u4f4d\u5bc4\u5b58\u5668\u662f\u5411\u53f3\u79fb\u4f4d\u6570\u636e\u7684 \u6b63\u597d\u5bf9\u5e94\u4e32\u53e3\u7684\u4f4e\u4f4d\u5148\u884c</p> </li> <li>\u63a5\u6536\u79fb\u4f4d\u5bc4\u5b58\u5668\u662f\u5148\u5c06\u63a5\u6536\u7684\u6570\u636e\u653e\u5728\u6700\u9ad8\u4f4d\uff0c\u7136\u540e\u4e00\u4f4d\u4e00\u4f4d\u7684\u5411\u53f3\u79fb\u52a8\uff0c\u79fb\u4f4d8\u6b21\u5c31\u53ef\u4ee5\u5f97\u52301\u4e2a\u5b57\u8282</li> <li>\u6807\u5fd7\u4f4dRXNE(RX  Not Empty)\uff0c\u63a5\u6536\u6570\u636e\u5bc4\u5b58\u5668\u975e\u7a7a\uff0c\u5f53\u68c0\u6d4b\u5176\u7f6e1\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece \u63a5\u6536\u79fb\u4f4d\u5bc4\u5b58\u5668 \u628a\u6570\u636e\u79fb\u5230 \u63a5\u6536\u6570\u636e\u5bc4\u5b58\u5668RDR\u4e2d \u5728\u7a0b\u5e8f\u4e0a\u7684\u4f53\u73b0\u5c31\u662f</li> </ul> <pre><code>uint8_t Usart_Rx(void)//\u63a5\u6536 \u5355\u5b57\u8282 8\u4f4d\n{\nuint8_t data = 0;\nwhile( USART_GetFlagStatus(USART1, USART_FLAG_RXNE)==0){}//\u7b49\u5f85\u63a5\u6536\u6570\u636e\u5b8c\u6210\u6807\u5fd7 \u76f4\u5230RXNE == 1\u8868\u793a\u6570\u636e\u63a5\u6536\u5b8c\u6210\ndata = USART_ReceiveData(USART1);\nreturn data;\n}\n/**\n  * @brief  Returns the most recent received data by the USARTx peripheral.\n  * @param  USARTx: Select the USART or the UART peripheral. \n  *   This parameter can be one of the following values:\n  *   USART1, USART2, USART3, UART4 or UART5.\n  * @retval The received data.\n  */\nuint16_t USART_ReceiveData(USART_TypeDef* USARTx)\n{\n/* Check the parameters */\nassert_param(IS_USART_ALL_PERIPH(USARTx));\n/* Receive Data */\nreturn (uint16_t)(USARTx-&gt;DR &amp; (uint16_t)0x01FF);//\u8fd9\u91cc\u5176\u5b9e\u662f RDR\n}\n</code></pre> <ul> <li>\u6570\u636e\u5e27\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0bUSART_CR1\u5bc4\u5b58\u5668\u4e2d\u7684M\u4f4d\uff0c\u9009\u62e9\u62108\u62169\u4f4d</li> <li>\u53ef\u914d\u7f6e\u7684\u505c\u6b62\u4f4d \u968f\u6bcf\u4e2a\u5b57\u7b26\u53d1\u9001\u7684\u505c\u6b62\u4f4d\u7684\u4f4d\u6570\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u5bc4\u5b58\u56682\u7684\u4f4d13\u300112\u8fdb\u884c\u7f16\u7a0b\u3002 </li> <li>1\u4e2a\u505c\u6b62\u4f4d\uff1a\u505c\u6b62\u4f4d\u4f4d\u6570\u7684\u9ed8\u8ba4\u503c\u3002 </li> <li>2\u4e2a\u505c\u6b62\u4f4d\uff1a\u53ef\u7528\u4e8e\u5e38\u89c4USART\u6a21\u5f0f\u3001\u5355\u7ebf\u6a21\u5f0f\u4ee5\u53ca\u8c03\u5236\u89e3\u8c03\u5668\u6a21\u5f0f\u3002</li> <li>0.5\u4e2a\u505c\u6b62\u4f4d\uff1a\u5728\u667a\u80fd\u5361\u6a21\u5f0f\u4e0b\u63a5\u6536\u6570\u636e\u65f6\u4f7f\u7528\u3002 </li> <li>1.5\u4e2a\u505c\u6b62\u4f4d\uff1a\u5728\u667a\u80fd\u5361\u6a21\u5f0f\u4e0b\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u65f6\u4f7f\u7528\u3002</li> </ul>"},{"location":"EmbeddedSyS/STM32/USART/#_6","title":"\u6570\u636e\u662f\u5982\u4f55\u7a33\u5b9a\u63a5\u6536\u7684","text":"<p>\u8d77\u59cb\u4f4d\u4fa6\u6d4b </p> <p>\u5728USART\u4e2d\uff0c\u5982\u679c\u8fa8\u8ba4\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684\u91c7\u6837\u5e8f\u5217\uff0c\u90a3\u4e48\u5c31\u8ba4\u4e3a\u4fa6\u6d4b\u5230\u4e00\u4e2a\u8d77\u59cb\u4f4d\u3002 \u8be5\u5e8f\u5217\u4e3a\uff1a1 1 1 0 X 0 X 0 X 0 0 0 0</p> <p>\u4e0b\u56fe\u5c31\u662f \u8d77\u59cb\u4f4d\u4fa6\u6d4b \u548c \u91c7\u6837\u4f4d\u7f6e\u5bf9\u9f50\u7b56\u7565</p> <p></p> <p>\u5173\u4e8e\u63a5\u6536\u5668\u7684\u8bbe\u8ba1\u6700\u4e3b\u8981\u7684\u4e00\u70b9\u662f\u5982\u4f55\u63d0\u9ad8\u91c7\u6837\u7684\u51c6\u786e\u7387\uff0c\u6700\u597d\u662f\u4fdd\u8bc1\u91c7\u6837\u70b9\u5904\u4e8e\u88ab\u91c7\u6837\u6570\u636e\u7684\u65f6\u95f4\u4e2d\u95f4\u70b9\u3002\u6240\u4ee5\uff0c\u5728\u63a5\u6536\u91c7\u6837\u65f6\u8981\u7528\u6bd4\u6570\u636e\u6ce2\u7279\u7387\u9ad8n\u500d(n\u22651)\u901f\u7387\u7684\u65f6\u949f\u5bf9\u6570\u636e\u8fdb\u884c\u91c7\u6837</p> <ul> <li> <p>\u5982\u679c\u8be5\u5e8f\u5217\u4e0d\u5b8c\u6574\uff0c\u90a3\u4e48\u63a5\u6536\u7aef\u5c06\u9000\u51fa\u8d77\u59cb\u4f4d\u4fa6\u6d4b\u5e76\u56de\u5230\u7a7a\u95f2\u72b6\u6001(\u4e0d\u8bbe\u7f6e\u6807\u5fd7\u4f4d)\u7b49\u5f85\u4e0b\u964d\u6cbf\u3002 </p> </li> <li> <p>\u5982\u679c3\u4e2a\u91c7\u6837\u70b9\u90fd\u4e3a\u20190\u2019(\u5728\u7b2c3\u30015\u30017\u4f4d\u7684\u7b2c\u4e00\u6b21\u91c7\u6837\uff0c\u548c\u5728\u7b2c8\u30019\u300110\u7684\u7b2c\u4e8c\u6b21\u91c7\u6837\u90fd\u4e3a\u20190\u2019)\uff0c \u5219\u786e\u8ba4\u6536\u5230\u8d77\u59cb\u4f4d\uff0c\u8fd9\u65f6\u8bbe\u7f6eRXNE\u6807\u5fd7\u4f4d\uff0c\u5982\u679cRXNEIE=1\uff0c\u5219\u4ea7\u751f\u4e2d\u65ad\u3002 </p> </li> <li> <p>\u5982\u679c\u4e24\u6b213\u4e2a\u91c7\u6837\u70b9\u4e0a\u4ec5\u67092\u4e2a\u662f\u20190\u2019(\u7b2c3\u30015\u30017\u4f4d\u7684\u91c7\u6837\u70b9\u548c\u7b2c8\u30019\u300110\u4f4d\u7684\u91c7\u6837\u70b9)\uff0c\u90a3\u4e48\u8d77\u59cb \u4f4d\u4ecd\u7136\u662f\u6709\u6548\u7684\uff0c\u4f46\u662f\u4f1a\u8bbe\u7f6eNE\u566a\u58f0\u6807\u5fd7\u4f4d\u3002\u5982\u679c\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5219\u4e2d\u6b62\u8d77\u59cb\u4f4d\u7684\u4fa6\u6d4b\u8fc7 \u7a0b\uff0c\u63a5\u6536\u5668\u4f1a\u56de\u5230\u7a7a\u95f2\u72b6\u6001(\u4e0d\u8bbe\u7f6e\u6807\u5fd7\u4f4d)\u3002</p> </li> <li> <p>\u5982\u679c\u6709\u4e00\u6b213\u4e2a\u91c7\u6837\u70b9\u4e0a\u4ec5\u67092\u4e2a\u662f\u20190\u2019(\u7b2c3\u30015\u30017\u4f4d\u7684\u91c7\u6837\u70b9\u6216\u7b2c8\u30019\u300110\u4f4d\u7684\u91c7\u6837\u70b9)\uff0c\u90a3\u4e48\u8d77 \u59cb\u4f4d\u4ecd\u7136\u662f\u6709\u6548\u7684\uff0c\u4f46\u662f\u4f1a\u8bbe\u7f6eNE\u566a\u58f0\u6807\u5fd7\u4f4d\u3002</p> </li> </ul> <p></p>"},{"location":"EmbeddedSyS/STM32/USART/#_7","title":"\u6ce2\u7279\u7387\u53d1\u751f\u5668","text":"<p>\u53d1\u9001\u5668 \u548c \u63a5\u6536\u5668 \u7684\u6ce2\u7279\u7387\u7531\u6ce2\u7279\u7387\u5bc4\u5b58\u5668BRR\u91cc\u7684\u5206\u9891\u7cfb\u6570DIV\u786e\u5b9a -- \u9664\u4ee516\u662f\u56e0\u4e3a\u4e0a\u65b9\u7684\u91c7\u6837\u6570\u636e\u65f6\u949f\u9891\u7387\uff0c\u6240\u4ee5\u5728\u9664\u4ee5\u5206\u9891\u7cfb\u6570DIV\u540e\u518d\u9664\u4ee516</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a \\(\\(Tx / Rx\u6ce2\u7279\u7387 = \\cfrac { f_{PCLK2/1}}{16 * DIV}\\)\\)</p> <p></p>"},{"location":"EmbeddedSyS/STM32/USART/#usart_2","title":"USART\u5b9e\u6218\u6f14\u4e60","text":"<p>\u7b80\u5355\u7684\u4e32\u53e3\u53d1\u9001\u548c\u63a5\u6536(\u4e32\u53e3\u52a9\u624b\u5411\u5355\u7247\u673a\u53d1\u9001 \u7136\u540e\u5355\u7247\u673a\u901a\u8fc7printf\u518d\u6b21\u6253\u5370\u5230\u4e32\u53e3\u52a9\u624b\u4e0a)</p> <p><code>USART.H</code></p> <pre><code>#ifndef  __USART_H__//\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u4e86\u5219\u53c2\u52a0\u4ee5\u4e0b\u7f16\u8bd1\n#define  __USART_H__//\u4e00\u65e6\u5b9a\u4e49\u5c31\u6709\u4e86\u5b9a\u4e49 \u6240\u4ee5 \u5176\u76ee\u7684\u5c31\u662f\u9632\u6b62\u6a21\u5757\u91cd\u590d\u7f16\u8bd1\n#include \"stm32f10x.h\"\n#include \"stdio.h\"\n#include &lt;stdarg.h&gt;\nvoid Usart_Init(void);\nvoid Usart1_SendByte(uint8_t Byte);\nvoid Usart1_SendArray(uint8_t *Array,uint16_t Lenth);\nvoid Usart1_SendString(char *string);\nuint32_t Math_Pow(uint32_t X, uint32_t Y);\nvoid Usart1_SendNumber(uint32_t Num,uint8_t Length);\nvoid Serial_Printf(char *format, ...);\n#endif  //\u7ed3\u675f\u7f16\u8bd1\n</code></pre> <p><code>USART.C</code></p> <pre><code>#include \"usart.h\"\n/*\n *PA9  --  TX\n *PA10 --  RX\n*/\nvoid Usart_Init(void)\n{\n//\u4f7f\u80fd\u65f6\u949f\nRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_USART1, ENABLE);//\u4f7f\u80fd\u65f6\u949fA\u548cUSART1\n//\u4e3a\u521d\u59cb\u5316\u51fd\u6570\u505a\u51c6\u5907\nGPIO_InitTypeDef GPIO_InitStructure;//\u5b9a\u4e49\u7ed3\u6784\u4f53\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;//\u8bbe\u7f6ePA9\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u590d\u7528\u63a8\u633d\u8f93\u51fa\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570PIN9\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nGPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;//\u8bbe\u7f6ePA10\u5f15\u811a\nGPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU ;//\u8bbe\u7f6e\u8f93\u51fa\u6a21\u5f0f\u4e3a\u4e0a\u62c9\u8f93\u5165\nGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz ;//\u8bbe\u7f6e\u8f93\u51fa\u901f\u5ea6\u4e3a50MHZ\n//\u521d\u59cb\u5316\u51fd\u6570PIN10\u2193\nGPIO_Init(GPIOA,&amp;GPIO_InitStructure);//\u521d\u59cb\u5316\nUSART_InitTypeDef USART_InitStructure; //\u5b9a\u4e49\u4e32\u53e3\u7ed3\u6784\u4f53\nUSART_InitStructure.USART_BaudRate = 9600; //\u6ce2\u7279\u7387\nUSART_InitStructure.USART_WordLength = USART_WordLength_8b;//\u6570\u5b57\u5e27\u957f\u5ea6\nUSART_InitStructure.USART_StopBits = USART_StopBits_1; //\u505c\u6b62\u4f4d\nUSART_InitStructure.USART_Parity = USART_Parity_No; //\u4e0d\u4f7f\u7528\u6821\u9a8c\u4f4d \nUSART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;//\u4e0d\u4f7f\u7528\u786c\u4ef6\u6d41\u63a7\u5236\nUSART_InitStructure.USART_Mode = USART_Mode_Tx|USART_Mode_Rx; //\u6a21\u5f0f\u4e3a\u53d1\u9001+\u63a5\u6536\n//\u521d\u59cb\u5316\u4e32\u53e31\nUSART_Init(USART1, &amp;USART_InitStructure); USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);\nNVIC_InitTypeDef NVIC_InitStructure; //\u5b9a\u4e49\u7ed3\u6784\u4f53\nNVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn; //\u6839\u636e\u4e0a\u9762\u7684\u6211\u4eec\u6240\u9009\u53d6\u7684USART1\nNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;//\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u62a2\u5360 1\nNVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; //\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u54cd\u5e941\nNVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; //\u4f7f\u80fd\u6307\u5b9a\u7684\u4e2d\u65ad\u901a\u9053\n//\u521d\u59cb\u5316\u51fd\u6570\u2193\nNVIC_Init(&amp;NVIC_InitStructure);\n//\u4f7f\u80fd\u4e32\u53e31\nUSART_Cmd(USART1, ENABLE);\n}\n/**\n  * @brief  \u4e32\u53e31\u53d1\u9001\u5b57\u8282 -- \u53d1\u9001\u7684\u6700\u57fa\u672c\u7684\u51fd\u6570 --&gt;\u5176\u5b83\u53d1\u9001\u51fd\u6570\u90fd\u662f\u57fa\u4e8e\u5b83\n  * @param  \n  * @retval \n  */\nvoid Usart1_SendByte(uint8_t Byte)\n{\nUSART_SendData(USART1,Byte);\n/*\n  *\u5f53TDR\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u88ab\u786c\u4ef6\u8f6c\u79fb\u5230\u79fb\u4f4d\u5bc4\u5b58\u5668\u7684\u65f6\u5019\u8be5\u4f4d\u88ab\u786c\u4ef6\u7f6e\u4f4d \u4e5f\u5c31\u662fTXE = 1\n  * \u5f53\u53c8\u5bf9USART_DR-TDR\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u8be5\u4f4d\u5c06\u81ea\u52a8\u6e05\u96f6\n  */\nwhile(USART_GetFlagStatus(USART1,USART_FLAG_TXE) == RESET );\n}\n/**\n  * @brief  \u4e32\u53e3\u63a5\u6536\u51fd\u6570 -- \u5bf9\u4e8e\u4e32\u53e3\u6765\u8bf4 \u6709\u67e5\u8be2\u548c\u4e2d\u65ad\u4e24\u79cd\u65b9\u6cd5\u8fdb\u884c\u63a5\u6536\u6570\u636e\u5224\u65ad  \n            \u67e5\u8be2\u7684\u65b9\u5f0f\u662f:\u5728\u4e3b\u51fd\u6570\u4e2d\u4e0d\u65ad\u67e5\u8be2\u6807\u5fd7\u4f4d\u7684\u65b9\u5f0f -- \ud83d\udc47\n            \u4e2d\u65ad\u7684\u65b9\u5f0f: \u548c\u5176\u5b83\u4e2d\u65ad\u4e00\u6837 \u5f53\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u53d1\u751f\u4e86 \u518d\u8fdb\u5165\u4e2d\u65ad\n  * @param  \n  * @retval \n  */\nuint8_t Usart1_RecvByte(void)\n{\nuint8_t Data = 0;\nif(USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == SET)//\u63a5\u6536\u6570\u636e\u5b8c\u6210\u6807\u5fd7 RXNE == 1\u8868\u793a\u6570\u636e\u63a5\u6536\u5b8c\u6210\n{\nData = USART_ReceiveData(USART1);\n}\nreturn Data;\n}\n/**\n  * @brief  \u4e32\u53e3\u4e2d\u65ad\u51fd\u6570\n            \u5f53RDR\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u88ab\u8f6c\u79fb\u5230USART_DR\u5bc4\u5b58\u5668\u4e2d\uff0c\u8be5\u4f4d\u88ab\u786c\u4ef6\u7f6e\u4f4d\n            \u5bf9USART_DR\u7684\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u5c06\u8be5\u4f4d\u6e05\u96f6 -- \u4e5f\u5c31\u662f\u8bf4\u5f53\u6709\u5355\u7247\u673a\u63a5\u6536\u5e76\u8bfb\u53d6\u4e86\u6570\u636e \u8fd9\u4e2a\u5c31\u4f1a\u81ea\u52a8\u6e05\u96f6 \u5982\u679c\u6ca1\u8bfb\u53d6\u9700\u8981\u624b\u52a8\u6e05\u9664\n            \u4e2d\u65ad\u51fd\u6570\u91cc\u9762\u53ef\u4ee5\u653e\u4f60\u60f3\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u51fd\u6570\n  * @param  \n  * @retval \n  */\nvoid USART1_IRQHandler(void)\n{\nuint8_t RxData = 0;\nif (USART_GetITStatus(USART1, USART_IT_RXNE) == SET)\n{\nRxData = USART_ReceiveData(USART1);\nprintf(\"%X\\r\\n\",RxData);\nUSART_ClearITPendingBit(USART1, USART_IT_RXNE);\n}\n}\n/**\n  * @brief  \u53d1\u9001\u6570\u7ec4\n  * @param  \n  * @retval \n  */\nvoid Usart1_SendArray(uint8_t *Array,uint16_t Length)\n{\nfor(uint8_t i = 0;i&lt;Length;i++)\n{\nUsart1_SendByte(Array[i]);\n}\n}\n/**\n  * @brief  \u53d1\u9001\u5b57\u7b26\u4e32\n  * @param  string \u5b57\u7b26\u4e32\n  * @retval \n  */\nvoid Usart1_SendString(char *string)\n{\nfor(uint8_t i = 0;string[i] != '\\0';i++)\n{\nUsart1_SendByte(string[i]);\n}\n}\n/**\n  * @brief  \u53d1\u9001\u5341\u8fdb\u5236\u6570\u5b57\n  * @param  \n  * @retval \n  */\nvoid Usart1_SendNumber(uint32_t Num,uint8_t Length)//\u4ee5\u6587\u672c\u6a21\u5f0f\u67e5\u770b\u53d1\u9001\u7684\u6570\u5b57--\u53d1\u9001\u7684\u5565 \u5c31\u5728\u4e32\u53e3\u52a9\u624b\u4e0a\u663e\u793a\u5565\n{\nuint8_t i;\nfor (i = 0; i &lt; Length; i ++)\n{\nUsart1_SendByte(Num / Math_Pow(10, Length - i - 1) % 10 + '0');//10\u8fdb\u5236 \u8f6c\u6362\u6210 \u5341\u516d\u8fdb\u5236 1. \u53d6\u51fa\u8fd9\u4e00\u4f4d\u7684\u6570--NUM/10\u7684Length\u65b9%10 2.\u52a0\u4e0aASCLL\u7684\u503c\n}\n}\n/**\n  * @brief  \u6570\u5b66\u516c\u5f0fX\u7684Y\u6b21\u65b9\n  * @param  \n  * @retval X\u7684Y\u6b21\u65b9\n  */\nuint32_t Math_Pow(uint32_t X, uint32_t Y)//\u8fd4\u56de\u7684\u662fX\u7684Y\u6b21\u65b9\n{\nuint32_t Result = 1;\nwhile (Y --)\n{\nResult *= X;\n}\nreturn Result;\n}\n/**\n  * @brief  \u51fd\u6570\u91cd\u5b9a\u4e49--\u5c01\u88c5printf\u51fd\u6570\n  * @param  \n  * @retval \n  */\nint fputc(int ch, FILE *f)\n{\nUsart1_SendByte(ch);\nreturn ch;\n}\nvoid Serial_Printf(char *format, ...)//\u53ef\u53d8\u53c2\u6570 -- \u5c01\u88c5\n{\nchar String[100];\nva_list arg;//\u521b\u5efa\u540d\u4e3a arg\u7684\u5217\u8868\nva_start(arg, format);//\u4eceformat\u5f00\u59cb\nvsprintf(String, format, arg);//sprintf \u5728\u8fd9\u91cc \u8981\u5199\u6210 vsprintf\nva_end(arg);//\u91ca\u653e\u540d\u4e3aarg\u7684\u5217\u8868\nUsart1_SendString(String);\n}\n</code></pre> <p><code>main.c</code></p> <pre><code>#include \"stm32f10x.h\"                  // Device header\n#include \"Delay.h\"\n#include \"OLED.h\"\n#include \"usart.h\"\nuint8_t Data ;\nint main(void)\n{\nNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);\nOLED_Init();  Usart_Init();\nwhile(1)\n{\n//    if(USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == SET)//\u63a5\u6536\u6570\u636e\u5b8c\u6210\u6807\u5fd7 RXNE == 1\u8868\u793a\u6570\u636e\u63a5\u6536\u5b8c\u6210\n//    {\n//      Data = USART_ReceiveData(USART1);\n//      OLED_ShowHexNum(1,1,Data,2);\n//    }\n}\n}\n</code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_3","title":"USART \u5e93\u51fd\u6570","text":"<p>Table 1. USART \u5e93\u51fd\u6570 </p> \u51fd\u6570\u540d \u63cf\u8ff0 USART_DeInit \u5c06\u5916\u8bbe  USARTx \u5bc4\u5b58\u5668\u91cd\u8bbe\u4e3a\u7f3a\u7701\u503c USART_Init \u6839\u636e USART_InitStruct  \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe USARTx \u5bc4\u5b58\u5668 USART_StructInit \u628a USART_InitStruct \u4e2d\u7684\u6bcf\u4e00\u4e2a\u53c2\u6570\u6309\u7f3a\u7701\u503c\u586b\u5165 USART_Cmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  USART \u5916\u8bbe USART_ITConfig \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684  USART \u4e2d\u65ad USART_DMACmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a  USART \u7684 DMA \u8bf7\u6c42 USART_SetAddress \u8bbe\u7f6e  USART \u8282\u70b9\u7684\u5730\u5740 USART_WakeUpConfig \u9009\u62e9  USART \u7684\u5524\u9192\u65b9\u5f0f USART_ReceiverWakeUpCmd \u68c0\u67e5  USART \u662f\u5426\u5904\u4e8e\u9759\u9ed8\u6a21\u5f0f USART_LINBreakDetectLengthConfig \u8bbe\u7f6e  USART LIN \u4e2d\u65ad\u68c0\u6d4b\u957f\u5ea6 USART_LINCmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  USARTx \u7684 LIN \u6a21\u5f0f USART_SendData \u901a\u8fc7\u5916\u8bbe  USARTx \u53d1\u9001\u5355\u4e2a\u6570\u636e USART_ReceiveData \u8fd4\u56de  USARTx \u8fd1\u63a5\u6536\u5230\u7684\u6570\u636e USART_SendBreak \u53d1\u9001\u4e2d\u65ad\u5b57 USART_SetGuardTime \u8bbe\u7f6e\u6307\u5b9a\u7684  USART \u4fdd\u62a4\u65f6\u95f4 USART_SetPrescaler \u8bbe\u7f6e  USART \u65f6\u949f\u9884\u5206\u9891 USART_SmartCardCmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a  USART \u7684\u667a\u80fd\u5361\u6a21\u5f0f USART_SmartCardNackCmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  NACK \u4f20\u8f93 USART_HalfDuplexCmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  USART \u534a\u53cc\u5de5\u6a21\u5f0f USART_IrDAConfig \u8bbe\u7f6e  USART IrDA \u6a21\u5f0f USART_IrDACmd \u4f7f\u80fd\u6216\u8005\u5931\u80fd  USART IrDA \u6a21\u5f0f USART_GetFlagStatus \u68c0\u67e5\u6307\u5b9a\u7684  USART \u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e0e\u5426 USART_ClearFlag \u6e05\u9664  USARTx \u7684\u5f85\u5904\u7406\u6807\u5fd7\u4f4d USART_GetITStatus \u68c0\u67e5\u6307\u5b9a\u7684  USART \u4e2d\u65ad\u53d1\u751f\u4e0e\u5426 USART_ClearITPendingBit \u6e05\u9664  USARTx \u7684\u4e2d\u65ad\u5f85\u5904\u7406\u4f4d"},{"location":"EmbeddedSyS/STM32/USART/#usart_init","title":"\u51fd\u6570 USART_Init","text":"<p>Table 2. \u51fd\u6570 USART_Init </p> \u51fd\u6570\u540d USART_Init \u51fd\u6570\u539f\u5f62 void USART_Init(USART_TypeDef USARTx,  USART_InitTypeDef USART_InitStruct) \u529f\u80fd\u63cf\u8ff0 \u6839\u636e  USART_InitStruct \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u521d\u59cb\u5316\u5916\u8bbe USARTx \u5bc4\u5b58\u5668 \u8f93\u5165\u53c2\u6570 1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570 2 USART_InitStruct\uff1a\u6307\u5411\u7ed3\u6784 USART_InitTypeDef  \u7684\u6307\u9488\uff0c\u5305\u542b\u4e86\u5916\u8bbe USART \u7684\u914d\u7f6e\u4fe1\u606f\u3002\u53c2\u9605 Section\uff1aUSART_InitTypeDef \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/USART/#usart_inittypedef-structure","title":"\u7ed3\u6784\u4f53 USART_InitTypeDef structure","text":"USART_InitTypeDef structure<pre><code>//USART_InitTypeDef \u5b9a\u4e49\u4e8e\u6587\u4ef6\u201cstm32f10x_usart.h\u201d\uff1a \ntypedef struct { u32 USART_BaudRate; u16 USART_WordLength; u16 USART_StopBits;\nu16 USART_Parity;\nu16 USART_HardwareFlowControl;\nu16 USART_Mode;\nu16 USART_Clock; u16 USART_CPOL;\nu16 USART_CPHA;\nu16 USART_LastBit; } USART_InitTypeDef; </code></pre> <p>Table 3. \u63cf\u8ff0\u4e86\u7ed3\u6784 USART_InitTypeDef \u5728\u540c\u6b65\u548c\u5f02\u6b65\u6a21\u5f0f\u4e0b\u4f7f\u7528\u7684\u4e0d\u540c\u6210\u5458\u3002</p> <p>Table 708. USART_InitTypeDef \u6210\u5458 USART \u6a21\u5f0f\u5bf9\u6bd4 </p> \u6210\u5458 \u5f02\u6b65\u6a21\u5f0f \u540c\u6b65\u6a21\u5f0f USART_BaudRate \u221a \u221a USART_WordLength \u221a \u221a USART_StopBits \u221a \u221a USART_Parity \u221a \u221a USART_HardwareFlowControl \u221a \u221a USART_Mode \u221a \u221a USART_Clock \u221a USART_CPOL \u221a USART_CPHA \u221a USART_LastBit \u221a"},{"location":"EmbeddedSyS/STM32/USART/#usart_baudrate","title":"\u53c2\u6570 USART_BaudRate","text":"<p>\u8be5\u6210\u5458\u8bbe\u7f6e\u4e86 USART \u4f20\u8f93\u7684\u6ce2\u7279\u7387\uff0c\u6ce2\u7279\u7387\u53ef\u4ee5\u7531\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</p> <p>IntegerDivider = ((APBClock) / (16 * (USART_InitStruct-&gt;USART_BaudRate))) </p> <p>FractionalDivider = ((IntegerDivider - ((u32) IntegerDivider)) * 16) + 0.5 </p>"},{"location":"EmbeddedSyS/STM32/USART/#usart_wordlength","title":"\u53c2\u6570 USART_WordLength","text":"<p>USART_WordLength \u63d0\u793a\u4e86\u5728\u4e00\u4e2a\u5e27\u4e2d\u4f20\u8f93\u6216\u8005\u63a5\u6536\u5230\u7684\u6570\u636e\u4f4d\u6570\u3002Table 709. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c\u3002 </p> <p>Table 4. USART_WordLength \u5b9a\u4e49 </p> USART_WordLength \u63cf\u8ff0 USART_WordLength_8b 8 \u4f4d\u6570\u636e USART_WordLength_9b 9 \u4f4d\u6570\u636e"},{"location":"EmbeddedSyS/STM32/USART/#usart_stopbits","title":"\u53c2\u6570 USART_StopBits","text":"<p>USART_StopBits \u5b9a\u4e49\u4e86\u53d1\u9001\u7684\u505c\u6b62\u4f4d\u6570\u76ee\u3002Table 710. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c\u3002 </p> <p>Table 5. USART_StopBits \u5b9a\u4e49 </p> USART_StopBits \u63cf\u8ff0 USART_StopBits_1 \u5728\u5e27\u7ed3\u5c3e\u4f20\u8f93  1 \u4e2a\u505c\u6b62\u4f4d USART_StopBits_0.5 \u5728\u5e27\u7ed3\u5c3e\u4f20\u8f93  0.5 \u4e2a\u505c\u6b62\u4f4d USART_StopBits_2 \u5728\u5e27\u7ed3\u5c3e\u4f20\u8f93  2 \u4e2a\u505c\u6b62\u4f4d USART_StopBits_1.5 \u5728\u5e27\u7ed3\u5c3e\u4f20\u8f93  1.5 \u4e2a\u505c\u6b62\u4f4d"},{"location":"EmbeddedSyS/STM32/USART/#usart_parity","title":"\u53c2\u6570 USART_Parity","text":"<p>USART_Parity \u5b9a\u4e49\u4e86\u5947\u5076\u6a21\u5f0f\u3002Table 711. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c\u3002</p> <p>Table 6. USART_Parity \u5b9a\u4e49 </p> USART_Parity \u63cf\u8ff0 USART_Parity_No \u5947\u5076\u5931\u80fd USART_Parity_Even \u5076\u6a21\u5f0f USART_Parity_Odd \u5947\u6a21\u5f0f <p>\u6ce8\u610f\uff1a\u5947\u5076\u6821\u9a8c\u4e00\u65e6\u4f7f\u80fd\uff0c\u5728\u53d1\u9001\u6570\u636e\u7684 MSB \u4f4d\u63d2\u5165\u7ecf\u8ba1\u7b97\u7684\u5947\u5076\u4f4d\uff08\u5b57\u957f 9 \u4f4d\u65f6\u7684\u7b2c 9 \u4f4d\uff0c\u5b57\u957f 8 \u4f4d\u65f6\u7684\u7b2c 8 \u4f4d\uff09\u3002 </p>"},{"location":"EmbeddedSyS/STM32/USART/#usart_hardwareflowcontrol","title":"\u53c2\u6570 USART_HardwareFlowControl","text":"<p>USART_HardwareFlowControl \u6307\u5b9a\u4e86\u786c\u4ef6\u6d41\u63a7\u5236\u6a21\u5f0f\u4f7f\u80fd\u8fd8\u662f\u5931\u80fd\u3002Table 712. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c\u3002 </p> <p>Table 7. USART_HardwareFlowControl \u5b9a\u4e49 </p> USART_HardwareFlowControl \u63cf\u8ff0 USART_HardwareFlowControl_None \u786c\u4ef6\u6d41\u63a7\u5236\u5931\u80fd USART_HardwareFlowControl_RTS \u53d1\u9001\u8bf7\u6c42  RTS \u4f7f\u80fd USART_HardwareFlowControl_CTS \u6e05\u9664\u53d1\u9001  CTS \u4f7f\u80fd USART_HardwareFlowControl_RTS_CTS RTS \u548c CTS \u4f7f\u80fd"},{"location":"EmbeddedSyS/STM32/USART/#usart_mode","title":"\u53c2\u6570 USART_Mode","text":"<p>USART_Mode \u6307\u5b9a\u4e86\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u53d1\u9001\u548c\u63a5\u6536\u6a21\u5f0f\u3002Table 713. \u7ed9\u51fa\u4e86\u8be5\u53c2\u6570\u53ef\u53d6\u7684\u503c\u3002 </p> <p>Table 8. USART_Mode \u5b9a\u4e49 </p> USART_Mode \u63cf\u8ff0 USART_Mode_Tx \u53d1\u9001\u4f7f\u80fd USART_Mode_Rx \u63a5\u6536\u4f7f\u80fd <p>\u4f8b\uff1a </p> <pre><code>/* The following example illustrates how to configure the USART1 */ USART_InitTypeDef USART_InitStructure; USART_InitStructure.USART_BaudRate = 9600; //\u6ce2\u7279\u7387\nUSART_InitStructure.USART_WordLength = USART_WordLength_8b; //\u6570\u636e\u5e27\u957f\u5ea6\nUSART_InitStructure.USART_StopBits = USART_StopBits_1; //\u505c\u6b62\u4f4d\nUSART_InitStructure.USART_Parity = USART_Parity_NO; //\u68c0\u9a8c\u4f4d\nUSART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None; //\u786c\u4ef6\u6d41\u63a7\u5236\nUSART_InitStructure.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; //\u6a21\u5f0f\nUSART_Init(USART1, &amp;USART_InitStructure); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_cmd","title":"\u51fd\u6570 USART_Cmd","text":"<p>Table 9. \u51fd\u6570 USART_ Cmd </p> \u51fd\u6570\u540d USART_ Cmd \u51fd\u6570\u539f\u5f62 void USART_Cmd(USART_TypeDef* USARTx,  FunctionalState NewState) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd  USART \u5916\u8bbe \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 NewState: \u5916\u8bbe USARTx \u7684\u65b0\u72b6\u6001\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u53d6\uff1aENABLE \u6216\u8005 DISABLE \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Enable the USART1 */ USART_Cmd(USART1, ENABLE); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_itconfig","title":"\u51fd\u6570 USART_ITConfig","text":"<p>Table 10. \u51fd\u6570 USART_ITConfig </p> \u51fd\u6570\u540d USART_ITConfig \u51fd\u6570\u539f\u5f62 void USART_ITConfig(USART_TypeDef*  USARTx, u16 USART_IT, FunctionalState NewState) \u529f\u80fd\u63cf\u8ff0 \u4f7f\u80fd\u6216\u8005\u5931\u80fd\u6307\u5b9a\u7684  USART \u4e2d\u65ad \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 USART_IT\uff1a\u5f85\u4f7f\u80fd\u6216\u8005\u5931\u80fd\u7684 USART \u4e2d\u65ad\u6e90\u53c2\u9605 Section\uff1aUSART_IT \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u5165\u53c2\u6570  3 NewState\uff1aUSARTx \u4e2d\u65ad\u7684\u65b0\u72b6\u6001\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u53d6\uff1aENABLE \u6216\u8005 DISABLE \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/USART/#usart_it","title":"\u53c2\u6570 USART_IT","text":"<p>\u8f93\u5165\u53c2\u6570 USART_IT \u4f7f\u80fd\u6216\u8005\u5931\u80fd USART \u7684\u4e2d\u65ad\u3002\u53ef\u4ee5\u53d6\u4e0b\u8868\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u53d6\u503c\u7684\u7ec4\u5408\u4f5c\u4e3a\u8be5\u53c2\u6570\u7684\u503c\u3002</p> <p>Table 11. USART_IT \u503c </p> USART_IT \u63cf\u8ff0 USART_IT_PE \u5947\u5076\u9519\u8bef\u4e2d\u65ad USART_IT_TXE \u53d1\u9001\u4e2d\u65ad USART_IT_TC \u4f20\u8f93\u5b8c\u6210\u4e2d\u65ad USART_IT_RXNE \u63a5\u6536\u4e2d\u65ad USART_IT_IDLE \u7a7a\u95f2\u603b\u7ebf\u4e2d\u65ad USART_IT_LBD LIN \u4e2d\u65ad\u68c0\u6d4b\u4e2d\u65ad USART_IT_CTS CTS \u4e2d\u65ad USART_IT_ERR \u9519\u8bef\u4e2d\u65ad <p>\u4f8b\uff1a </p> <pre><code>/* Enables the USART1 transmit interrupt */ USART_ITConfig(USART1, USART_IT_RXNE\uff0cENABLE); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_senddata","title":"\u51fd\u6570 USART_SendData","text":"<p>Table 12. \u51fd\u6570 USART_ SendData </p> \u51fd\u6570\u540d USART_ SendData \u51fd\u6570\u539f\u5f62 void USART_SendData(USART_TypeDef*  USARTx, u8 Data) \u529f\u80fd\u63cf\u8ff0 \u901a\u8fc7\u5916\u8bbe  USARTx \u53d1\u9001\u5355\u4e2a\u6570\u636e \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 Data: \u5f85\u53d1\u9001\u7684\u6570\u636e \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Send one HalfWord on USART3 */ USART_SendData(USART3, 0x26); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_receivedata","title":"\u51fd\u6570 USART_ReceiveData","text":"<p>Table 13. \u51fd\u6570 USART_ReceiveData </p> \u51fd\u6570\u540d USART_ ReceiveData \u51fd\u6570\u539f\u5f62 u8 USART_ReceiveData(USART_TypeDef*  USARTx) \u529f\u80fd\u63cf\u8ff0 \u8fd4\u56de  USARTx \u8fd1\u63a5\u6536\u5230\u7684\u6570\u636e \u8f93\u5165\u53c2\u6570 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u63a5\u6536\u5230\u7684\u5b57 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Receive one halfword on USART2 */ u16 RxData; RxData = USART_ReceiveData(USART2);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_getflagstatus","title":"\u51fd\u6570 USART_GetFlagStatus","text":"<p>Table 14. \u51fd\u6570 USART_ GetFlagStatus </p> \u51fd\u6570\u540d USART_ GetFlagStatus \u51fd\u6570\u539f\u5f62 FlagStatus  USART_GetFlagStatus(USART_TypeDef* USARTx, u16 USART_FLAG) \u529f\u80fd\u63cf\u8ff0 \u68c0\u67e5\u6307\u5b9a\u7684  USART \u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e0e\u5426 \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 USART_FLAG\uff1a\u5f85\u68c0\u67e5\u7684 USART \u6807\u5fd7\u4f4d\u53c2\u9605 Section\uff1aUSART_FLAG  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c USART_FLAG \u7684\u65b0\u72b6\u6001\uff08SET  \u6216\u8005 RESET\uff09 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>USART_FLAG </p> <p>Table 15. \u7ed9\u51fa\u4e86\u6240\u6709\u53ef\u4ee5\u88ab\u51fd\u6570USART_ GetFlagStatus\u68c0\u67e5\u7684\u6807\u5fd7\u4f4d\u5217\u8868 </p> <p>Table 15. USART_FLAG \u503c </p> USART_FLAG \u63cf\u8ff0 USART_FLAG_CTS CTS \u6807\u5fd7\u4f4d USART_FLAG_LBD LIN \u4e2d\u65ad\u68c0\u6d4b\u6807\u5fd7\u4f4d USART_FLAG_TXE \u53d1\u9001\u6570\u636e\u5bc4\u5b58\u5668\u7a7a\u6807\u5fd7\u4f4d USART_FLAG_TC \u53d1\u9001\u5b8c\u6210\u6807\u5fd7\u4f4d USART_FLAG_RXNE \u63a5\u6536\u6570\u636e\u5bc4\u5b58\u5668\u975e\u7a7a\u6807\u5fd7\u4f4d USART_FLAG_IDLE \u7a7a\u95f2\u603b\u7ebf\u6807\u5fd7\u4f4d USART_FLAG_ORE \u6ea2\u51fa\u9519\u8bef\u6807\u5fd7\u4f4d USART_FLAG_NE \u566a\u58f0\u9519\u8bef\u6807\u5fd7\u4f4d USART_FLAG_FE \u5e27\u9519\u8bef\u6807\u5fd7\u4f4d USART_FLAG_PE \u5947\u5076\u9519\u8bef\u6807\u5fd7\u4f4d <p>\u4f8b\uff1a </p> <pre><code>/* Check if the transmit data register is full or not */ FlagStatus Status; Status = USART_GetFlagStatus(USART1, USART_FLAG_TXE); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_clearflag","title":"\u51fd\u6570 USART_ClearFlag","text":"<p>Table 16. \u51fd\u6570 USART_ ClearFlag </p> \u51fd\u6570\u540d USART_ ClearFlag \u51fd\u6570\u539f\u5f62 void USART_ClearFlag(USART_TypeDef*  USARTx, u16 USART_FLAG) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664  USARTx \u7684\u5f85\u5904\u7406\u6807\u5fd7\u4f4d \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 USART_FLAG\uff1a\u5f85\u6e05\u9664\u7684 USART \u6807\u5fd7\u4f4d\u53c2\u9605 Section\uff1aUSART_FLAG  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Clear Overrun error flag */ USART_ClearFlag(USART1,USART_FLAG_OR);\n</code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_getitstatus","title":"\u51fd\u6570 USART_GetITStatus","text":"<p>Table 17. \u51fd\u6570 USART_ GetITStatus </p> \u51fd\u6570\u540d USART_ GetITStatus \u51fd\u6570\u539f\u5f62 ITStatus  USART_GetITStatus(USART_TypeDef* USARTx, u16 USART_IT) \u529f\u80fd\u63cf\u8ff0 \u68c0\u67e5\u6307\u5b9a\u7684  USART \u4e2d\u65ad\u53d1\u751f\u4e0e\u5426 \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 USART_IT\uff1a\u5f85\u68c0\u67e5\u7684 USART \u4e2d\u65ad\u6e90\u53c2\u9605 Section\uff1aUSART_IT  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c USART_IT \u7684\u65b0\u72b6\u6001 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0"},{"location":"EmbeddedSyS/STM32/USART/#usart_it_1","title":"\u53c2\u6570 USART_IT","text":"<p>Table 18. \u7ed9\u51fa\u4e86\u6240\u6709\u53ef\u4ee5\u88ab\u51fd\u6570USART_ GetITStatus\u68c0\u67e5\u7684\u4e2d\u65ad\u6807\u5fd7\u4f4d\u5217\u8868 </p> <p>Table 18. USART_IT \u503c </p> USART_IT \u63cf\u8ff0 USART_IT_PE \u5947\u5076\u9519\u8bef\u4e2d\u65ad USART_IT_TXE \u53d1\u9001\u4e2d\u65ad USART_IT_TC \u53d1\u9001\u5b8c\u6210\u4e2d\u65ad USART_IT_RXNE \u63a5\u6536\u4e2d\u65ad USART_IT_IDLE \u7a7a\u95f2\u603b\u7ebf\u4e2d\u65ad USART_IT_LBD LIN \u4e2d\u65ad\u63a2\u6d4b\u4e2d\u65ad USART_IT_CTS CTS \u4e2d\u65ad USART_IT_ORE \u6ea2\u51fa\u9519\u8bef\u4e2d\u65ad USART_IT_NE \u566a\u97f3\u9519\u8bef\u4e2d\u65ad USART_IT_FE \u5e27\u9519\u8bef\u4e2d\u65ad <p>\u4f8b\uff1a </p> <pre><code>/* Get the USART1 Overrun Error interrupt status */ ITStatus ErrorITStatus; ErrorITStatus = USART_GetITStatus(USART1, USART_IT_OverrunError); </code></pre>"},{"location":"EmbeddedSyS/STM32/USART/#usart_clearitpendingbit","title":"\u51fd\u6570 USART_ClearITPendingBit","text":"<p>Table 19. \u63cf\u8ff0\u4e86\u51fd\u6570USART_ ClearITPendingBit  </p> <p>Table 19. \u51fd\u6570 USART_ ClearITPendingBit </p> \u51fd\u6570\u540d USART_ ClearITPendingBit \u51fd\u6570\u539f\u5f62 void  USART_ClearITPendingBit(USART_TypeDef* USARTx, u16 USART_IT) \u529f\u80fd\u63cf\u8ff0 \u6e05\u9664  USARTx \u7684\u4e2d\u65ad\u5f85\u5904\u7406\u4f4d \u8f93\u5165\u53c2\u6570  1 USARTx\uff1ax \u53ef\u4ee5\u662f 1\uff0c2 \u6216\u8005 3\uff0c\u6765\u9009\u62e9 USART  \u5916\u8bbe \u8f93\u5165\u53c2\u6570  2 USART_IT\uff1a\u5f85\u68c0\u67e5\u7684 USART \u4e2d\u65ad\u6e90\u53c2\u9605 Section\uff1aUSART_IT  \u67e5\u9605\u66f4\u591a\u8be5\u53c2\u6570\u5141\u8bb8\u53d6\u503c\u8303\u56f4 \u8f93\u51fa\u53c2\u6570 \u65e0 \u8fd4\u56de\u503c \u65e0 \u5148\u51b3\u6761\u4ef6 \u65e0 \u88ab\u8c03\u7528\u51fd\u6570 \u65e0 <p>\u4f8b\uff1a </p> <pre><code>/* Clear the Overrun Error interrupt pending bit */ USART_ClearITPendingBit(USART1,USART_IT_OverrunError); </code></pre>"},{"location":"LinuxSystem/Communication/","title":"IPC\u901a\u4fe1","text":""},{"location":"LinuxSystem/Communication/#ipc_1","title":"IPC\u4ecb\u7ecd","text":"<p>\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff0cInter-Process Communication\uff09\u662f\u6307\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u548c\u5171\u4eab\u4fe1\u606f\u7684\u673a\u5236\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u5bf9\u4e8e\u5b9e\u73b0\u534f\u4f5c\u548c\u534f\u8c03\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5de5\u4f5c\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u4e3a\u4ec0\u4e48\u8fdb\u7a0b\u95f4\u9700\u8981\u901a\u4fe1\u7684\u4e00\u4e9b\u5e38\u89c1\u539f\u56e0:</p> <ol> <li>\u6570\u636e\u5171\u4eab: \u4e0d\u540c\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u5171\u4eab\u6570\u636e\uff0c\u4ee5\u4fbf\u5f7c\u6b64\u4e4b\u95f4\u8fdb\u884c\u4fe1\u606f\u4f20\u9012\u3001\u534f\u4f5c\u548c\u540c\u6b65\u64cd\u4f5c\u3002</li> <li>\u4efb\u52a1\u5206\u89e3: \u4e00\u4e2a\u590d\u6742\u7684\u4efb\u52a1\u53ef\u80fd\u9700\u8981\u5206\u89e3\u4e3a\u591a\u4e2a\u8fdb\u7a0b\u6765\u5e76\u884c\u6267\u884c\uff0c\u8fdb\u7a0b\u95f4\u901a\u4fe1\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u4efb\u52a1\u548c\u7ed3\u679c\u6570\u636e\u3002</li> <li>\u8d44\u6e90\u5171\u4eab: \u4e0d\u540c\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u5171\u4eab\u7cfb\u7edf\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u3001\u7f51\u7edc\u8fde\u63a5\u3001\u8bbe\u5907\u6216\u5185\u5b58\u7b49\u3002</li> <li>\u8fdb\u7a0b\u63a7\u5236: \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u63a7\u5236\u5176\u4ed6\u8fdb\u7a0b\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u542f\u52a8\u3001\u505c\u6b62\u3001\u6682\u505c\u6216\u53d1\u9001\u4fe1\u53f7\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u3002</li> </ol> <p>\u5e38\u89c1\u7684IPC\u901a\u4fe1\u65b9\u5f0f\u5305\u62ec:</p> <p>\u4e0d\u540c\u7684IPC\u901a\u4fe1\u65b9\u5f0f\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f\u548c\u9700\u6c42,\u9009\u62e9\u9002\u5408\u7684\u65b9\u5f0f\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u5e94\u7528\u9700\u6c42\u548c\u9650\u5236\u6761\u4ef6</p> <ol> <li>\u4fe1\u53f7(signal): \u4fe1\u53f7\u662fLinux\u7cfb\u7edf\u4e2d\u7528\u4e8e\u901a\u77e5\u8fdb\u7a0b\u53d1\u751f\u67d0\u4e2a\u4e8b\u4ef6\u7684\u673a\u5236\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6355\u6349\u548c\u5904\u7406\u4fe1\u53f7\u6765\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1\u3002</li> <li>\u7ba1\u9053(Pipe): \u7ba1\u9053\u662f\u4e00\u79cd\u534a\u53cc\u5de5\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5b83\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5185\u6838\u7f13\u51b2\u533a\uff0c\u4f7f\u5f97\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8f93\u51fa\u76f4\u63a5\u53d8\u4e3a\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8f93\u5165\u3002\u901a\u5e38\u7528\u4e8e\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u6216\u8005\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</li> <li>\u6709\u540d\u7ba1\u9053(Named Pipe): \u547d\u540d\u7ba1\u9053\u5141\u8bb8\u65e0\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c\u5b83\u662f\u4e00\u79cd\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7684\u7279\u6b8a\u6587\u4ef6\u3002\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6253\u5f00\u8fd9\u4e2a\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002</li> <li>\u5171\u4eab\u5185\u5b58(Shared Memory): \u5171\u4eab\u5185\u5b58\u5141\u8bb8\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u5b83\u662f\u4e00\u79cd\u9ad8\u6548\u7684IPC\u65b9\u5f0f\uff0c\u56e0\u4e3a\u6570\u636e\u65e0\u9700\u590d\u5236\u5c31\u53ef\u4ee5\u5728\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u3002\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u65f6\u9700\u8981\u501f\u52a9\u5176\u4ed6\u673a\u5236\u5982\u4fe1\u53f7\u91cf\u6216\u4e92\u65a5\u9501\u6765\u786e\u4fdd\u6570\u636e\u7684\u540c\u6b65\u548c\u4e92\u65a5\u8bbf\u95ee\u3002</li> <li>\u4fe1\u53f7\u91cf\u96c6(Semaphore): \u4fe1\u53f7\u91cf\u662f\u4e00\u79cd\u8ba1\u6570\u5668\uff0c\u7528\u4e8e\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u548c\u4e92\u65a5\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u5bf9\u5171\u4eab\u5185\u5b58\u7684\u8bbf\u95ee\u4ee5\u53ca\u8fdb\u7a0b\u4e4b\u95f4\u7684\u987a\u5e8f\u6267\u884c\u3002</li> <li>\u6d88\u606f\u961f\u5217(Message Queue): \u6d88\u606f\u961f\u5217\u662f\u4e00\u79cd\u5b58\u50a8\u5728\u5185\u6838\u4e2d\u7684\u6d88\u606f\u94fe\u8868\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u5f80\u961f\u5217\u4e2d\u5199\u5165\u6d88\u606f\u548c\u4ece\u961f\u5217\u4e2d\u8bfb\u53d6\u6d88\u606f\u6765\u8fdb\u884c\u901a\u4fe1\u3002\u6d88\u606f\u961f\u5217\u53ef\u4ee5\u5b9e\u73b0\u6309\u7167\u7279\u5b9a\u7684\u4f18\u5148\u7ea7\u6765\u5904\u7406\u6d88\u606f\u3002</li> <li>\u5957\u63a5\u5b57(Socket): \u5957\u63a5\u5b57\u662f\u4e00\u79cd\u7528\u4e8e\u5728\u7f51\u7edc\u4e2d\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u901a\u4fe1\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u4e0d\u540c\u4e3b\u673a\u4e0a\u7684\u8fdb\u7a0b\u76f8\u4e92\u901a\u4fe1\uff0c\u5b9e\u73b0\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> </ol>"},{"location":"LinuxSystem/Communication/#_1","title":"\u7cfb\u7edf\u547d\u4ee4","text":"<p>\u4f7f\u7528\u547d\u4ee4\u67e5\u770b\u7cfb\u7edf\u4e2d\u6240\u6709\u7684IPC\u901a\u4fe1:</p> <p>\u547d\u4ee4:<code>ipcs</code></p> <p></p> <p>\u5e38\u7528\u7684<code>ipcs</code>\u547d\u4ee4\u9009\u9879\u5305\u62ec\uff1a</p> <ul> <li><code>-a</code>\uff1a\u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u7684IPC\u5bf9\u8c61\u3002</li> <li><code>-m</code>\uff1a\u4ec5\u663e\u793a\u5171\u4eab\u5185\u5b58\u5bf9\u8c61\u7684\u4fe1\u606f\u3002</li> <li><code>-q</code>\uff1a\u4ec5\u663e\u793a\u6d88\u606f\u961f\u5217\u5bf9\u8c61\u7684\u4fe1\u606f\u3002</li> <li><code>-s</code>\uff1a\u4ec5\u663e\u793a\u4fe1\u53f7\u91cf\u5bf9\u8c61\u7684\u4fe1\u606f\u3002</li> <li><code>-t</code>\uff1a\u4ee5\u53ef\u8bfb\u7684\u683c\u5f0f\u663e\u793a\u65f6\u95f4\u6233\u3002</li> <li><code>-u</code>\uff1a\u663e\u793a\u5f53\u524d\u7528\u6237\u521b\u5efa\u7684IPC\u5bf9\u8c61\u3002</li> </ul> <p>\u5220\u9664:</p> <ul> <li><code>ipcrm -q id</code> \u5220\u9664\u6d88\u606f\u961f\u5217</li> <li><code>ipcrm -m id</code> \u5220\u9664\u5171\u4eab\u5185\u5b58</li> <li><code>ipcrm -s id</code> \u5220\u9664\u4fe1\u53f7\u91cf\u96c6</li> </ul>"},{"location":"LinuxSystem/Communication/#ipc_2","title":"IPC\u952e\u503c","text":"<p>\u5728\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u4e2d\uff0c\u952e\u503c\uff08key\uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u6807\u8bc6\u548c\u8bbf\u95eeIPC\u5bf9\u8c61\u7684\u552f\u4e00\u503c\u3002\u952e\u503c\u5145\u5f53\u4e86IPC\u5bf9\u8c61\u7684\u552f\u4e00\u7d22\u5f15\uff0c\u4f7f\u5f97\u4e0d\u540c\u7684\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u6765\u627e\u5230\u548c\u8bbf\u95ee\u76f8\u540c\u7684IPC\u5bf9\u8c61\u3002</p> <p>\u5728\u4e0d\u540c\u7684IPC\u673a\u5236\u4e2d\uff0c\u952e\u503c\u7684\u5b9a\u4e49\u548c\u751f\u6210\u65b9\u6cd5\u53ef\u80fd\u4f1a\u7565\u6709\u5dee\u5f02\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684IPC\u673a\u5236\u4ee5\u53ca\u5bf9\u5e94\u7684\u952e\u503c\u751f\u6210\u65b9\u5f0f\uff1a</p> <ol> <li> <p>\u4fe1\u53f7\uff08Signal\uff09\uff1a</p> <ul> <li>\u4fe1\u53f7\u6ca1\u6709\u663e\u5f0f\u7684\u952e\u503c\uff0c\u800c\u662f\u4f7f\u7528\u4fe1\u53f7\u7f16\u53f7\u6765\u8bc6\u522b\u548c\u5904\u7406\u3002</li> </ul> </li> <li> <p>\u5171\u4eab\u5185\u5b58\uff08Shared Memory\uff09\uff1a</p> <ul> <li>\u4f7f\u7528ftok\u51fd\u6570\u5c06\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u548c\u9879\u76ee\u6807\u8bc6\u7b26\u8f6c\u6362\u4e3a\u952e\u503c\u3002\u4f8b\u5982\uff1a<code>key_t key = ftok(\"/path/to/file\", 'P');</code></li> <li>\u6587\u4ef6\u8def\u5f84\u901a\u5e38\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u952e\u503c\u3002</li> </ul> </li> <li> <p>\u6d88\u606f\u961f\u5217\uff08Message Queue\uff09\uff1a</p> <ul> <li>\u4f7f\u7528\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u952e\u503c\uff0c\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u6216\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u6c42\u8fdb\u884c\u751f\u6210\u3002</li> </ul> </li> <li> <p>\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\uff1a</p> <ul> <li>\u4f7f\u7528\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u952e\u503c\uff0c\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u6216\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u6c42\u8fdb\u884c\u751f\u6210\u3002</li> </ul> </li> <li> <p>\u5957\u63a5\u5b57\uff08Socket\uff09\uff1a</p> <ul> <li>\u4f7f\u7528\u7f51\u7edc\u5730\u5740\uff08IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff09\u4f5c\u4e3a\u8fde\u63a5\u5957\u63a5\u5b57\u7684\u952e\u503c\u3002</li> </ul> </li> </ol> <p>\u6ce8\u610f\uff0c\u952e\u503c\u7684\u9009\u62e9\u8981\u9075\u5faa\u4e00\u4e9b\u51c6\u5219:</p> <ul> <li>\u952e\u503c\u5728\u6240\u6709\u8fdb\u7a0b\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002</li> <li>\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u6765\u8bbf\u95ee\u76f8\u540c\u7684IPC\u5bf9\u8c61\u3002</li> <li>\u952e\u503c\u5e94\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u9700\u6c42\u548c\u903b\u8f91\u76f8\u5339\u914d\uff0c\u4ee5\u786e\u4fdd\u6b63\u786e\u7684\u5bf9\u8c61\u5173\u8054\u3002</li> </ul> <p>\u5728\u4f7f\u7528IPC\u673a\u5236\u65f6\uff0c\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u624d\u80fd\u8bbf\u95ee\u548c\u64cd\u4f5c\u76f8\u540c\u7684IPC\u5bf9\u8c61\u3002 \u56e0\u6b64\uff0c\u786e\u4fdd\u5728\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u6b63\u786e\u7684\u952e\u503c\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002</p>"},{"location":"LinuxSystem/Communication/#signal","title":"\u4fe1\u53f7","text":""},{"location":"LinuxSystem/Communication/#_2","title":"\u7406\u8bba","text":"<p>\u4fe1\u53f7\u57fa\u672c\u6982\u5ff5</p> <ul> <li>\u7ee7\u627funix\u53e4\u8001\u901a\u4fe1\u673a\u5236</li> <li>\u8f6f\u4e2d\u65ad\u7684\u6a21\u62df\u673a\u5236(\u63a5\u6536\u4e00\u4e2a\u4fe1\u53f7\u4f1a\u6267\u884c\u56fa\u5b9a\u7684\u64cd\u4f5c)</li> <li>linux\u4e0b62\u4e2a\u4fe1\u53f7\uff0c\u6bcf\u4e00\u4e2a\u4fe1\u53f7\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u542b\u4e49<ul> <li>\u524d31\u4e2a\u4fe1\u53f7\u7ee7\u627funix\u7684\u975e\u5b9e\u65f6\u4fe1\u53f7,\u975e\u5b9e\u65f6\u4fe1\u53f7\u4e0d\u62e5\u6709\u6392\u961f\u673a\u5236</li> <li>\u540e31\u4e2a\u662flinux\u81ea\u5df1\u6269\u5c55\u7684\u5b9e\u65f6\u4fe1\u53f7,\u5b9e\u65f6\u4fe1\u53f7\u62e5\u6709\u6392\u961f\u673a\u5236</li> </ul> </li> <li>\u5927\u90e8\u5206\u4fe1\u53f7\u90fd\u4f7f\u8fdb\u7a0b\u51cb\u4ea1</li> </ul> <p>\u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4\u67e5\u770b</p> <ul> <li>man 7 signal</li> <li>kill -l</li> </ul> <p></p> <p>\u5e38\u89c1\u7684\u4fe1\u53f7</p> <ul> <li>\u4fe1\u53f72\uff1aSIGINT\uff1a Ctrl+C \u7ed3\u675f\u8fdb\u7a0b </li> <li>\u4fe1\u53f73\uff1aSIGQUIT\uff1aCtrl+/ \u7ed3\u675f\u8fdb\u7a0b</li> <li>\u4fe1\u53f79\uff1aSIGKILL\uff1a\u65e0\u6761\u4ef6\u7ec8\u6b62\u8fdb\u7a0b\u7684\u4fe1\u53f7\u3002\u4f7f\u7528SIGKILL\u4fe1\u53f7\u5c06\u65e0\u6cd5\u6355\u83b7\u6216\u5ffd\u7565\uff0c\u8fdb\u7a0b\u4f1a\u7acb\u5373\u88ab\u7ec8\u6b62\u3002(\u4e0d\u80fd\u88ab\u6539\u9020)</li> <li>\u4fe1\u53f710\u300112:\u7528\u6237\u9884\u7559\u7684\u4fe1\u53f7</li> <li>\u4fe1\u53f714\uff1aSIGALRM\uff1a\u95f9\u949f\u4fe1\u53f7\uff0c\u7528\u4e8e\u5b9a\u65f6</li> <li>\u4fe1\u53f717\uff1aSIGCHLD\uff1a\u53ea\u8981\u5b50\u8fdb\u7a0b\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u7236\u8fdb\u7a0b\u5c31\u80fd\u591f\u63a5\u6536\u523017\u53f7\u4fe1\u53f7</li> <li>\u4fe1\u53f719\uff1aSIGSTOP\uff1a\u6682\u505c\u4fe1\u53f7</li> <li>\u4fe1\u53f718:SIGCONT \u662f\u7ee7\u7eed\u8fdb\u7a0b</li> <li>\u4fe1\u53f720\uff1aSIGTSTP\uff1a\u6682\u505c\u8fd0\u884c</li> </ul> <p>\u4fe1\u53f7\u7684\u4ea7\u751f</p> <ul> <li>\u7528\u6237\u81ea\u5df1\u53d1\u9001: Ctrl+C \u6216\u8005 <code>kill -2 pid</code></li> <li>\u5185\u6838: \u8fdb\u7a0b\u6267\u884c\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u5019</li> <li>\u901a\u8fc7\u7a0b\u5e8f\u53d1\u9001: <code>kill(pid,sig)</code></li> </ul>"},{"location":"LinuxSystem/Communication/#_3","title":"\u4fe1\u53f7\u51fd\u6570","text":"<ol> <li>\u7528\u4e8e\u5411\u6307\u5b9a\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u7684\u51fd\u6570 <code>kill</code></li> <li>\u7528\u4e8e\u5411\u5f53\u524d\u8fdb\u7a0b\u53d1\u9001\u6307\u5b9a\u4fe1\u53f7\u51fd\u6570<code>raise</code></li> <li>\u7528\u4e8e\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u540e\u53d1\u9001<code>SIGALRM</code>\u4fe1\u53f7\u7ed9\u5f53\u524d\u8fdb\u7a0b\u7684\u51fd\u6570 <code>alarm</code></li> <li>\u7528\u4e8e\u4f7f\u5f53\u524d\u8fdb\u7a0b\u6682\u65f6\u6302\u8d77\uff0c\u76f4\u5230\u63a5\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7\u7684\u51fd\u6570<code>pause</code></li> <li>\u7528\u4e8e\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u7528\u4e8e\u5904\u7406\u7279\u5b9a\u4fe1\u53f7\u7684\u5230\u6765\u7684\u51fd\u6570 <code>signal</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> killraisealarmpausesignal <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n\u51fd\u6570\u539f\u578b:\nint kill(pid_t pid, int sig);\n\u5f62\u53c2:\npid\u53c2\u6570\u8868\u793a\u76ee\u6807\u8fdb\u7a0b\u7684\u8fdb\u7a0bID\nsig\u53c2\u6570\u8868\u793a\u8981\u53d1\u9001\u7684\u4fe1\u53f7\n* \u5982\u679c pid \u5927\u4e8e 0\uff0c\u5219\u5411\u8fdb\u7a0bID\u4e3apid\u7684\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7sig\u3002\n* \u5982\u679c pid \u7b49\u4e8e 0\uff0c\u5219\u4fe1\u53f7\u5c06\u88ab\u53d1\u9001\u5230\u4e0e\u8c03\u7528\u8fdb\u7a0b\u5c5e\u4e8e\u540c\u4e00\u8fdb\u7a0b\u7ec4\u7684\u6240\u6709\u8fdb\u7a0b\u3002\n* \u5982\u679c pid \u7b49\u4e8e-1\uff0c\u5219\u4fe1\u53f7\u5c06\u88ab\u53d1\u9001\u5230\u9664\u8c03\u7528\u8fdb\u7a0b\u4e4b\u5916\u7684\u6240\u6709\u5177\u6709\u6743\u9650\u7684\u8fdb\u7a0b\u3002\n* \u5982\u679c pid \u5c0f\u4e8e-1\uff0c\u5219\u4fe1\u53f7\u5c06\u88ab\u53d1\u9001\u5230\u8fdb\u7a0b\u7ec4ID\u7b49\u4e8epid\u7edd\u5bf9\u503c\u7684\u6240\u6709\u8fdb\u7a0b\u3002\nsig\u53c2\u6570\u53ef\u4ee5\u662f\u9884\u5b9a\u4e49\u7684\u4fe1\u53f7\u7f16\u53f7\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5904\u7406\u5668\u6765\u6355\u83b7\u548c\u5904\u7406\u3002\n\u8fd4\u56de\u503c:\n\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a0\u8868\u793a\u6210\u529f\uff0c-1\u8868\u793a\u5931\u8d25\u5e76\u8bbe\u7f6eerrno\u53d8\u91cf\u6765\u8868\u793a\u5177\u4f53\u7684\u9519\u8bef\u4fe1\u606f\u3002\n</code></pre> Test1Test2Test3 <p><pre><code>#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\nint main()\n{\nint count = 0;\nwhile(1)\n{\nprintf(\"count = %d\\n\",count);\nsleep(1);\ncount++;\nif(count == 5)\n{\nkill(getpid(),2);\n}\n}\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main()\n{\npid_t pid = fork();//\u521b\u5efa\u5b50\u8fdb\u7a0b\nif(pid == 0) {\nwhile(1)\n{\nprintf(\"hello Sakura-Ji\\n\");\nsleep(1);\n}\n}\nelse if(pid &gt; 0)\n{\nsleep(5);\nkill(pid,9);//\u5728\u7236\u8fdb\u7a0b\u4e2d\u4f7f\u7528\u4fe1\u53f79\u7ec8\u6b62\u5b50\u8fdb\u7a0b\n}\nreturn 0;\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main()\n{\npid_t pid = fork();\nif(pid == 0) {\nwhile(1)\n{\nprintf(\"hello Sakura-Ji\\n\");\nsleep(1);\n}\n}\nelse if(pid &gt; 0)\n{\nsleep(3);\nkill(pid,19);//\u6682\u505c\nsleep(5);\nkill(pid,18);//\u7ee7\u7eed\nsleep(5);\nkill(pid,9);//\u7ed3\u675f\n}\nreturn 0;\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n\u539f\u578b:\nint raise(int sig);\n\u53c2\u6570:\nSig\u4fe1\u53f7\u7c7b\u578b\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de0 \u5931\u8d25\u8fd4\u56de-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b:\nunsigned int alarm(unsigned int seconds);\n\u5f62\u53c2:\nseconds\u53c2\u6570\u8868\u793a\u5b9a\u65f6\u5668\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2\u3002\n\u8fd4\u56de\u503c:\nalarm\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e0a\u4e00\u6b21\u8bbe\u7f6e\u7684\u5269\u4f59\u65f6\u95f4\uff0c\u5982\u679c\u6ca1\u6709\u4e4b\u524d\u7684\u5b9a\u65f6\u5668\uff0c\u5219\u8fd4\u56de0\u3002\n\u51fd\u6570\u8bf4\u660e:\nalarm\u51fd\u6570\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\uff08seconds\u79d2\uff09\u540e\uff0c\u5411\u5f53\u524d\u8fdb\u7a0b\u53d1\u9001SIGALRM\u4fe1\u53f7\u3002\n\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5b9a\u65f6\u5668\uff0c\u5219\u8c03\u7528alarm\u51fd\u6570\u4f1a\u53d6\u6d88\u539f\u6709\u7684\u5b9a\u65f6\u5668\uff0c\u5e76\u8bbe\u7f6e\u65b0\u7684\u5b9a\u65f6\u5668\u3002\n\u5f53\u5b9a\u65f6\u5668\u65f6\u95f4\u5230\u8fbe\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5411\u8be5\u8fdb\u7a0b\u53d1\u9001SIGALRM\u4fe1\u53f7\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u5668\u6765\u5904\u7406\u8be5\u4fe1\u53f7\u3002\n</code></pre> \u4e3e\u4f8b <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\nvoid handler(int signum) {\nprintf(\"Received SIGALRM signal\\n\");\n}\nint main()\n{\nprintf(\"hello Sakura-Ji\\n\");\nunsigned int remaining;\n// \u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\nsignal(SIGALRM, handler);\n// \u8bbe\u7f6e\u5b9a\u65f6\u5668\u4e3a5\u79d2\nremaining = alarm(5);//\u5f53\u5b9a\u65f6\u5668\u65f6\u95f4\u5230\u8fbe\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5411\u8be5\u8fdb\u7a0b\u53d1\u9001SIGALRM\u4fe1\u53f7 \nprintf(\"Waiting for alarm...\\n\");\n// \u8fdb\u7a0b\u5c06\u5728\u6b64\u5904\u7b49\u5f85\uff0c\u76f4\u5230\u6536\u5230SIGALRM\u4fe1\u53f7 --&gt; handler --&gt; pause\npause(); // \u5b9a\u65f6\u5668\u5230\u671f\u540e\u4f1a\u8df3\u8f6c\u5230\u6b64\u5904\nprintf(\"Alarm received\\n\");\nreturn 0;\n}\n</code></pre> </p> <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pause(void);\n\u51fd\u6570\u8bf4\u660e:\npause\u51fd\u6570\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u5b83\u4f1a\u4e00\u76f4\u7b49\u5f85\u76f4\u5230\u63a5\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7\u3002\n\u5728\u6536\u5230\u4fe1\u53f7\u4e4b\u524d\uff0c\u8fdb\u7a0b\u4f1a\u4e00\u76f4\u5904\u4e8e\u6302\u8d77\u72b6\u6001\uff0c\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u4ee3\u7801\u3002\n\u5f53\u8fdb\u7a0b\u63a5\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7\u65f6\uff0cpause\u51fd\u6570\u4f1a\u8fd4\u56de-1\uff0c\u5e76\u5c06errno\u8bbe\u7f6e\u4e3aEINTR\u3002\nEINTR\u8868\u793a\u8be5\u7cfb\u7edf\u8c03\u7528\u88ab\u4e00\u4e2a\u4fe1\u53f7\u4e2d\u65ad\u3002\n</code></pre> ===\"\u4e3e\u4f8b\"     <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;signal.h&gt;\nvoid handler(int signum) {\nprintf(\"Received signal %d\\n\", signum);\n}\nint main() {\n// \u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\nsignal(SIGINT, handler);\nprintf(\"Waiting for signal...\\n\");\n// \u8fdb\u7a0b\u5c06\u5728\u6b64\u5904\u6302\u8d77\uff0c\u76f4\u5230\u63a5\u6536\u5230\u4fe1\u53f7\npause();\nprintf(\"Signal received\\n\");\nreturn 0;\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;signal.h&gt; \u539f\u578b:\ntypedef void (*sighandler_t)(int);\nsighandler_t signal(int signum, sighandler_t handler);\n\u53c2\u6570:\nsignum\uff1a\u8981\u64cd\u4f5c\u7684\u4fe1\u53f7\nhandler:\u5bf9\u5e94\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f:\n\u9ed8\u8ba4\u5904\u7406\uff1aSIG_DFL\n\u5ffd\u7565\u5904\u7406\uff1aSIG_IGN  -- 9\u53f7\u548c19\u53f7\u4e0d\u80fd\u88ab\u5ffd\u7565\u7684\u4fe1\u53f7\n\u6355\u6349\u4fe1\u53f7\uff1a\u6267\u884c\u4fe1\u53f7\u5904\u7406\u51fd\u6570  - 9\u53f7\u548c19\u53f7\u4e0d\u80fd\u88ab\u6539\u9020\n\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff1a\u5f62\u53c2int\u7c7b\u578b\u7684\u4fe1\u53f7\uff0c\u8fd4\u56de\u503cvoid\n</code></pre> Test1Test2Test3 <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main()\n{\nsignal(2,SIG_IGN);//\u4f7f\u7528ctrl+c\u4e0d\u8d77\u4f5c\u7528\u4e86\nwhile(1)\n{\nprintf(\"hahaha\\n\");\nsleep(1);\n}\nreturn 0;\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\nvoid Fun(int a);\nint main()\n{\nsignal(2,Fun);//\u5c062\u53f7\u4fe1\u53f7\u4f7f\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u8fdb\u884c\u5904\u7406\nwhile(1)\n{\nprintf(\"respect Sakura-Ji\\n\");\nsleep(2);\n}\nreturn 0;\n}\nvoid Fun(int a)\n{\nprintf(\"ctrl + c \u88ab\u6355\u83b7\\n\");\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;unistd.h&gt;\nvoid Fun(int a);\nint main()\n{\nsignal(2,Fun);//\u5c062\u53f7\u4fe1\u53f7\u4f7f\u7528\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u8fdb\u884c\u5904\u7406\nprintf(\"\u5728\u8fd9\u91cc\u4e4b\u540e\u768410s\u5185\uff0c2\u53f7\u4fe1\u53f7\u90fd\u5c06\u88ab\u6355\u83b7\\n\");\nsleep(10);//\u5982\u679c\u5728\u8fd910\u79d2\u949f\u5185\u6309\u4e0bCtrl+C\uff0cSIGINT\u4fe1\u53f7\u4f1a\u88ab\u6355\u83b7\uff0csleep\u51fd\u6570\u4f1a\u7acb\u5373\u7ed3\u675f\n//\u6211\u67e5\u9605\u4e86\u4e00\u4e9b\u8d44\u6599\uff0c\u6709\u4e9b\u8d44\u6599\u663e\u793a\uff0csignal\u4e0d\u5e94\u8be5\u88ab\u4f7f\u7528\uff0c\u56e0\u4e3a\u6309\u9053\u7406\u5728sleep(10)\u4e2d\n//\u6309\u4e0bctrl+c signal\u5e94\u8be5\u90fd\u5c062\u53f7\u4fe1\u53f7\u6355\u83b7\uff0c\u4f7f\u7528\u4fe1\u53f7\u5904\u7406\u65b9\u5f0f\u8fdb\u884c\u5904\u7406 \u800c\u4e0d\u662fsleep\u51fd\u6570\n//\u88ab\u7ed3\u675f\u4e86\uff0c2\u53f7\u4fe1\u53f7\u76f4\u63a5\u53bb\u9ed8\u8ba4\u5904\u7406\uff0c\u6240\u4ee5\u5e94\u8be5\u4f7f\u7528sigaction\nwhile(1)\n{\nsignal(2,SIG_DFL);//\u91cd\u65b0\u5c062\u53f7\u4fe1\u53f7\u505a\u9ed8\u8ba4\u5904\u7406\uff0c\u5219\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u5904\u7406\u65b9\u5f0f\nprintf(\"\u73b0\u5728\u5df2\u7ecf\u4e0d\u80fd\u88ab\u6355\u83b7\uff0c\u800c\u662f\u5904\u4e8e\u9ed8\u8ba4\u5904\u7406\u65b9\u5f0f\\n\");\nsleep(1);\n}\nreturn 0;\n}\nvoid Fun(int a)\n{\nprintf(\"ctrl + c \u88ab\u6355\u83b7\\n\");\n}\n</code></pre> </p>"},{"location":"LinuxSystem/Communication/#Pipe","title":"\u65e0\u540d\u7ba1\u9053","text":""},{"location":"LinuxSystem/Communication/#_4","title":"\u7406\u8bba","text":"<p>\u7ba1\u9053\uff08pipe\uff09\u662f\u4e00\u79cd\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u673a\u5236\uff0c\u7528\u4e8e\u5728\u4e24\u4e2a\u76f8\u5173\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5355\u5411\u7684\u3001\u5b57\u8282\u6d41\u7684\u901a\u9053\uff0c\u5176\u4e2d\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u7ba1\u9053\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5219\u53ef\u4ee5\u4ece\u7ba1\u9053\u8bfb\u53d6\u6570\u636e\u3002</p> <p>\u4f7f\u7528\u65e0\u540d\u7ba1\u9053\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u73b0\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6216\u8005\u901a\u8fc7\u521b\u5efa\u591a\u4e2a\u7ba1\u9053\u5b9e\u73b0\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p> <p>\u901a\u4fe1\u65b9\u5f0f</p> <p>\u5355\u5de5\u901a\u4fe1: \u5e7f\u64ad</p> <p>\u53cc\u5de5\u901a\u4fe1: \u7535\u8bdd</p> <p>\u534a\u53cc\u5de5\u901a\u4fe1: \u5bf9\u8bb2\u673a</p> <p>\u6ce8\u610f: </p> <ol> <li>\u65e0\u540d\u7ba1\u9053\u53ea\u80fd\u7528\u4e8e\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u6216\u5144\u5f1f\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5b83\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u540d\u5b57\uff0c\u53ea\u662f\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u3002</li> <li>\u65e0\u540d\u7ba1\u9053 \u6ca1\u6709\u771f\u5b9e\u7684\u4ecb\u8d28\u6587\u4ef6\u5b58\u5728\uff0c\u65e0\u540d\u7ba1\u9053\u5229\u7528\u7f13\u51b2\u533a\u8fdb\u884c\u6570\u636e\u4f20\u8f93</li> <li>\u5728\u7236\u5b50\u8fdb\u7a0b\u4e2d,\u6211\u4eec\u5e94\u8be5\u5148\u521b\u5efa\u7ba1\u9053,\u518d\u521b\u5efa\u5b50\u8fdb\u7a0b,\u5426\u5219\u5b50\u8fdb\u7a0b\u5c06\u4e0d\u4f1a\u7ee7\u627f\u6587\u4ef6\u63cf\u8ff0\u7b26,\u539f\u56e0\u5982\u4e0b<ol> <li>\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u662f\u4ecefork()\u51fd\u6570\u4ee5\u4e0b\u8fdb\u884c\uff0c\u5982\u679c\u6211\u5148\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u518d\u521b\u5efa\u7ba1\u9053\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u5404\u81ea\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u4ece\u800c\u4e0d\u662f\u4e00\u4e2a\u7ba1\u9053</li> <li>\u5148\u521b\u5efa\u7ba1\u9053\uff0c\u518d\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u90a3\u4e48\u7236\u5b50\u8fdb\u7a0b\u4f7f\u7528\u7684\u662f\u540c\u4e00\u4e2a\u7ba1\u9053</li> </ol> </li> <li>\u901a\u4fe1: \u7236\u8fdb\u7a0b\u5173\u95ed\u8bfb\u6216\u8005\u5199,\u5b50\u8fdb\u7a0b\u53cd\u4e4b\u3002</li> <li>\u56e0\u4e3a\u7ba1\u9053\u7684\u53c2\u6570\u662f\u4f7f\u7528<code>int</code>\u578b\u7684\u6570\u7ec4\uff0c\u6240\u4ee5\u4f7f\u7528<code>write</code>\u6216\u8005<code>read</code>\u8bfb\u5199\u7ba1\u9053\u4e2d\u7684\u6587\u4ef6<ul> <li>\u5f53<code>read</code>\u6ca1\u6709\u8bfb\u53d6\u5230\u53c2\u6570\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u5199\u5165\u65f6\uff0c\u662f\u963b\u585e\u7b49\u5f85(\u770bpipe\u793a\u4f8b1)</li> <li>\u5f53\u7ba1\u9053\u5982\u679c\u5199\u6ee1\u4e86\uff0c\u5199\u4f1a\u53d1\u751f\u963b\u585e(64k = 1024 * 64 = 65536 byte)</li> </ul> </li> </ol>"},{"location":"LinuxSystem/Communication/#_5","title":"\u65e0\u540d\u7ba1\u9053\u51fd\u6570","text":"<ol> <li>\u521b\u5efa\u65e0\u540d\u7ba1\u9053\u7684\u51fd\u6570<code>pipe</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> pipe <ol> <li>pipe\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u5e76\u5c06\u7ba1\u9053\u7684\u8bfb\u7aef\u548c\u5199\u7aef\u6587\u4ef6\u63cf\u8ff0\u7b26\u5206\u522b\u5b58\u50a8\u5230pipefd\u6570\u7ec4\u4e2d\u3002pipefd[0]\u8868\u793a\u7ba1\u9053\u7684\u8bfb\u7aef\uff0cpipefd[1]\u8868\u793a\u7ba1\u9053\u7684\u5199\u7aef\u3002 <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pipe(int pipefd[2]);\n\u5f62\u53c2:\nfiledes\uff1a\u63a5\u6536\u6253\u5f00\u7ba1\u9053\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\nfiledes[0]:\u5b58\u653e\u7ba1\u9053\u6587\u4ef6\u7684\u8bfb\u7aef\nfiledes[1]:\u5b58\u653e\u7ba1\u9053\u6587\u4ef6\u7684\u5199\u7aef   \u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre></li> </ol> Test1Test2 <p><pre><code>#include&lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\nint fd[2] = {0};\nchar w_buf[100] = {0};\nchar r_buf[100] = {0};\nif(pipe(fd) == -1)//\u5728\u8fd9\u8fd0\u884c\u4e86 pipe\u51fd\u6570 \u5e76\u4f7f\u7528\u8fd4\u56de\u503c\u5224\u65ad\u662f\u5426\u6210\u5566 \u5e76\u4e14\u5c06fd\u4f20\u5165\u4e86pipe\u4e2d\n{\nperror(\"pipe\");\nreturn -1;\n}\n//fd[0] \u8bfb\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 -- int -- read \n//fd[1] \u5199\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 -- int -- write\npid_t pid = fork(); //\u4e00\u5b9a\u8981\u5728fork\u4e4b\u524d\u521b\u5efa\u7ba1\u9053\nif(pid &lt; 0)\n{\nperror(\"fork\");\nreturn -1;\n}\nelse if(pid == 0)//\u5b50\u8fdb\u7a0b \u5199\n{\nclose(fd[0]);//\u5173\u95ed\u8bfb\u7aef\nwhile(1)\n//\u4f7f\u7528\u5faa\u73af\u4e00\u76f4\u5199\u5165,\u53ef\u80fd\u4f1a\u6709bug\uff0c\u56e0\u4e3a\u7236\u8fdb\u7a0b\u53ea\u8bfb\u4e86\u4e00\u6b21\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u6f14\u793a(\u6240\u4ee5\u5728\u8bfb\u53d6\u540e\u52a0\u4e86\u4e00\u4e2akill)\n{\nprintf(\"\u8bf7\u8f93\u5165\u8981\u5199\u5165\u7684\u7ba1\u9053\u7684\u5185\u5bb9\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd[1], w_buf, strlen(w_buf));//\u76f4\u63a5\u5199\u5230\u4e86\u7ba1\u9053\u91cc\u9762\nmemset(w_buf,0,100);//\u6e05\u9664\u7684\u662f\u6570\u7ec4\uff0c\u9632\u6b62\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\n}\n}\nelse if(pid &gt; 0)//\u7236\u8fdb\u7a0b \u8bfb\n{\nclose(fd[1]);//\u5173\u95ed\u5199\u6bb5\nsleep(5);//\u5ef6\u8fdf5s\u518d\u53bb\u8bfb\u6587\u4ef6,\u4e5f\u5c31\u662f5s\u540e\u5c06\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u7236\u8fdb\u7a0b\u5c06\u7ed3\u675f,\u5b50\u8fdb\u7a0b\u5c06\u4f1a\u53d8\u6210\u5b64\u513f\u8fdb\u7a0b\nread(fd[0],r_buf,100);//\u4ecefd[0]\u91cc\u9762\u8bfb\uff0c\u653e\u5230r_buf\u91cc\u9762\uff0c\u4e0d\u77e5\u9053\u591a\u5927\uff0c\u6240\u4ee5\u76f4\u63a5\u653e\u6700\u5927\nprintf(\"read:%s\\n\",r_buf);\nmemset(r_buf, 0, 100);\nkill(pid,9);\n}\n}\n</code></pre> </p> <p><pre><code>#include&lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n{\nint fd[2] = {0};\nchar w_buf[100] = {0};\nchar r_buf[100] = {0};\nif(pipe(fd) == -1)//\u5728\u8fd9\u8fd0\u884c\u4e86 pipe\u51fd\u6570 \u5e76\u4f7f\u7528\u8fd4\u56de\u503c\u5224\u65ad\u662f\u5426\u6210\u5566 \u5e76\u4e14\u5c06fd\u4f20\u5165\u4e86pipe\u4e2d\n{\nperror(\"pipe\");\nreturn -1;\n}\n//fd[0] \u8bfb\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 -- int -- read \n//fd[1] \u5199\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 -- int -- write\npid_t pid = fork(); //\u4e00\u5b9a\u8981\u5728fork\u4e4b\u524d\u521b\u5efa\u7ba1\u9053\nif(pid &lt; 0)\n{\nperror(\"fork\");\nreturn -1;\n}\nelse if(pid == 0)//\u5b50\u8fdb\u7a0b \u5199\n{\nclose(fd[0]);//\u5173\u95ed\u8bfb\u7aef\nwhile(1)//\u4f7f\u7528\u5faa\u73af\u4e00\u76f4\u5199\u5165\n{\nprintf(\"\u8bf7\u8f93\u5165\u8981\u5199\u5165\u7684\u7ba1\u9053\u7684\u5185\u5bb9\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd[1], w_buf, strlen(w_buf));//\u76f4\u63a5\u5199\u5230\u4e86\u7ba1\u9053\u91cc\u9762\nif(!strcmp(w_buf, \"quit\"))//\u5982\u679c\u662fquit\u9000\u51fa\u5b50\u8fdb\u7a0b\uff0c\u76f8\u7b49\u8fd4\u56de0\uff0c!0 == 1\n{\nexit(0);\n}\nmemset(w_buf,0,100);//\u6e05\u9664\u7684\u662f\u6570\u7ec4\uff0c\u9632\u6b62\u51fa\u73b0\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\n}\n}\nelse if(pid &gt; 0)//\u7236\u8fdb\u7a0b \u8bfb\n{\nclose(fd[1]);//\u5173\u95ed\u5199\u6bb5\nwhile(1)\n{\nread(fd[0],r_buf,100);//\u4ecefd[0]\u91cc\u9762\u8bfb\uff0c\u653e\u5230r_buf\u91cc\u9762\uff0c\u4e0d\u77e5\u9053\u591a\u5927\uff0c\u6240\u4ee5\u76f4\u63a5\u653e\u6700\u5927\nif(!strcmp(r_buf, \"quit\"))\u5982\u679c\u662fquit\uff0c\u9000\u51fa\u7236\u8fdb\u7a0b\n{\nreturn 0;\n}\nprintf(\"read:%s\\n\",r_buf);\nmemset(r_buf, 0, 100);\n}\n}\n}\n</code></pre> </p>"},{"location":"LinuxSystem/Communication/#Named","title":"\u6709\u540d\u7ba1\u9053","text":"<p>\u6709\u540d\u7ba1\u9053\uff08Named Pipe\uff09\uff0c\u4e5f\u88ab\u79f0\u4e3aFIFO\uff08First-In-First-Out\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u8fdb\u884c\u8bbf\u95ee\uff0c\u5141\u8bb8 \u4e0d\u76f8\u5173\u7684\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1 \u3002</p>"},{"location":"LinuxSystem/Communication/#_6","title":"\u7406\u8bba","text":"<p>\u4f7f\u7528\u7cfb\u7edf\u547d\u4ee4</p> <p>mkfifo + \u6587\u4ef6\u540d.fifo</p> <p></p> <p>\u6ce8\u610f\u4e8b\u9879:</p> <ul> <li>FIFO\u9075\u5faa\u5148\u8fdb\u5148\u51fa\u89c4\u5219</li> <li>\u5bf9\u7ba1\u9053\u8bfb\u4ece\u5f00\u59cb\u5904\u8fd4\u56de\u6570\u636e</li> <li>\u5bf9\u7ba1\u9053\u5199\u5219\u628a\u6570\u636e\u6dfb\u52a0\u5230\u672b\u5c3e</li> <li>\u4e0d\u652f\u6301\u5982lseek()\u7b49\u6587\u4ef6\u5b9a\u4f4d\u64cd\u4f5c</li> <li>\u6253\u5f00\u8fdb\u884c\u8bfb\u5199: \u5fc5\u987b\u8bfb\u7aef\u548c\u5199\u7aef\u540c\u65f6\u6253\u5f00\uff0copen\u624d\u80fd\u901a\u8fc7(\u5373\u7ba1\u9053\u5fc5\u987b\u5efa\u7acb)</li> <li>\u4e00\u822c\u8fdb\u884c\u8bfb\u64cd\u4f5c\u7ba1\u9053\u5185\u6ca1\u6709\u5185\u5bb9\uff0c\u4f1a\u963b\u585e\u7b49\u5f85</li> <li>\u5982\u679c\u8bfb\u64cd\u4f5c\u65f6\uff0c\u5199\u7aef\u6ca1\u6709\u6253\u5f00\uff0c\u8bfb\u53d6\u5931\u8d25\uff0c\u8fd4\u56de\u9519\u8bef</li> <li>\u5982\u679c\u5199\u64cd\u4f5c\u65f6\u8bfb\u7aef\u6ca1\u6709\u6253\u5f00\uff0c\u5199\u64cd\u4f5c\u4f1a\u4ea7\u751f\u4e00\u4e2aSIGPIPE\u4fe1\u53f7</li> </ul> <p>FIFO vs \u666e\u901a\u6587\u4ef6:</p> <ul> <li>\u8bfb\u53d6FIFO\u6587\u4ef6\u7684\u8fdb\u7a0b\u53ea\u80fd\u4ee5RDONLY\u65b9\u5f0f\u6253\u5f00FIFO\u6587\u4ef6</li> <li>\u5199FIFO\u6587\u4ef6\u7684\u8fdb\u7a0b\u53ea\u80fd\u4ee5WRONLY\u7684\u65b9\u5f0f\u6253\u5f00FIFO\u6587\u4ef6</li> <li>FIFO\u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u88ab\u8bfb\u53d6\u540e\u5c31\u6d88\u5931\u4e86\uff0c\u4f46\u666e\u901a\u6587\u4ef6\u7684\u5185\u5bb9\u8fd8\u4f1a\u5b58\u5728</li> </ul>"},{"location":"LinuxSystem/Communication/#_7","title":"\u6709\u540d\u7ba1\u9053\u51fd\u6570","text":"<ol> <li>\u68c0\u6d4b\u7528\u6237\u5bf9\u6587\u4ef6\u7684\u6743\u9650(\u8bfb\uff0c\u5199\uff0c\u53ef\u6267\u884c)\u548c\u68c0\u6d4b\u6587\u4ef6\u662f\u5426\u5b58\u5728\u7684\u51fd\u6570<code>access</code></li> <li>\u521b\u5efa\u6709\u540d\u7ba1\u9053\u7684\u51fd\u6570<code>mkfifo</code></li> <li>\u5220\u9664\u6587\u4ef6\u7684\u51fd\u6570<code>unlink</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> accessmkfifounlink <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b:\nint access(const char *pathname,int mode);\n\u5f62\u53c2:\npathname: \u662f\u5e0c\u671b\u68c0\u9a8c\u7684\u6587\u4ef6\u540d\uff08\u5305\u542b\u8def\u5f84\uff09\nmode: \u662f\u6b32\u68c0\u67e5\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u4e0b\u6240\u793a\nF_OK \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728\nX_OK \u5224\u65ad\u5bf9\u6587\u4ef6\u662f\u53ef\u6267\u884c\u6743\u9650\nW_OK \u5224\u65ad\u5bf9\u6587\u4ef6\u662f\u5426\u6709\u5199\u6743\u9650\nR_OK \u5224\u65ad\u5bf9\u6587\u4ef6\u662f\u5426\u6709\u8bfb\u6743\u9650\n\u8fd4\u56de\u503c: \u6210\u529f0\uff0c\u5931\u8d25-1\n\u6ce8\uff1a\u540e\u4e09\u79cd\u53ef\u4ee5\u4f7f\u7528\u6216\u201c|\u201d\u7684\u65b9\u5f0f\uff0c\u4e00\u8d77\u4f7f\u7528\uff0c\u5982W_OK|R_OK\uff0c\u591a\u4e2a\u8fde\u7528\u4efb\u610f\u4e00\u4e2a\u6743\u9650\u6ca1\u6709\uff0c\u5c31\u8fd4\u56de-1\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\nint main() {\nconst char *path = \"example.fifo\";\nif(mkfifo(path,0644) == -1)//\u521b\u5efa\u7ba1\u9053\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n// \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(path, F_OK) == 0)\n{\nprintf(\"File exists\\n\");\n// \u68c0\u67e5\u8bfb\u6743\u9650\nif (access(path, R_OK) == 0) {\nprintf(\"Read permission granted\\n\");\n}\nelse\n{\nprintf(\"No read permission\\n\");\n}\n// \u68c0\u67e5\u5199\u6743\u9650\nif (access(path, W_OK) == 0)\n{\nprintf(\"Write permission granted\\n\");\n}   else\n{\nprintf(\"No write permission\\n\");\n}\n// \u68c0\u67e5\u6267\u884c\u6743\u9650\nif (access(path, X_OK) == 0)\n{\nprintf(\"Execute permission granted\\n\");\n}\nelse\n{\nprintf(\"No execute permission\\n\");\n}\n} else\n{\nprintf(\"File does not exist\\n\");\n}\nreturn 0;\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\n\u539f\u578b:\nint mkfifo(const char * pathname,mode_t mode)\n\u53c2\u6570:\npathname: \u8981\u521b\u5efa\u7684FIFO\u6587\u4ef6\u7684\u540d\u5b57\uff08\u5e26\u8def\u5f84\uff09\nmode: \u521b\u5efa\u7684FIFO\u6587\u4ef6\u7684\u6743\u9650\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002\n</code></pre> \u5199\u5165\u7aef\u8bfb\u53d6\u7aef <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\nint main() {\nconst char *path = \"example.fifo\";\n// \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(path, F_OK) == 0)\n{\nprintf(\"File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"File does not exist\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(path,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u6253\u5f00 -- \u5199\nint fd = open(path,O_WRONLY);\nchar w_buf[100] = {0};\nif(fd == -1)\n{\nperror(\"open\");\nreturn -1;\n}\nwhile(1)\n{\nprintf(\"\u8bf7\u8f93\u5165\u8981\u5199\u5165\u7684\u5185\u5bb9:\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd,w_buf,strlen(w_buf));\nif(!strcmp(w_buf, \"quit\"))//\u9632\u6b62\u9677\u5165\u5f53\u4e00\u7aef\u5173\u95ed\uff0c\u7ba1\u9053\u6467\u6bc1\uff0c\u53e6\u4e00\u7aef\u51fa\u73b0bug\n{\nreturn 0;\n}\nmemset(w_buf,0,100);\n}\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\nint main() {\nconst char *path = \"example.fifo\";\n// \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(path, F_OK) == 0)\n{\nprintf(\"File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"File does not exist\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(path,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u6253\u5f00 -- \u8bfb\nchar r_buf[100] = {0};\nint fd = open(path,O_RDONLY);\nif(fd == -1)\n{\nperror(\"open\");\nreturn -1;\n}\nwhile(1)\n{\nread(fd,r_buf,100);\nif(!strcmp(r_buf, \"quit\"))\n{\nreturn 0;\n}\nprintf(\"read:%s\\n\",r_buf);\nmemset(r_buf,0,100);\n}\nreturn 0;\n}\n</code></pre> <p></p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u539f\u578b:\nint unlink(const char * pathname)\n\u53c2\u6570:\npathname:\u8981\u5220\u9664\u7684FIFO\u6587\u4ef6\u7684\u540d\u5b57\uff08\u5e26\u8def\u5f84\uff09\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u3002\n</code></pre>"},{"location":"LinuxSystem/Communication/#_8","title":"\u4e3e\u4f8b","text":"<p>\u901a\u8fc7\u6709\u540d\u7ba1\u9053\u5b9e\u73b0\u534a\u53cc\u5de5\u901a\u4fe1</p> zhu\u901a\u4fe1cong\u901a\u4fe1 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\n#define TEXT \"text.fifo\"\n#define DATA \"data.fifo\"\nint main()\n{\n// \u68c0\u67e5text.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(TEXT, F_OK) == 0)\n{\nprintf(\"text.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"text.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(TEXT,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n// \u68c0\u6d4bdata.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(DATA, F_OK) == 0)\n{\nprintf(\"data.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"data.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(DATA,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u6253\u5f00 -- \u5199\nprintf(\"\u8bf7\u5411text.fifo\u7ba1\u9053\u6587\u4ef6\u4e2d\u5199\u5165\\n\");\nint fd = open(TEXT,O_WRONLY);\nchar w_buf[100] = {0};\nif(fd == -1)\n{\nperror(\"zhu write open\");\nreturn -1;\n}\nint fp = open(DATA,O_RDONLY);\nchar r_buf[100] = {0};\nif(fp == -1)\n{\nperror(\"zhu read open\");\nreturn -1;\n}\nwhile(1)\n{\nprintf(\"\u8bf7\u5728zhu\u901a\u4fe1\u4e2d\u8f93\u5165\u8981\u5199\u5165\u7684\u5185\u5bb9:\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd,w_buf,strlen(w_buf));\nif(!strcmp(w_buf, \"quit\"))//\u9632\u6b62\u9677\u5165\u5f53\u4e00\u7aef\u5173\u95ed\uff0c\u7ba1\u9053\u6467\u6bc1\uff0c\u53e6\u4e00\u7aef\u51fa\u73b0bug\n{\nreturn 0;\n}\nmemset(w_buf,0,100);\nread(fp,r_buf,100);\nif(!strcmp(r_buf, \"quit\"))\n{\nreturn 0;\n}\nprintf(\"zhu read:%s\\n\",r_buf);\nmemset(r_buf,0,100);\n}\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\n#define TEXT \"text.fifo\"\n#define DATA \"data.fifo\"\nint main()\n{\n// \u68c0\u67e5text.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(TEXT, F_OK) == 0)\n{\nprintf(\"text.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"text.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(TEXT,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n// \u68c0\u6d4bdata.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(DATA, F_OK) == 0)\n{\nprintf(\"data.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"data.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(DATA,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u6253\u5f00 -- \u5199\nprintf(\"\u7b49\u5f85zhu\u7cfb\u7edf\u53d1\u9001\u4fe1\u606f\\n\");\nint fd = open(TEXT,O_RDONLY);\nchar r_buf[100] = {0};\nif(fd == -1)\n{\nperror(\"cong read open\");\nreturn -1;\n}\nint fp = open(DATA,O_WRONLY);\nchar w_buf[100] = {0};\nif(fp == -1)\n{\nperror(\"cong write open\");\nreturn -1;\n}\nwhile(1)\n{\nprintf(\"\u6b63\u5728\u8f93\u51fazhu\u7cfb\u7edf\u53d1\u9001\u7684\u5185\u5bb9:\\n\");\nread(fd,r_buf,100);\nif(!strcmp(r_buf, \"quit\"))\n{\nreturn 0;\n}\nprintf(\"cong read:%s\\n\",r_buf);\nmemset(r_buf,0,100);\nprintf(\"cong\u7cfb\u7edf\u6b63\u5728\u56de\u590ding\\n\");\nscanf(\"%s\",w_buf);\nwrite(fp,w_buf,strlen(w_buf));\nif(!strcmp(w_buf, \"quit\"))//\u9632\u6b62\u9677\u5165\u5f53\u4e00\u7aef\u5173\u95ed\uff0c\u7ba1\u9053\u6467\u6bc1\uff0c\u53e6\u4e00\u7aef\u51fa\u73b0bug\n{\nreturn 0;\n}\nmemset(w_buf,0,100);\n}\nreturn 0;\n}\n</code></pre> <p></p>"},{"location":"LinuxSystem/Communication/#Shared","title":"\u5171\u4eab\u5185\u5b58","text":""},{"location":"LinuxSystem/Communication/#_9","title":"\u7406\u8bba","text":"<p>\u5728IPC\u901a\u4fe1\u4e2d\uff0c\u5171\u4eab\u5185\u5b58\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u3002\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u6620\u5c04\u540c\u4e00\u5757\u5171\u4eab\u5185\u5b58\u533a\u57df\u5230\u5b83\u4eec\u5404\u81ea\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u6570\u636e\u7684\u5171\u4eab\u548c\u76f4\u63a5\u8bbf\u95ee\u3002</p> <p>\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u901a\u5e38\u4f1a\u7ecf\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u521b\u5efa\u5171\u4eab\u5185\u5b58\uff1a\u9996\u5148\uff0c\u9700\u8981\u8c03\u7528IPC\u51fd\u6570\uff08\u5982<code>shmget</code>\uff09\u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u533a\u57df\uff0c\u5e76\u6307\u5b9a\u6240\u9700\u7684\u5927\u5c0f\u548c\u6743\u9650\u3002\u4f20\u9012\u7ed9<code>shmget</code>\u51fd\u6570\u7684\u53c2\u6570\u5305\u62ec\u952e\u503c\u3001\u5185\u5b58\u5927\u5c0f\u548c\u6807\u5fd7\u7b49\u3002</p> </li> <li> <p>\u8fde\u63a5(\u6620\u5c04)\u5171\u4eab\u5185\u5b58\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u9700\u8981\u8c03\u7528IPC\u51fd\u6570\uff08\u5982<code>shmat</code>\uff09\u6765\u8fde\u63a5\u5230\u5171\u4eab\u5185\u5b58\u533a\u57df\u3002<code>shmat</code>\u51fd\u6570\u8fd4\u56de\u6307\u5411\u5171\u4eab\u5185\u5b58\u7684\u6307\u9488\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u8be5\u6307\u9488\u8fdb\u884c\u76f4\u63a5\u7684\u8bfb\u5199\u64cd\u4f5c\u3002</p> </li> <li> <p>\u8fdb\u884c\u6570\u636e\u4ea4\u4e92\uff1a\u4e00\u65e6\u8fdb\u7a0b\u8fde\u63a5\u5230\u4e86\u5171\u4eab\u5185\u5b58\uff0c\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bfb\u5199\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002\u6ce8\u610f\uff0c\u9700\u8981\u786e\u4fdd\u8fdb\u7a0b\u4e4b\u95f4\u5bf9\u5171\u4eab\u5185\u5b58\u7684\u8bbf\u95ee\u540c\u6b65\u548c\u4e92\u65a5\uff0c\u4ee5\u907f\u514d\u6570\u636e\u7684\u7ade\u4e89\u548c\u4e00\u81f4\u6027\u95ee\u9898\u3002</p> </li> <li> <p>\u5206\u79bb(\u89e3\u9664)\u5171\u4eab\u5185\u5b58\uff1a\u5f53\u8fdb\u7a0b\u4e0d\u518d\u9700\u8981\u5171\u4eab\u5185\u5b58\u65f6\uff0c\u9700\u8981\u8c03\u7528IPC\u51fd\u6570\uff08\u5982<code>shmdt</code>\uff09\u6765\u5206\u79bb\u5171\u4eab\u5185\u5b58\u533a\u57df\u3002\u8fd9\u6837\uff0c\u8fdb\u7a0b\u5c31\u4e0d\u518d\u62e5\u6709\u5bf9\u5171\u4eab\u5185\u5b58\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> </li> <li> <p>\u5220\u9664\u5171\u4eab\u5185\u5b58\uff08\u53ef\u9009\uff09\uff1a\u5982\u679c\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u5171\u4eab\u5185\u5b58\uff0c\u53ef\u4ee5\u8c03\u7528IPC\u51fd\u6570\uff08\u5982<code>shmctl</code>\uff09\u5220\u9664\u5171\u4eab\u5185\u5b58\u533a\u57df\u3002\u8fd9\u4f1a\u91ca\u653e\u76f8\u5173\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u5e76\u4f7f\u5f97\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u8fde\u63a5\u5230\u8be5\u5171\u4eab\u5185\u5b58\u3002</p> </li> </ol> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5171\u4eab\u5185\u5b58\u4f5c\u4e3a\u4e00\u79cd\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u5b58\u5728\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6570\u636e\u4e00\u81f4\u6027\u3001\u5e76\u53d1\u8bbf\u95ee\u7b49\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u65f6\u8981\u6ce8\u610f\u5408\u7406\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784\u3001\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff08\u5982\u4fe1\u53f7\u91cf\u3001\u4e92\u65a5\u9501\uff09\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\u548c\u5b89\u5168\u6027\u3002</p> <p>\u5171\u4eab\u5185\u5b58\u901a\u4fe1\u867d\u7136\u9ad8\u6548\uff0c\u4f46\u4e5f\u8981\u8c28\u614e\u4f7f\u7528\u3002\u5728\u8bbe\u8ba1\u4e2d\uff0c\u9664\u4e86\u5171\u4eab\u5185\u5b58\uff0c\u8fd8\u53ef\u4ee5\u7ed3\u5408\u5176\u4ed6IPC\u901a\u4fe1\u65b9\u5f0f\uff0c\u5982\u4fe1\u53f7\u91cf\u3001\u7ba1\u9053\u7b49\uff0c\u7efc\u5408\u8003\u8651\u9009\u62e9\u9002\u5408\u7684\u901a\u4fe1\u673a\u5236\u4ee5\u6ee1\u8db3\u5177\u4f53\u9700\u6c42\u3002</p>"},{"location":"LinuxSystem/Communication/#ftok","title":"\u5171\u4eab\u5185\u5b58\u51fd\u6570","text":"<ol> <li>\u952e\u503c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u901a\u5e38\u4f7f\u7528<code>ftok</code>\u51fd\u6570\u5c06\u4e00\u4e2a\u552f\u4e00\u7684\u6587\u4ef6\u548c\u4e00\u4e2a\u9879\u76ee\u6807\u8bc6\u7b26\uff08project identifier\uff09\u8f6c\u6362\u4e3a\u952e\u503c</li> <li>\u7528\u4e8e\u521b\u5efa\u6216\u6253\u5f00\u5171\u4eab\u5185\u5b58\u6bb5\u7684\u51fd\u6570 <code>shmget</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> ftokshmgetshmatshmdtshmctlmemcpy <p>\u6ce8\u610f:\u4e0d\u540c\u8fdb\u7a0b\u8981\u8bbf\u95ee\u540c\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u533a\u57df\uff0c\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u3002 <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/ipc.h&gt;\n\u51fd\u6570\u539f\u578b:key_t ftok(const char *pathname,int proj_id);\n\u53c2\u6570:\npathname:\u8def\u5f84\uff0c\u4efb\u610f\u7684pathname\u5c31\u662f\u4f60\u6307\u5b9a\u7684\u6587\u4ef6\u540d(\u8be5\u6587\u4ef6\u5fc5\u987b\u662f\u5b58\u5728\u800c\u4e14\u53ef\u4ee5\u8bbf\u95ee\u7684)\nproj_id:\u662f\u5b50\u5e8f\u53f7\uff0c\u867d\u7136\u4e3aint\uff0c\u4f46\u662f\u53ea\u67098\u4e2a\u6bd4\u7279\u88ab\u4f7f\u7528(0-255)\n\u8fd4\u56de\u503c:\u5f53\u6210\u529f\u6267\u884c\u7684\u65f6\u5019\uff0c\u4e00\u4e2akey_t\u503c\u5c06\u4f1a\u88ab\u8fd4\u56de\uff0c\u5426\u5219 -1 \u88ab\u8fd4\u56de\n</code></pre></p> <p>\u4e3e\u4f8b<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;sys/ipc.h&gt;\n#include &lt;stdio.h&gt;\nint main()\n{\nkey_t a = ftok(\"/home\", 99);//\u751f\u6210\u952e\u503c\nprintf(\"1.c\u4e2d\u7684a=%d\\n\",a);//1.c\u4e0e2.c\u4e0d\u540c\u5904\u53ea\u6709printf\u8fd9\u91cc\nreturn 0;\n}\n</code></pre> </p> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/ipc.h&gt;\n#include &lt;sys/shm.h&gt;\n\u51fd\u6570\u539f\u578b:\nint shmget(key_t key, size_t size, int shmflg);\n\u5f62\u53c2:\n* key: \u5171\u4eab\u5185\u5b58\u7684\u952e\u503c\uff0c\u901a\u5e38\u4f7f\u7528`ftok`\u51fd\u6570\u751f\u6210\u3002\u4e0d\u540c\u8fdb\u7a0b\u8981\u8bbf\u95ee\u540c\u4e00\u5757\u5171\u4eab\u5185\u5b58\uff0c\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u952e\u503c\u3002\n* size: \u5171\u4eab\u5185\u5b58\u6bb5\u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\n* shmflg: \u6807\u5fd7\u4f4d\uff0c\u7528\u4e8e\u6307\u5b9a\u521b\u5efa\u5171\u4eab\u5185\u5b58\u7684\u6743\u9650\u548c\u7279\u6027\u3002\n\u793a\u4f8b: IPC_CREAT|0777 \u5982\u679c\u5171\u4eab\u5185\u5b58\u5df2\u7ecf\u5b58\u5728\uff0c\u5c31\u53ea\u6253\u5f00\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u5e76\u6253\u5f00\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56de\u4e00\u4e2aint\u7c7b\u578b\u7684\u6807\u8bc6\u7b26\n\u5931\u8d25-1\n</code></pre> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/shm.h&gt;\n\u51fd\u6570\u539f\u578b:\nvoid *shmat(int shmid, const void *shmaddr, int shmflg);\n\u5f62\u53c2:\nshmid -- \u5f00\u8f9f\u597d\u7684\u5171\u4eab\u5185\u5b58\u7684\u6807\u8bc6\u7b26\u3002\nshmaddr -- NULL\u5c06\u5171\u4eab\u5185\u5b58\u6620\u5c04\u5230\u6307\u5b9a\u4f4d\u7f6e\uff08\u82e5\u4e3a(void *)0\u5219\u8868\u793a\u628a\u8be5\u6bb5\u5171\u4eab\u5185\u5b58\u6620\u5c04\u5230\u8c03\u7528\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4-\u7531\u8ba1\u7b97\u673a\u81ea\u5df1\u5206\u914d\uff09\nshmflg: \u9ed8\u8ba4 0\uff1a\u5171\u4eab\u5185\u5b58\u53ef\u8bfb\u5199\n\u8fd4\u56de\u503c:\nvoid *  \u4e07\u80fd\u6307\u9488\uff0c\u8868\u793a\u6620\u5c04\u5230\u5f53\u524d\u8fdb\u7a0b\u7684\u9996\u5730\u5740\uff08\u63a5\u4e0b\u6765\u968f\u5171\u4eab\u5185\u5b58\u7684\u90fd\u6216\u8005\u5199\uff0c\u76f4\u63a5\u5bf9\u8be5\u8fd4\u56de\u503c\u64cd\u4f5c\u5373\u53ef\uff09\n</code></pre> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n\u51fd\u6570\u539f\u578b:\nint shmdt(const void *shmaddr);\n\u5f62\u53c2:\nshmaddr:shmat\u7684\u8fd4\u56de\u503c\n\u8fd4\u56de\u503c:\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\uff1b\n\u6ce8\u610f:\u89e3\u9664\u6620\u5c04\u5e76\u4e0d\u662f\u5220\u9664\u5171\u4eab\u5185\u5b58\u3002\n</code></pre> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n\u51fd\u6570\u539f\u578b:\nint shmctl(int shmid, int cmd, struct shmid_ds *buf);\n\u53c2\u6570:\nshmid \uff1ashmget\u7684\u8fd4\u56de\u503c\ncmd\uff1a\u9009\u62e9\u7684\u64cd\u4f5c\nIPC_RMID\uff1a\u5220\u9664\u5171\u4eab\u5185\u5b58\uff0c\u6b64\u65f6\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3aNULL\nbuf -- NULL\uff1b\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> <pre><code>\u51fd\u6570\u539f\u578b:\nvoid*memcpy(void *str1,const void *str2,size_t n) \u4ece\u5b58\u50a8\u533a str2 \u590d\u5236 n \u4e2a\u5b57\u8282\u5230\u5b58\u50a8\u533a str1\u3002\n</code></pre>"},{"location":"LinuxSystem/Communication/#Semaphore","title":"\u4fe1\u53f7\u91cf\u96c6","text":""},{"location":"LinuxSystem/Communication/#Message","title":"\u6d88\u606f\u961f\u5217","text":""},{"location":"LinuxSystem/Communication/#Socket","title":"\u5957\u63a5\u5b57","text":""},{"location":"LinuxSystem/Communication/#_10","title":"\u7406\u8bba","text":"<p>\u5957\u63a5\u5b57\uff08Socket\uff09\u662f\u7528\u4e8e\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5b83\u662f\u4e00\u79cd\u62bd\u8c61\u7684\u901a\u4fe1\u7aef\u70b9\u3002</p> <p>\u5728Linux\u7cfb\u7edf\u7f16\u7a0b\u4e2d\uff0c\u4f7f\u7528\u5957\u63a5\u5b57\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u8fdb\u7a0b\u6216\u4e0d\u540c\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u901a\u4fe1,\u5957\u63a5\u5b57\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8fdb\u884c\u6807\u8bc6\u548c\u64cd\u4f5c\u3002</p> <p>\u5e38\u89c1\u7684\u5957\u63a5\u5b57\u7c7b\u578b\u5305\u62ec:</p> <ul> <li>\u6d41\u5957\u63a5\u5b57(SOCK_STREAM): \u6d41\u5957\u63a5\u5b57\u63d0\u4f9b\u53ef\u9760\u7684\u3001\u9762\u5411\u8fde\u63a5\u7684\u901a\u4fe1</li> <li>\u6570\u636e\u62a5\u5957\u63a5\u5b57(SOCK_DGRAM): \u6570\u636e\u62a5\u5957\u63a5\u5b57\u5219\u63d0\u4f9b\u65e0\u8fde\u63a5\u7684\u901a\u4fe1\u3002</li> </ul> <p>\u5728\u4f7f\u7528\u5957\u63a5\u5b57\u8fdb\u884c\u7f51\u7edc\u7f16\u7a0b\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u5904\u7406\u9519\u8bef\u548c\u5f02\u5e38\u60c5\u51b5\uff0c\u4ee5\u786e\u4fdd\u7a0b\u5e8f\u80fd\u591f\u6b63\u786e\u5730\u5904\u7406\u8fde\u63a5\u3001\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u7b49\u64cd\u4f5c\u3002 \u53e6\u5916\uff0c\u7f51\u7edc\u7f16\u7a0b\u4e2d\u7684\u5957\u63a5\u5b57\u76f8\u5173\u64cd\u4f5c\u901a\u5e38\u662f\u963b\u585e\u7684\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u5bfc\u81f4\u8fdb\u7a0b\u963b\u585e\u7b49\u5f85\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u975e\u963b\u585e\u7684\u64cd\u4f5c\u6216\u591a\u7ebf\u7a0b\u6765\u5904\u7406\u5e76\u53d1\u8fde\u63a5\u548c\u8bf7\u6c42\u3002</p>"},{"location":"LinuxSystem/Communication/#_11","title":"\u51fd\u6570","text":"<p>\u4e0b\u9762\u662f\u7528\u4e8e\u521b\u5efa\u548c\u4f7f\u7528\u5957\u63a5\u5b57\u7684\u4e00\u4e9b\u91cd\u8981\u7cfb\u7edf\u8c03\u7528\u548c\u51fd\u6570\uff1a</p> <ol> <li><code>socket()</code>:\u521b\u5efa\u4e00\u4e2a\u5957\u63a5\u5b57\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</li> <li><code>bind()</code>: \u5c06\u5957\u63a5\u5b57\u4e0e\u7279\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u7ed1\u5b9a\u3002</li> <li><code>listen()</code>: \u5c06\u4e00\u4e2a\u6d41\u5957\u63a5\u5b57\u8f6c\u6362\u4e3a\u88ab\u52a8\u76d1\u542c\u6a21\u5f0f\uff0c\u7b49\u5f85\u8fde\u63a5\u8bf7\u6c42\u3002</li> <li><code>accept()</code>: \u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7528\u4e8e\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u901a\u4fe1\u3002</li> <li><code>connect()</code>: \u5efa\u7acb\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\u3002</li> <li><code>send()</code>: \u53d1\u9001\u6570\u636e\u5230\u5957\u63a5\u5b57\u3002</li> <li><code>recv()</code>: \u4ece\u5957\u63a5\u5b57\u63a5\u6536\u6570\u636e\u3002</li> <li><code>close()</code>: \u5173\u95ed\u5957\u63a5\u5b57\u3002</li> </ol> <p>\u51fd\u6570\u539f\u578b</p> socketbindlistenacceptconnectsendrecvclose <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nint socket(int domain, int type, int protocol);\nsocket()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570: domain:\u6307\u5b9a\u5957\u63a5\u5b57\u7684\u901a\u4fe1\u57df\uff0c\u8868\u793a\u4f7f\u7528\u54ea\u79cd\u534f\u8bae\u65cf\u3002\u5e38\u89c1\u7684\u53d6\u503c\u5305\u62ec:\nAF_INET\uff1aIPv4\u534f\u8bae\u65cf\nAF_INET6\uff1aIPv6\u534f\u8bae\u65cf\nAF_UNIX\uff1aUnix\u57df\u534f\u8bae\u65cf\uff08\u672c\u5730\u5957\u63a5\u5b57\uff09\ntype: \u6307\u5b9a\u5957\u63a5\u5b57\u7684\u7c7b\u578b\uff0c\u8868\u793a\u901a\u4fe1\u65b9\u5f0f\u3002\u5e38\u89c1\u7684\u53d6\u503c\u5305\u62ec:\nSOCK_STREAM\uff1a\u9762\u5411\u8fde\u63a5\u7684\u6d41\u5f0f\u5957\u63a5\u5b57\uff0c\u4f7f\u7528TCP\u534f\u8bae\nSOCK_DGRAM\uff1a\u65e0\u8fde\u63a5\u7684\u6570\u636e\u62a5\u5f0f\u5957\u63a5\u5b57\uff0c\u4f7f\u7528UDP\u534f\u8bae\nSOCK_RAW\uff1a\u539f\u59cb\u5957\u63a5\u5b57\uff0c\u53ef\u4ee5\u8bbf\u95ee\u4f4e\u5c42\u534f\u8bae\nprotocol:\u6307\u5b9a\u534f\u8bae\u7684\u7f16\u53f7\uff0c\u4f7fsocket()\u51fd\u6570\u80fd\u591f\u66f4\u7cbe\u786e\u5730\u9009\u62e9\u534f\u8bae\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\uff0c\u8868\u793a\u7531\u7cfb\u7edf\u6839\u636e\u524d\u4e24\u4e2a\u53c2\u6570\u81ea\u52a8\u9009\u62e9\u3002\n\u8fd4\u56de\u503c:\nsocket()\u51fd\u6570\u6210\u529f\u521b\u5efa\u5957\u63a5\u5b57\u540e\uff0c\u8fd4\u56de\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u53d8\u91cf\u6765\u6307\u793a\u5177\u4f53\u7684\u9519\u8bef\u539f\u56e0\u3002\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\nint main()\n{\nint res = socket(AF_INET, SOCK_STREAM, 0);//\u9009\u7528IPV4\u534f\u8bae\u65cf\uff0c\u4f7f\u7528TCP\u901a\u4fe1\u65b9\u5f0f\uff0c\u81ea\u52a8\u9009\u62e9\u534f\u8bae\u7f16\u53f7\nif(res == -1)\n{\nperror(\"socket\");\nreturn -1;\n}\nperror(\"socket\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u5efa\u7acb\u5957\u63a5\u5b57\nreturn 0;\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nint bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\nbind()\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570:\nsockfd: \u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u8fdb\u884c\u7ed1\u5b9a\u64cd\u4f5c\u7684\u5957\u63a5\u5b57\u3002\naddr: \u6307\u5411\u5b58\u653e\u8981\u7ed1\u5b9a\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u901a\u5e38\u662fstruct sockaddr\u7c7b\u578b\u7684\u6307\u9488\u3002\n\u6839\u636e\u5957\u63a5\u5b57\u7684\u901a\u4fe1\u57df\uff08domain\uff09\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528struct sockaddr_in\uff08IPv4\uff09\u6216\nstruct sockaddr_in6\uff08IPv6\uff09\u7b49\u76f8\u5173\u7ed3\u6784\u4f53\u3002\naddrlen: addr\u7ed3\u6784\u4f53\u7684\u957f\u5ea6\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\n\u8fd4\u56de\u503c:\n\u6210\u529f\u5219\u8fd4\u56de 0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> \u7ed3\u6784\u4f53struct sockaddr\u7ed3\u6784\u4f53struct sockaddr_in\u7ed3\u6784\u4f53struct sockaddr_in6 <ol> <li>\u4e0d\u597d\u7528\u63a8\u8350\u4f7f\u7528:<code>struct sockaddr_in</code> \u7528\u4e8e\u8868\u793aIPv4\u5730\u5740,<code>struct sockaddr_in6</code> \u7528\u4e8e\u8868\u793aIPv6\u5730\u5740\u7b49 <pre><code>struct sockaddr {\nsa_family_t sa_family;              // \u5730\u5740\u65cf\uff0c\u5982AF_INET\u3001AF_INET6\nchar        sa_data[14];            // \u5730\u5740\u6570\u636e\n};\nstruct sockaddr \u7ed3\u6784\u4f53\u5305\u542b\u4e24\u4e2a\u6210\u5458:\nsa_family: \u8868\u793a\u5730\u5740\u65cf\uff0c\u5373\u8be5\u5957\u63a5\u5b57\u5730\u5740\u6240\u5c5e\u7684\u534f\u8bae\u65cf\u3002\u5e38\u89c1\u7684\u534f\u8bae\u65cf\u6709AF_INET(IPv4)\u548cAF_INET6(IPv6)\u7b49\u3002\nsa_data: \u7528\u4e8e\u5b58\u50a8\u5957\u63a5\u5b57\u5730\u5740\u7684\u5b9e\u9645\u6570\u636e\u3002\u5b83\u7684\u957f\u5ea6\u4e3a14\u5b57\u8282\uff0c\u8db3\u591f\u5b58\u653e\u5404\u79cd\u7c7b\u578b\u7684\u5957\u63a5\u5b57\u5730\u5740\u6570\u636e\uff08\u4f8b\u5982\uff0cIPv4\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff09\u3002\n\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u534f\u8bae\u65cf\u4f7f\u7528\u5bf9\u5e94\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06 struct sockaddr \u8f6c\u6362\u4e3a\u66f4\u5177\u4f53\u7684\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\uff0c\n\u4f8b\u5982struct sockaddr_in\u7528\u4e8e\u8868\u793aIPv4\u5730\u5740\uff0cstruct sockaddr_in6 \u7528\u4e8e\u8868\u793aIPv6\u5730\u5740\u7b49\u3002\n</code></pre></li> </ol> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;netinet/in.h&gt;\n\u7ed3\u6784\u4f53\u539f\u578b:\nstruct sockaddr_in {\nsa_family_t sin_family;    // \u5730\u5740\u65cf\uff08Address Family\uff09\uff0c\u4e00\u822c\u4e3aAF_INET\nin_port_t sin_port;        // \u7aef\u53e3\u53f7\nstruct in_addr sin_addr;   // IPv4\u5730\u5740\u7ed3\u6784\nunsigned char sin_zero[8]; // \u586b\u5145\u5b57\u8282\uff0c\u901a\u5e38\u7f6e\u4e3a0\n};\nstruct sockaddr_in\u7ed3\u6784\u4f53\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6210\u5458:\nsin_family: \u6307\u5b9a\u5730\u5740\u65cf\uff0c\u4e00\u822c\u4e3aAF_INET\uff0c\u8868\u793a\u4f7f\u7528IPv4\u534f\u8bae\u3002\nsin_port: \u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u4f7f\u7528in_port_t\u7c7b\u578b\uff0c\u9700\u8981\u4f7f\u7528htons()\u51fd\u6570\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\nsin_addr: \u5b58\u653eIPv4\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff0c\u7c7b\u578b\u4e3astruct in_addr\u3002\nsin_zero: \u7528\u4e8e\u586b\u5145\u5b57\u8282\uff0c\u901a\u5e38\u7f6e\u4e3a0\u3002\n</code></pre> htons\u51fd\u6570<pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;arpa/inet.h&gt;\n\u51fd\u6570\u539f\u578b:\nuint16_t htons(uint16_t hostshort);\n\u53c2\u6570\u548c\u8fd4\u56de\u503c:\n\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a16\u4f4d\u65e0\u7b26\u53f7\u6574\u6570 hostshort \u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u4ee5\u7f51\u7edc\u5b57\u8282\u5e8f\u8868\u793a\u7684\u5bf9\u5e94\u503c\uff0c\u7c7b\u578b\u4e3a uint16_t\u3002\n\u4e3e\u4f8b:\nserver_address.sin_port = htons(8080);\n</code></pre> <p><code>struct in_addr</code> \u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8IPv4\u5730\u5740\u7684\u7ed3\u6784\u4f53\uff0c\u5b9a\u4e49\u5982\u4e0b:</p> <p><pre><code>struct in_addr {\nin_addr_t s_addr; // IPv4\u5730\u5740\n};\n</code></pre> <code>in_addr_t</code> \u662f\u4e00\u4e2a\u65e0\u7b26\u53f732\u4f4d\u6574\u578b,\u7528\u4e8e\u5b58\u50a8IPv4\u5730\u5740,\u5b83\u7684\u5b9a\u4e49\u53ef\u4ee5\u5728\u4e0d\u540c\u7cfb\u7edf\u4e2d\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u4e3a\u4e86\u5c06IPV4\u5730\u5740,\u5b58\u50a8\u5728\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u4f53\u4e2d,\u9700\u8981\u4f7f\u7528\u76f8\u5173\u7684\u51fd\u6570 <code>inet_addr()</code></p> inet_addr\u51fd\u6570<pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;arpa/inet.h&gt;\n\u51fd\u6570\u539f\u578b:\nin_addr_t inet_addr(const char *cp);\n\u53c2\u6570\u548c\u8fd4\u56de\u503c:\n\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6307\u5411\u4ee5\u70b9\u5206\u5341\u8fdb\u5236\u8868\u793a\u7684IPv4\u5730\u5740\u7684\u5b57\u7b26\u4e32 cp \u4f5c\u4e3a\u53c2\u6570\uff0c\n\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u7f51\u7edc\u5b57\u8282\u5e8f\u768432\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u7c7b\u578b\u4e3a in_addr_t\u3002\n\u4e3e\u4f8b:\nserver_address.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n</code></pre> <pre><code>#include &lt;netinet/in.h&gt;\nstruct sockaddr_in6 {\nsa_family_t     sin6_family;    // \u5730\u5740\u65cf\uff1aAF_INET6\nin_port_t       sin6_port;      // \u7aef\u53e3\u53f7\nuint32_t        sin6_flowinfo;  // \u6d41\u4fe1\u606f\nstruct in6_addr sin6_addr;      // IPv6\u5730\u5740\nuint32_t        sin6_scope_id;  // \u5730\u5740\u4f5c\u7528\u57df\n};\nstruct sockaddr_in6\u7ed3\u6784\u4f53\u7684\u6210\u5458\u5982\u4e0b\uff1a\nsin6_family\uff1a\u5730\u5740\u65cf\uff0c\u59cb\u7ec8\u4e3aAF_INET6\uff0c\u8868\u793aIPv6\u5730\u5740\u3002\nsin6_port\uff1a\u7aef\u53e3\u53f7\uff0c\u4f7f\u7528in_port_t\u7c7b\u578b\u8fdb\u884c\u5b58\u50a8\u3002\u901a\u8fc7htons()\u51fd\u6570\u5c06\u7aef\u53e3\u53f7\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\nsin6_flowinfo\uff1a\u6d41\u4fe1\u606f\uff0c\u7528\u4e8e\u6307\u5b9a\u6570\u636e\u6d41\u7684\u76f8\u5173\u53c2\u6570\uff0c\u4e00\u822c\u7f6e\u4e3a0\u3002\nsin6_addr\uff1aIPv6\u5730\u5740\uff0c\u4f7f\u7528struct in6_addr\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u3002\nsin6_scope_id\uff1a\u5730\u5740\u4f5c\u7528\u57df\uff0c\u8868\u793aIPv6\u5730\u5740\u7684\u8303\u56f4\u3002\n</code></pre> <p>\u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\nint main()\n{\nint sockfd = socket(AF_INET, SOCK_STREAM, 0);//\u9009\u7528IPV4\u534f\u8bae\u65cf\uff0c\u4f7f\u7528TCP\u901a\u4fe1\u65b9\u5f0f\uff0c\u81ea\u52a8\u9009\u62e9\u534f\u8bae\u7f16\u53f7\nif(sockfd == -1)\n{\nperror(\"socket\");\nreturn -1;\n}\nperror(\"socket\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u5efa\u7acb\u5957\u63a5\u5b57\nstruct sockaddr_in addr;//\u5b9a\u4e49\u6307\u5411\u5b58\u653e\u8981\u7ed1\u5b9a\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\naddr.sin_family = AF_INET;//\u867d\u7136\u4e0a\u9762\u9009\u7528\u4e86IPV4\u534f\u8bae\uff0c\u9700\u8981\u518d\u6b21\u6307\u5b9aIPV4\u534f\u8bae\u65cf\naddr.sin_port = htons(12345);//\u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u5e76\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\naddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");//IPv4\u5730\u5740\u7ed3\u6784\nint res =bind(sockfd, (struct sockaddr *)&amp;addr, sizeof(addr));//\u5c06\u5957\u63a5\u5b57\u4e0e\u7279\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u7ed1\u5b9a\n//\u4f7f\u7528 (struct sockaddr *)&amp;addr \u5f3a\u8f6c\u662f\u4e3a\u4e86\u4e0e\u539f\u578b\u4e00\u81f4\uff0c\u4e0d\u5f3a\u8f6c\u4e5f\u53ef\u4ee5\u56e0\u4e3a\u91cc\u9762\u6709\u586b\u5145\u5b57\u8282sin_zero[8]\nif(res == -1)\n{\nperror(\"bind\");\nreturn -1;\n}\nperror(\"bind\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u7ed1\u5b9a\nreturn 0;\n}\n</code></pre> </p> <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nint listen(int sockfd, int backlog);\nlisten()\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570:\nsockfd\uff1a\u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u76d1\u542c\u7684\u5957\u63a5\u5b57\u3002\nbacklog\uff1a\u5f85\u5904\u7406\u8fde\u63a5\u8bf7\u6c42\u7684\u6700\u5927\u961f\u5217\u957f\u5ea6\n\u8fd4\u56de\u503c:\n\u6210\u529f\u5219\u8fd4\u56de 0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\nint main()\n{\nint sockfd = socket(AF_INET, SOCK_STREAM, 0);//\u9009\u7528IPV4\u534f\u8bae\u65cf\uff0c\u4f7f\u7528TCP\u901a\u4fe1\u65b9\u5f0f\uff0c\u81ea\u52a8\u9009\u62e9\u534f\u8bae\u7f16\u53f7\nif(sockfd == -1)\n{\nperror(\"socket\");\nreturn -1;\n}\nperror(\"socket\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u5efa\u7acb\u5957\u63a5\u5b57\nstruct sockaddr_in addr;//\u5b9a\u4e49\u6307\u5411\u5b58\u653e\u8981\u7ed1\u5b9a\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\naddr.sin_family = AF_INET;//\u867d\u7136\u4e0a\u9762\u9009\u7528\u4e86IPV4\u534f\u8bae\uff0c\u9700\u8981\u518d\u6b21\u6307\u5b9aIPV4\u534f\u8bae\u65cf\naddr.sin_port = htons(12345);//\u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u5e76\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\naddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");//IPv4\u5730\u5740\u7ed3\u6784\nint res =bind(sockfd, (struct sockaddr *)&amp;addr, sizeof(addr));//\u5c06\u5957\u63a5\u5b57\u4e0e\u7279\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u7ed1\u5b9a\nif(res == -1)\n{\nperror(\"bind\");\nreturn -1;\n}\nperror(\"bind\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u7ed1\u5b9a\nres = listen(sockfd, 5);//\u8bbe\u7f6e\u540c\u4e00\u65f6\u523b\u6700\u5927\u8fde\u63a5\u5ba2\u6237\u7aef\u6570\u4e3a5\u4e2a\nif(res == -1)\n{\nperror(\"listen\");\nreturn -1;\n}\nperror(\"listen\");//\u589e\u52a0\u6548\u679c,\u786e\u5b9a\u8fde\u63a5\u8bf7\u6c42\u6210\u529f\nreturn 0;\n}\n</code></pre> </p> <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b: int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);\naccept()\u51fd\u6570\u63a5\u6536\u4e09\u4e2a\u53c2\u6570:\nsockfd: \u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\u7684\u76d1\u542c\u5957\u63a5\u5b57\u3002\naddr: \u7528\u4e8e\u5b58\u653e\u8fde\u63a5\u65b9\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u901a\u5e38\u662f struct sockaddr \u7c7b\u578b\u7684\u6307\u9488\u3002\n\u6bd4\u5982:struct sockaddr_in , struct sockaddr_in6 \u7c7b\u578b\n\u5728\u63a5\u53d7\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u53c2\u6570\u83b7\u53d6\u8fde\u63a5\u65b9\u7684\u5730\u5740\u4fe1\u606f\u3002\n\u7528\u4e8e\u63a5\u53d7\u5ba2\u6237\u7aef\u7684ip\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u53ea\u63d0\u4f9b\u7a7a\u95f4(\u5ba2\u6237\u7aef \u4f60\u8fde\u63a5\u6211 \u670d\u52a1\u7aef\u4e86 \uff0c\u6211\u5c31\u80fd\u83b7\u53d6\u4f60\u7684ip\u548c\u7aef\u53e3\u53f7)\naddrlen: addr\u7ed3\u6784\u4f53\u7684\u957f\u5ea6\u6307\u9488\uff0c\u7528\u4e8e\u6307\u793a\u5b58\u653e\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u7684\u5b9e\u9645\u957f\u5ea6\u3002\n\u8fd4\u56de\u503c:\n\u8c03\u7528accept()\u51fd\u6570\u5c06\u4f1a\u963b\u585e\u7b49\u5f85\u8fde\u63a5\u8bf7\u6c42\u7684\u5230\u6765\u3002\u5f53\u6709\u5ba2\u6237\u7aef\u8bf7\u6c42\u8fde\u63a5\u65f6\uff0c\naccept()\u51fd\u6570\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u5e76\u8fd4\u56de\u8be5\u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\n\u901a\u8fc7\u8fd9\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\uff0c\u53ef\u4ee5\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u901a\u4fe1\u3002\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\nint main()\n{\nint sockfd = socket(AF_INET, SOCK_STREAM, 0);//\u9009\u7528IPV4\u534f\u8bae\u65cf\uff0c\u4f7f\u7528TCP\u901a\u4fe1\u65b9\u5f0f\uff0c\u81ea\u52a8\u9009\u62e9\u534f\u8bae\u7f16\u53f7\nif(sockfd == -1)\n{\nperror(\"socket\");\nreturn -1;\n}\nperror(\"socket\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u5efa\u7acb\u5957\u63a5\u5b57\nstruct sockaddr_in addr;//\u5b9a\u4e49\u6307\u5411\u5b58\u653e\u8981\u7ed1\u5b9a\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\naddr.sin_family = AF_INET;//\u867d\u7136\u4e0a\u9762\u9009\u7528\u4e86IPV4\u534f\u8bae\uff0c\u9700\u8981\u518d\u6b21\u6307\u5b9aIPV4\u534f\u8bae\u65cf\naddr.sin_port = htons(12345);//\u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u5e76\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\naddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");//IPv4\u5730\u5740\u7ed3\u6784\nint res =bind(sockfd, (struct sockaddr *)&amp;addr, sizeof(addr));//\u5c06\u5957\u63a5\u5b57\u4e0e\u7279\u5b9a\u7684\u5730\u5740\u548c\u7aef\u53e3\u7ed1\u5b9a\nif(res == -1)\n{\nperror(\"bind\");\nreturn -1;\n}\nperror(\"bind\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u7ed1\u5b9a\nres = listen(sockfd, 5);//\u8bbe\u7f6e\u540c\u4e00\u65f6\u523b\u6700\u5927\u8fde\u63a5\u5ba2\u6237\u7aef\u6570\u4e3a5\u4e2a\nif(res == -1)\n{\nperror(\"listen\");\nreturn -1;\n}\nperror(\"listen\");//\u589e\u52a0\u6548\u679c,\u786e\u5b9a\u8fde\u63a5\u8bf7\u6c42\u6210\u529f\nstruct sockaddr_in o_addr;//\u7528\u6765\u63a5\u6536\u4fdd\u5b58\u8fde\u63a5\u65b9\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\nsocklen_t len = sizeof(o_addr);//\u56e0\u4e3a\u53d6\u5730\u5740\u4e0d\u80fd\u5bf9\u5e38\u91cf\u53d6\u5730\u5740\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u53d8\u91cflen = \u5b83 \u7136\u540e\u5c06\u8fd9\u4e2a\u5730\u5740\u4f20\u5165accept\u7b2c\u4e09\u4e2a\u53c2\u6570\nint fd1 = accept(sockfd, (struct sockaddr *)&amp;o_addr, &amp;len);//\u63a5\u53d7\u4f20\u5165\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5957\u63a5\u5b57\u7528\u4e8e\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u901a\u4fe1\nif(fd1 == -1)\n{\nperror(\"accept\");\nreturn -1;\n}\nreturn 0;\n}\n</code></pre> </p> <ol> <li>\u5ba2\u6237\u7aef\u7528\u6765\u8fde\u63a5\u670d\u52a1\u5668\u7684\u51fd\u6570</li> </ol> <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nint connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen);\nconnect()\u51fd\u6570\u63a5\u6536\u4e09\u4e2a\u53c2\u6570:\nsockfd\uff1a\u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u8fde\u63a5\u7684\u5957\u63a5\u5b57\u3002\naddr\uff1a\u6307\u5411\u5b58\u653e\u76ee\u6807\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u901a\u5e38\u662fstruct sockaddr\u7c7b\u578b\u7684\u6307\u9488\u3002\u6839\u636e\u5957\u63a5\u5b57\u7684\u901a\u4fe1\u57df\uff08domain\uff09\u7684\u4e0d\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528struct sockaddr_in\uff08IPv4\uff09\u6216struct sockaddr_in6\uff08IPv6\uff09\u7b49\u76f8\u5173\u7ed3\u6784\u4f53\u3002\naddrlen\uff1aaddr\u7ed3\u6784\u4f53\u7684\u957f\u5ea6\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\n\u8fd4\u56de\u503c:\n\u6210\u529f\u5219\u8fd4\u56de 0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;arpa/inet.h&gt;\n#include &lt;netinet/in.h&gt;\nint main()\n{\nint cli_fd = socket(AF_INET, SOCK_STREAM, 0);//\u9009\u7528IPV4\u534f\u8bae\u65cf\uff0c\u4f7f\u7528TCP\u901a\u4fe1\u65b9\u5f0f\uff0c\u81ea\u52a8\u9009\u62e9\u534f\u8bae\u7f16\u53f7\nif(cli_fd == -1)\n{\nperror(\"socket\");\nreturn -1;\n}\nperror(\"socket\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u5efa\u7acb\u5957\u63a5\u5b57\n//\u8fd8\u662f\u4f7f\u7528server\u7aef\u7684\u4fe1\u606f\uff0c\u4e0ebind\u51fd\u6570\u4fdd\u6301\u4e00\u81f4\nstruct sockaddr_in ser_addr;//\u5b9a\u4e49\u6307\u5411\u5b58\u653e\u8981\u7ed1\u5b9a\u7684\u5730\u5740\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\nser_addr.sin_family = AF_INET;//\u867d\u7136\u4e0a\u9762\u9009\u7528\u4e86IPV4\u534f\u8bae\uff0c\u9700\u8981\u518d\u6b21\u6307\u5b9aIPV4\u534f\u8bae\u65cf\nser_addr.sin_port = htons(12345);//\u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u5e76\u5c06\u4e3b\u673a\u5b57\u8282\u5e8f\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u3002\nser_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");//IPv4\u5730\u5740\u7ed3\u6784\nint res =connect(cli_fd, (struct sockaddr *)&amp;ser_addr, sizeof(ser_addr));//\u7533\u8bf7\u8fde\u63a5\u670d\u52a1\u7aef\nif(res == -1)\n{\nperror(\"connect\");\nreturn -1;\n}\nperror(\"connect\");//\u589e\u52a0\u6548\u679c\uff0c\u786e\u5b9a\u6210\u529f\u663e\u793a\u8fde\u63a5\u6210\u529f(\u9700\u8981\u670d\u52a1\u7aef\u5fc5\u987b\u6253\u5f00\u7684\u72b6\u6001)\nreturn 0;\n}\n</code></pre> </p> <ol> <li>\u4f7f\u7528TCP\u5957\u63a5\u5b57 <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nssize_t send(int sockfd, const void *buf, size_t len, int flags);\nsend()\u51fd\u6570\u63a5\u6536\u56db\u4e2a\u53c2\u6570:\nsockfd: \u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u53d1\u9001\u6570\u636e\u7684\u5957\u63a5\u5b57\u3002(accept\u7684\u8fd4\u56de\u503c)\nbuf: \u6307\u5411\u8981\u53d1\u9001\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\nlen: \u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u957f\u5ea6\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\nflags: \u53ef\u9009\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u989d\u5916\u7684\u6807\u5fd7\uff0c\u5982MSG_DONTWAIT\u7b49\uff0c\u901a\u5e38\u7f6e\u4e3a0,\u963b\u585e\u7b49\u5f85\n\u8fd4\u56de\u503c:\n\u51fd\u6570\u8fd4\u56de\u53d1\u9001\u7684\u5b57\u8282\u6570\uff0c\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0c\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u53d8\u91cf\u6765\u6307\u793a\u9519\u8bef\u7c7b\u578b\u3002\n</code></pre></li> </ol> <pre><code>\u6240\u9700\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/socket.h&gt;\n\u51fd\u6570\u539f\u578b:\nssize_t recv(int sockfd, void *buf, size_t len, int flags);\nrecv()\u51fd\u6570\u63a5\u6536\u56db\u4e2a\u53c2\u6570:\nsockfd: \u5957\u63a5\u5b57\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5373\u8981\u63a5\u6536\u6570\u636e\u7684\u5957\u63a5\u5b57\u3002(accept\u7684\u8fd4\u56de\u503c)\nbuf: \u6307\u5411\u63a5\u6536\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\u3002\nlen: \u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0c\u5373\u8981\u63a5\u6536\u7684\u6570\u636e\u7684\u6700\u5927\u957f\u5ea6\u3002\nflags: \u53ef\u9009\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u989d\u5916\u7684\u6807\u5fd7\uff0c\u5982MSG_DONTWAIT\u7b49\uff0c\u901a\u5e38\u7f6e\u4e3a0,\u963b\u585e\u7b49\u5f85\u3002\n\u8fd4\u56de\u503c\n\u6210\u529f\u8fd4\u56de\u771f\u6b63\u63a5\u6536\u7684\u6570\u636e\u957f\u5ea6\uff1b\u5982\u679c\u5bf9\u65b9\u7684\u5957\u63a5\u5b57\u6b63\u5e38\u5173\u95ed\uff0crecv\u7684\u8fd4\u56de\u503c\u4e3a0\uff1b\u5931\u8d25-1\uff1b\n</code></pre> <pre><code>\u5173\u95ed\u4e24\u79cd\u5957\u63a5\u5b57:\nclose(fd); // accept\u7684\u8fd4\u56de\u503c\nclose(sockfd);//\u670d\u52a1\u7aef\u521b\u5efa\u7684\u5957\u63a5\u5b57\n</code></pre>"},{"location":"LinuxSystem/Communication/#_12","title":"\u4e3e\u4f8b","text":""},{"location":"LinuxSystem/File/","title":"\u6587\u4ef6","text":""},{"location":"LinuxSystem/File/#_2","title":"\u57fa\u4e8e\u7f13\u51b2\u533a\u7684\u6587\u4ef6\u64cd\u4f5c\uff1a","text":"<p>\u9ad8\u7ea7IO  FILE *\u6587\u4ef6\u63cf\u8ff0</p> <pre><code> FILE *fopen(const char *path,const char *mode);\nmode: r r+ (\u4e0d\u80fd\u521b\u5efa\u6587\u4ef6) w w+ (\u6e05\u7a7a\u5199)\na a+ (\u8ffd\u52a0\u5199)\nfclose(fp);\nfputc(); fgetc();// (1)\nfputs(); fgets();\nfprintf(); fscanf();(\u914d\u5408\u4f7f\u7528)\nfwrite(); fread();(\u4e8c\u8fdb\u5236\u6587\u4ef6)\nfewind(fp); (\u5149\u6807\u504f\u79fb\u5230\u6587\u7ae0\u5f00\u5934)\nfseek(fp,\u00b1n,whence); ==&gt; fseek(fp,0,SEEK_SET) == rewind(fp);\nlong num = ftell(fp);(\u8ba1\u7b97\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5230\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf)\nfseek(fp,0,SEEK_END); long num = ftell(fp); --&gt;\u8ba1\u7b97\u6587\u7ae0\u5927\u5c0f\nfeof(fp);\u8ba1\u7b97\u5149\u6807\u662f\u5426\u8fbe\u5230\u6587\u4ef6\u672b\u5c3e \u4f46\u4f1a\u591a\u8d70\u4e00\u904d\nwhile(fgetc(fp) != -1)\n{\nfseek(fp,-1,SEEK_CUR);\n}\n</code></pre> <ol> <li>fgetc()\u51fd\u6570\u7684\u529f\u80fd\u662f\u4ece\u6587\u4ef6\u6307\u9488\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8be5\u5b57\u7b26\u7684ASCII\u503c\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u82e5\u8fd4\u56de\u503c\u4e3aEOF\uff0c\u8bf4\u660e\u6587\u4ef6\u7ed3\u675f\uff0c EOF\u662f\u6587\u4ef6\u7ed3\u675f\u6807\u5fd7\uff0c\u503c\u4e3a-1\u3002 \u8bed\u53e5\u201cc=fgetc(fp);\u201d\u662f\u4ece\u6587\u4ef6\u6307\u9488fp\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u8bfb\u4e00\u4e2a\u5b57\u7b26\u5e76\u5b58\u4ebac\u53d8\u91cf\u4e2d\uff0cc\u662f\u5b57\u7b26\u578b\u53d8\u91cf\u3002</li> </ol>"},{"location":"LinuxSystem/File/#FILE","title":"\u57fa\u4e8e\u975e\u7f13\u51b2\u533a\u7684\u6587\u4ef6\u64cd\u4f5c","text":"<p>\u4f4e\u7ea7IO  open\u7684\u8fd4\u56de\u503cint</p> <p>\u51fd\u6570\u5b9a\u4e49</p> openclosewrite-&gt;\u4e8c\u8fdb\u5236\u6587\u4ef6read-&gt;\u4e8c\u8fdb\u5236\u6587\u4ef6lseek\u5149\u6807\u504f\u79fb\u51fd\u6570 <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n\u51fd\u6570\u539f\u578b:\nint open(const char *pathname, int flags);\nint open(const char *pathname, int flags, mode_t mode);\n\u5f62\u53c2:\npathname -- \u6253\u5f00\u6587\u4ef6\u7684\u8def\u5f84\nflags\uff1a\n\u4ee5\u4e0b\u4e09\u4e2a\u5b8f\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\uff1a\nO_RDONLY -- \u53ea\u8bfb\nO_WRONLY -- \u53ea\u5199\nO_RDWR  -- \u8bfb\u5199\n\u4e0b\u9762\u7684\u5b8f\uff0c\u53ef\u9009\uff1a\nO_CREAT(\u521b\u5efa)   (\u53ea\u8981\u9009\u62e9\u8be5\u5b8f\uff0c\u5fc5\u987b\u7ed9\u7b2c\u4e09\u4e2a\u53c2\u6570)\n1. \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\n2. \u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u53ea\u6253\u5f00\uff0cmode\u5931\u6548\nO_APPEND\uff08\u8ffd\u52a0\u5199\uff09  append\nO_TRUNC\uff08\u6e05\u7a7a\u5199\uff09  truncated\nO_EXCL\u8981\u548cO_CREAT\u4e00\u5757\u7528\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u76f4\u63a5\u6253\u5f00\u5931\u8d25\nmode\uff1a\u6587\u4ef6\u7684\u6743\u9650  \u771f\u6b63\u7684\u6743\u9650\u662f\uff1amode &amp;(~umask) //umask \u63a9\u7801 \u8ba9\u5176\u4ed6\u7528\u6237\u6ca1\u6709\u5199\u6743\u9650  \n\u67e5\u770bumask\u503c\u7684\u65b9\u6cd5\uff1a\u7ec8\u7aef\u8f93\u5165umask\numask\uff1a0002 ~umask\uff1a111 111 101\n\u4e3e\u4f8b\uff1amode\u4f20\u51650777   \u771f\u6b63\u7684\u6743\u9650\uff1a\n111 111 111\n&amp; 111 111 101\n111 111 101    \u5373rwx rwx r-x\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56deint \u7c7b\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n\u5931\u8d25\uff1a-1\n\u5e0c\u671b\u53ef\u8bfb\u53ef\u5199\uff0c\u5e76\u4e14\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\uff1a\nflag \uff1a O_RDWR|O_CREAT\n\u5e0c\u671b\u53ef\u8bfb\u53ef\u5199\uff0c\u5e76\u4e14\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\uff0c\u6e05\u7a7a\u5199\uff1a\nflag \uff1a O_RDWR|O_CREAT|O_TRUNC\nint fd= open(\u201c./1.txt\u201d,O_RDWR|O_CREAT|O_TRUNC,0644); rw-r--r--;\n</code></pre> <pre><code>#include &lt;unistd.h&gt;\nint close(int fd);\n\u5f62\u53c2\uff1aopen\u6253\u5f00\u83b7\u53d6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n</code></pre> <pre><code>#include &lt;unistd.h&gt;\nssize_t write(int fd, const void *buf, size_t count);\n\u5f62\u53c2\uff1a\nfildes -- open\u7684\u8fd4\u56de\u503c\nbuf -- \u4f60\u8981\u5199\u5165\u5230\u6587\u4ef6\u7684\u5185\u5bb9\ncount -- \u5199\u5165\u7684\u5927\u5c0f\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u5199\u5165\u7684\u5b57\u8282\u6570\n\u5931\u8d25\uff1a-1\n</code></pre> <pre><code>#include &lt;unistd.h&gt;\nssize_t read(int fildes, void *buf, size_t count);\n\u5f62\u53c2\uff1afildes -- open\u7684\u8fd4\u56de\u503c\nbuf -- \u4f60\u8bfb\u53d6\u5230\u7684\u5185\u5bb9\u5b58\u653e\u7684\u4f4d\u7f6e\ncount -- \u8bfb\u53d6\u7684\u5927\u5c0f\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\n\u5931\u8d25\uff1a-1\n</code></pre> <pre><code>off_t lseek(int fildes, off_t offset, int whence);\n\u5f62\u53c2\uff1a\nfildes -- open\u7684\u8fd4\u56de\u503c\noffset -- \u504f\u79fb\u91cf\n+ \u5f80\u6587\u4ef6\u672b\u5c3e\u65b9\u5411\u504f\u79fb\n- \u5f80\u6587\u4ef6\u5f00\u5934\u65b9\u5411\u504f\u79fb\nwhence  SEEK_SET  \uff080\uff09\nSEEK_CUR  \uff081\uff09\nSEEK_END  \uff082\uff09\n\u8fd4\u56de\u503c\uff1a\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5230\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\nint num = lseek(fd,0,2); //\u6587\u4ef6\u5927\u5c0f\n</code></pre> <p>\u51fd\u6570\u4e3e\u4f8b</p> open\u4e3e\u4f8bwrite\u4e3e\u4f8b\u8bfb\u53d6\u590d\u5236\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u653e\u8d26\u53f7\u548c\u5bc6\u7801 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\nint main()\n{\nint fd = open(\"./1.txt\",O_RDWR|O_CREAT|O_TRUNC,0666);\nprintf(\"fd = %d\\n\",fd);\n//int fd = open(\"./1.txt\",O_RDWR|O_CREAT|O_EXCL,0X666);//O_EXCL\u4e0eO_CREAT\u7ed3\u5408\u4f7f\u7528\n//printf(\"fd = %d\\n\",fd); //fd = -1 \u5931\u8d25\nclose(fd);\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\nint main()\n{\nchar buf[100] = \"hello world\";\nint fd = open(\"./1.txt\",O_RDWR|O_CREAT|O_TRUNC,0666);\nif(fd == -1)\n{\nperror(\"open\");\nreturn 0;\n}\nwrite(fd,buf,strlen(buf));\nclose(fd);\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\nint main(int argc, char *argv[])\n{\nint fp1 = open(argv[1], O_RDONLY); //./open1.txt\nif(fp1 == -1 )\n{\nperror(\"open\");\nreturn 0;\n}\nint fp2 = open(argv[2], O_RDWR|O_CREAT|O_TRUNC,0644);//\u521b\u5efa\u65b0\u76841.txt\nif(fp2 == -1 )\n{\nperror(\"open\");\nreturn 0;\n}\nint num = lseek(fp1, 0, 2);\nchar *p = (char *)malloc(num);\nlseek(fp1,0,0);\nread(fp1 , p , num);\nwrite(fp2, p, num);\nprintf(\"%s\\n\",p);\nclose(fp1);\nclose(fp2);\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\nstruct account{\nchar name[32];\nchar passwd[7];\n};\nint main(int argc,char *argv[])\n{\nstruct account per = {\"sakura\",\"123456\"};\nstruct account pe = {0};//\u8bfb\u53d6\u653e\u7684\u5730\u65b9\nint fd = open(\"./5.txt\",O_RDWR|O_CREAT|O_TRUNC,0666);\nif(fd == -1)\n{\nperror(\"open\");\nreturn 0;\n}\nwrite(fd,&amp;per,sizeof(struct account));\nlseek(fd,0,0);//\u5149\u6807\u504f\u79fb\u5230\u6587\u4ef6\u5f00\u5934\nread(fd,&amp;pe,sizeof(struct account)); printf(\"\u59d3\u540d:%s \u5bc6\u7801:%s\\n\",pe.name,pe.passwd);\nclose(fd);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#_3","title":"\u65f6\u95f4\u7f16\u7a0b","text":""},{"location":"LinuxSystem/File/#_4","title":"\u6307\u4ee4","text":"<ul> <li>data</li> <li>cal </li> </ul>"},{"location":"LinuxSystem/File/#_5","title":"\u51fd\u6570","text":"<p>\u65e5\u5386\u65f6\u95f4: 1970-01-01 00:00:00 \u5230\u73b0\u5728\u7684\u79d2\u6570</p>"},{"location":"LinuxSystem/File/#1time","title":"1.\u83b7\u53d6\u65e5\u5386\u65f6\u95f4\u7684\u51fd\u6570:<code>time</code>","text":"time<pre><code>\u51fd\u6570\u539f\u578b time_t time(time_t *t);\n\u6240\u5c5e\u5934\u6587\u4ef6\uff1a&lt;time.h&gt;\n\u53c2\u6570 t - NULL\n\u8fd4\u56de\u503c:\u6210\u529f\u8fd4\u56delong int\u578b\u7684\u65e5\u5386\u65f6\u95f4 \u79d2\u6570\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> \u4e3e\u4f8btime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nprintf(\"%ld\\n\",t);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#2-localtime","title":"2.\u83b7\u53d6\u672c\u5730\u65f6\u95f4 <code>localtime</code>","text":"localtime<pre><code>\u529f\u80fd\uff1a\u5c06time\u6307\u5411\u7684\u65e5\u5386\u65f6\u95f4\u8f6c\u6362\u4e3a\u672c\u5730\u65f6\u95f4\n\u539f\u578b struct tm *localtime(const time_t *timep);\n\u6240\u5c5e\u5934\u6587\u4ef6\uff1a&lt;time.h&gt;\n\u53c2\u6570 timep:\u6307\u5411\u5f85\u8f6c\u5316\u65e5\u5386\u65f6\u95f4\n\u8fd4\u56de\u503c\uff1a\n\u6210\u529f\uff1a\u8fd4\u56de\u4ee5struct tm\u5f62\u5f0f\u5b58\u50a8\u7684\u672c\u5730\u65f6\u95f4\uff0c\u5931\u8d25\u8fd4\u56deNULL\nstruct tm {\nint tm_sec;    /* Seconds (0-60) */\nint tm_min;    /* Minutes (0-59) */\nint tm_hour;   /* Hours (0-23) */\nint tm_mday;   /* Day of the month (1-31) */\nint tm_mon;    /*Month(0-11)*/ +1\nint tm_year;   /*Year-1900*/ +1900\nint tm_wday;   /* Day of the week (0-6, Sunday = 0) */\nint tm_yday;   /* Day in the year (0-365, 1 Jan = 0) */\nint tm_isdst;  /*Daylight saving time */\n};\n</code></pre> \u4e3e\u4f8blocaltime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nprintf(\"%ld\\n\",t);\nstruct tm *p = localtime(&amp;t);\nprintf(\"%d-%d-%d %d:%d:%d\\n\",p-&gt;tm_year+1900,p-&gt;tm_mon+1,p-&gt;tm_mday,p-&gt;tm_hour,p-&gt;tm_min,p-&gt;tm_sec);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#3gmtime","title":"3.\u83b7\u53d6\u683c\u6797\u5a01\u6cbb\u65f6\u95f4<code>gmtime</code>","text":"gmtime<pre><code>\u529f\u80fd \u5c06\u53c2\u6570timep\u6240\u6307\u5b9a\u7684\u65e5\u5386\u65f6\u95f4\u8f6c\u6362\u4e3a\u6807\u51c6\u65f6\u95f4\n\u539f\u578b\uff1a\nstruct tm *gmtime(const time_t *timep);\n\u6240\u5c5e\u5934\u6587\u4ef6&lt;time.h&gt;\n\u53c2\u6570\uff1atimep\u5f85\u8f6c\u5316\u7684\u65e5\u5386\u65f6\u95f4\n\u8fd4\u56de\u503c \u6210\u529f\u8fd4\u56de\u4e16\u754c\u6807\u51c6\u65f6\u95f4\uff0c\u4ee5struct tm\u5f62\u5f0f\u5b58\u50a8\nstruct tm {\nint tm_sec;    /* Seconds (0-60) */\nint tm_min;    /* Minutes (0-59) */\nint tm_hour;   /*Hours(0-23)*/+8\nint tm_mday;   /* Day of the month (1-31) */\nint tm_mon;    /*Month(0-11)*/+1\nint tm_year;   /*Year-1900*/ +1900\nint tm_wday;   /* Day of the week (0-6, Sunday = 0) */\nint tm_yday;   /* Day in the year (0-365, 1 Jan = 0) */\nint tm_isdst;  /*Daylight saving time */\n};\n</code></pre> \u4e3e\u4f8bgmtime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nprintf(\"%ld\\n\",t);\nstruct tm *p = gmtime(&amp;t);\nprintf(\"%d-%d-%d %d:%d:%d\\n\",p-&gt;tm_year+1900,p-&gt;tm_mon+1,p-&gt;tm_mday,p-&gt;tm_hour+8,p-&gt;tm_min,p-&gt;tm_sec);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#4-ctime","title":"4.\u65e5\u5386\u8f6c\u5316\u6210\u672c\u5730\u65f6\u95f4 <code>ctime</code>","text":"<p>ctime<pre><code>\u529f\u80fd \u5c06\u65e5\u5386\u65f6\u95f4\u8f6c\u5316\u4e3a\u672c\u5730\u65f6\u95f4\n\u539f\u578b char *ctime(const time_t *timep);\n\u6240\u5c5e\u5934\u6587\u4ef6\n&lt;time.h&gt;\n\u53c2\u6570 \u5f85\u8f6c\u5316\u4e3a\u65e5\u5386\u65f6\u95f4\n\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u4e00\u5b57\u7b26\u4e32\u8868\u793a\u76ee\u524d\u5f53\u5730\u7684\u65f6\u95f4\u65e5\u671f\u3002\n</code></pre> \u4e3e\u4f8bctime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nprintf(\"%ld\\n\",t);\nchar *p = ctime(&amp;t);\nprintf(\"%s\\n\",p);\nreturn 0;\n}\n</code></pre></p> <p></p>"},{"location":"LinuxSystem/File/#5struct-tmasctime","title":"5.\u5c06struct tm\u683c\u5f0f\u7684\u65f6\u95f4\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32<code>asctime</code>","text":"asctime<pre><code>\u539f\u578b char *asctime(const struct tm *tm);\n\u6240\u5c5e\u5934\u6587\u4ef6\uff1a &lt;time.h&gt;\n\u53c2\u6570\uff1a\u5f85\u8f6c\u5316\u7684tm\u683c\u5f0f\u7684\u65f6\u95f4\n\u8fd4\u56de\u503c\uff1a\u5b57\u7b26\u4e32\u663e\u793a\u7684\u65f6\u95f4\n</code></pre> \u4e3e\u4f8basctime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nprintf(\"%ld\\n\",t);\nstruct tm *p = localtime(&amp;t);//\u6216 struct tm *p = gmtime(&amp;t); \u4f7f\u7528gmtime \u663e\u793a\u65f6\u95f4\u4e0e\u5317\u4eac\u65f6\u95f4\u5c118\u5c0f\u65f6\nchar *z = asctime(p);\nprintf(\"%s\\n\",z);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#6-strftime","title":"6.\u81ea\u7531\u683c\u5f0f\u65f6\u95f4 <code>strftime</code>","text":"strftime<pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:  #include &lt;time.h&gt;\n\u529f\u80fd: \u5b57\u7b26\u4e32\u663e\u793a\u65f6\u95f4\n\u539f\u578b: size_t strftime(char*s,size_t max, const char *format,const struct tm *tm);//printf(const char *format,...);\n\u53c2\u6570:\ns -- \u5b58\u653e\u683c\u5f0f\u5316\u65f6\u95f4\u5b58\u653e\u7684\u4f4d\u7f6e\u3002\nmax -- \u8fd9\u662f\u7ed9 str \u8981\u590d\u5236\u7684\u5b57\u7b26\u7684\u6700\u5927\u6570\u76ee\u3002\nformat -- \u201c\u539f\u6837\u8f93\u51fa+\u683c\u5f0f\u63a7\u5236\u7b26\u201d\ntm -- localtime/gmtime\u7684\u8fd4\u56de\u503c\n\u8fd4\u56de\u503c\uff1as\u6307\u5411\u7f13\u51b2\u533a\u7684\u5b57\u8282\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\u2018\\0\u2019\ntime_t t = time(NULL);\nchar buf[100] = {0};\nstruct tm *p = localtime(&amp;t);\nstrftime\uff08buf,100,\u201d%D/%y/%m/%d\u201d,p\uff09\uff1b\nprintf(\u201c%s\u201d\uff0cbuf);\n\u7ed9\u5b9a\u7684\u683c\u5f0fFORMAT \u63a7\u5236\u7740\u8f93\u51fa\uff0c\u89e3\u91ca\u5e8f\u5217\u5982\u4e0b\uff1a\n%a    \u5f53\u524dlocale \u7684\u661f\u671f\u540d\u7f29\u5199(\u4f8b\u5982\uff1a \u65e5\uff0c\u4ee3\u8868\u661f\u671f\u65e5)\n%A    \u5f53\u524dlocale \u7684\u661f\u671f\u540d\u5168\u79f0 (\u5982\uff1a\u661f\u671f\u65e5)\n%b    \u5f53\u524dlocale \u7684\u6708\u540d\u7f29\u5199 (\u5982\uff1a\u4e00\uff0c\u4ee3\u8868\u4e00\u6708)\n%B    \u5f53\u524dlocale \u7684\u6708\u540d\u5168\u79f0 (\u5982\uff1a\u4e00\u6708)\n%c    \u5f53\u524dlocale \u7684\u65e5\u671f\u548c\u65f6\u95f4 (\u5982\uff1a2005\u5e743\u67083\u65e5 \u661f\u671f\u56db 23:05:25)\n%C    \u4e16\u7eaa\uff1b\u6bd4\u5982 %Y\uff0c\u901a\u5e38\u4e3a\u7701\u7565\u5f53\u524d\u5e74\u4efd\u7684\u540e\u4e24\u4f4d\u6570\u5b57(\u4f8b\u5982\uff1a20)\n%d    \u6309\u6708\u8ba1\u7684\u65e5\u671f(\u4f8b\u5982\uff1a01)\n%D    \u6309\u6708\u8ba1\u7684\u65e5\u671f\uff1b\u7b49\u4e8e%m/%d/%y\n%e    \u6309\u6708\u8ba1\u7684\u65e5\u671f\uff0c\u6dfb\u52a0\u7a7a\u683c\uff0c\u7b49\u4e8e%_d\n%F    \u5b8c\u6574\u65e5\u671f\u683c\u5f0f\uff0c\u7b49\u4ef7\u4e8e %Y-%m-%d\n%g    ISO-8601 \u683c\u5f0f\u5e74\u4efd\u7684\u6700\u540e\u4e24\u4f4d (\u53c2\u89c1%G)\n%G    ISO-8601 \u683c\u5f0f\u5e74\u4efd (\u53c2\u89c1%V)\uff0c\u4e00\u822c\u53ea\u548c %V \u7ed3\u5408\u4f7f\u7528\n%h    \u7b49\u4e8e%b\n%H    \u5c0f\u65f6(00-23)\n%I    \u5c0f\u65f6(00-12)\n%c    \u6309\u5e74\u8ba1\u7684\u65e5\u671f(001-366)\n%k    \u65f6(0-23)\n%l    \u65f6(1-12)\n%m    \u6708\u4efd(01-12)\n%M    \u5206(00-59)\n%n    \u6362\u884c\n%N    \u7eb3\u79d2(000000000-999999999)\n%p    \u5f53\u524dlocale \u4e0b\u7684\"\u4e0a\u5348\"\u6216\u8005\"\u4e0b\u5348\"\uff0c\u672a\u77e5\u65f6\u8f93\u51fa\u4e3a\u7a7a\n%P    \u4e0e%p \u7c7b\u4f3c\uff0c\u4f46\u662f\u8f93\u51fa\u5c0f\u5199\u5b57\u6bcd\n%r    \u5f53\u524dlocale \u4e0b\u7684 12 \u5c0f\u65f6\u65f6\u949f\u65f6\u95f4 (\u5982\uff1a11:11:04 \u4e0b\u5348)\n%R    24 \u5c0f\u65f6\u65f6\u95f4\u7684\u65f6\u548c\u5206\uff0c\u7b49\u4ef7\u4e8e %H:%M\n%s    \u81eaUTC \u65f6\u95f4 1970-01-01 00:00:00 \u4ee5\u6765\u6240\u7ecf\u8fc7\u7684\u79d2\u6570\n%S    \u79d2(00-60)\n%t    \u8f93\u51fa\u5236\u8868\u7b26 Tab\n%T    \u65f6\u95f4\uff0c\u7b49\u4e8e%H:%M:%S\n%u    \u661f\u671f\uff0c1 \u4ee3\u8868\u661f\u671f\u4e00\n%U    \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5468\uff0c\u4ee5\u5468\u65e5\u4e3a\u6bcf\u661f\u671f\u7b2c\u4e00\u5929(00-53)\n%V    ISO-8601 \u683c\u5f0f\u89c4\u8303\u4e0b\u7684\u4e00\u5e74\u4e2d\u7b2c\u51e0\u5468\uff0c\u4ee5\u5468\u4e00\u4e3a\u6bcf\u661f\u671f\u7b2c\u4e00\u5929(01-53)\n%w    \u4e00\u661f\u671f\u4e2d\u7684\u7b2c\u51e0\u65e5(0-6)\uff0c0 \u4ee3\u8868\u5468\u4e00\n%W    \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5468\uff0c\u4ee5\u5468\u4e00\u4e3a\u6bcf\u661f\u671f\u7b2c\u4e00\u5929(00-53)\n%x    \u5f53\u524dlocale \u4e0b\u7684\u65e5\u671f\u63cf\u8ff0 (\u5982\uff1a12/31/99)\n%X    \u5f53\u524dlocale \u4e0b\u7684\u65f6\u95f4\u63cf\u8ff0 (\u5982\uff1a23:13:48)\n%y    \u5e74\u4efd\u6700\u540e\u4e24\u4f4d\u6570\u4f4d (00-99)\n%Y    \u5e74\u4efd\n%z +hhmm              \u6570\u5b57\u65f6\u533a(\u4f8b\u5982\uff0c-0400)\n%:z +hh:mm            \u6570\u5b57\u65f6\u533a(\u4f8b\u5982\uff0c-04:00)\n%::z +hh:mm:ss        \u6570\u5b57\u65f6\u533a(\u4f8b\u5982\uff0c-04:00:00)\n%:::z                 \u6570\u5b57\u65f6\u533a\u5e26\u6709\u5fc5\u8981\u7684\u7cbe\u5ea6 (\u4f8b\u5982\uff0c-04\uff0c+05:30)\n%Z                    \u6309\u5b57\u6bcd\u8868\u6392\u5e8f\u7684\u65f6\u533a\u7f29\u5199 (\u4f8b\u5982\uff0cEDT)\n</code></pre> \u4e3e\u4f8bstrftime<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\nint main()\n{\ntime_t t = time(NULL);\nchar buf[100] = {0};\nstruct tm *p = localtime(&amp;t);\nstrftime(buf,100,\"%y-%m-%d %H:%M:%S %p\",p);\nprintf(\"%s\",buf);\nreturn 0;\n}\n</code></pre>"},{"location":"LinuxSystem/File/#_6","title":"\u76ee\u5f55\u64cd\u4f5c","text":""},{"location":"LinuxSystem/File/#_7","title":"\u51fd\u6570","text":"<ol> <li>\u6253\u5f00\u76ee\u5f55\u7684\u51fd\u6570\u662f: <code>opendir</code></li> <li>\u5173\u95ed\u76ee\u5f55\u7684\u51fd\u6570\u662f: <code>closedir</code></li> <li>\u8bfb\u53d6\u76ee\u5f55\u4fe1\u606f\u7684\u51fd\u6570\u662f: <code>readdir</code></li> <li>\u521b\u5efa\u76ee\u5f55(\u6587\u4ef6\u5939)\u7684\u51fd\u6570\u662f: <code>mkdir</code></li> <li>\u5220\u9664\u76ee\u5f55(\u6587\u4ef6\u5939)\u7684\u51fd\u6570\u662f: <code>rmdir</code></li> <li>\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u8def\u5f84\u7684\u51fd\u6570\u662f: <code>getcwd</code></li> <li>\u5207\u6362\u76ee\u5f55\u7684\u51fd\u6570\u662f: <code>chdir</code></li> <li>\u66f4\u6539\u76ee\u5f55\u6587\u4ef6\u7684\u6743\u9650\u7684\u51fd\u6570\u662f: <code>chmod</code></li> <li>\u91cd\u65b0\u5b9a\u4f4d\u5230\u76ee\u5f55\u6587\u4ef6\u7684\u5f00\u5934\u7684\u51fd\u6570\u662f: <code>rewinddir</code></li> <li>\u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u6d41\u7684\u4f4d\u7f6e\u7684\u51fd\u6570\u662f: <code>telldir</code></li> <li>\u8bbe\u7f6e\u8bfb\u53d6\u76ee\u5f55\u6587\u4ef6\u7684\u4f4d\u7f6e\u7684\u51fd\u6570\u662f: <code>seekdir</code></li> </ol> <p>\u51fd\u6570\u5b9a\u4e49</p> opendirclosedirreaddirmkdirrmdirgetcwdchdirchmodrewinddirtelldirseekdir <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n\u51fd\u6570\u539f\u578b:DIR *opendir(const char *name);\n\u5f62\u53c2:name\uff1a\u76ee\u5f55\u7684\u8def\u5f84\n\u8fd4\u56de\u503c:\u6210\u529f\u8fd4\u56de - DIR * -- \u76ee\u5f55\u6d41\u6307\u9488\n\u5931\u8d25\u8fd4\u56de NULL\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\nint closedir(DIR *dirp);\n\u53c2\u6570\uff1aopendir\u7684\u8fd4\u56de\u503c\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n\u51fd\u6570\u539f\u578b\uff1a\nstruct dirent *readdir(DIR *dirp);\n\u53c2\u6570:\n\u6253\u5f00\u76ee\u5f55\u540e\u8fd4\u56de\u7684\u76ee\u5f55\u6d41\u6307\u9488\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de \u8bfb\u53d6\u5230\u7684\u76ee\u5f55\u7684\u5185\u5bb9\n\u8bfb\u53d6\u5230\u76ee\u5f55\u7ed3\u5c3e\uff0c\u4e5f\u4f1a\u8fd4\u56deNULL\n\u5931\u8d25\u8fd4\u56de NULL\nreaddir:\u4e00\u4e2a\u6587\u4ef6\u4e00\u4e2a\u6587\u4ef6\u7684\u8bfb\uff0c\u4e00\u6b21\u8c03\u7528\uff0c\u53ea\u80fd\u8bfb\u53d6\u5230\u4e00\u4e2a\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u8fd4\u56de\u6587\u4ef6\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\nstruct dirent\n{\nlong d_ino;   i\u8282\u70b9\u53f7 off_t d_off;  \u5728\u76ee\u5f55\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\nunsigned short d_reclen; \u6587\u4ef6\u540d\u957f unsigned char d_type; \u6587\u4ef6\u7c7b\u578b char d_name[256]; \u6587\u4ef6\u540d\uff0c\u6700\u957f255\u5b57\u7b26 */\n}\nd_type\u7684\u4f7f\u7528\u8981\u7528\u5b8f\u5b9a\u4e49\uff0c\u4e0d\u80fd\u4f7f\u7528%c\nDT_BLK      This is a block device.\nDT_CHR      This is a character device.\nDT_DIR      This is a directory.\nDT_FIFO     This is a named pipe (FIFO).\nDT_LNK      This is a symbolic link.\nDT_REG      This is a regular file.\nDT_SOCK     This is a UNIX domain socket.\nDT_UNKNOWN  The file type could not be determined.\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n\u51fd\u6570\u539f\u578b\uff1a\nint mkdir(const char *pathname, mode_t mode);  \u53c2\u6570\uff1apathname\uff1a\u6587\u4ef6\u8def\u5f84\nmode\uff1a\u76f4\u63a5\u4f7f\u7528\u6570\u5b57\u5373\u53ef\uff08\u6743\u9650\uff09\n\u771f\u6b63\u7684\u6743\u9650\uff1amode &amp; (~umask)\n\u8fd4\u56de\u503c\uff1a\n\u6210\u529f\u8fd4\u56de0\uff0c\u9519\u8bef\u8fd4\u56de-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b:\nint rmdir(const char *pathname);\n\u53c2\u6570\n\u8981\u5220\u9664\u7684\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\uff0c\u8981\u6c42\u76ee\u5f55\u4e3a\u7a7a\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56de0\uff0c\u9519\u8bef\u8fd4\u56de-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u51fd\u6570\u539f\u578b\uff1a\nchar *getcwd(char *buf, size_t size);\n\u53c2\u6570  buf\uff1a\u83b7\u53d6\u5230\u7684\u8def\u5f84\uff0c\u5b58\u653e\u7684\u4f4d\u7f6e\nsize\uff1abuf\u6700\u5927\u4e3a255\u5b57\u8282\n\u8fd4\u56de\u503c\n\u6210\u529f\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\n\u5931\u8d25\u8fd4\u56deNULL\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6: #include &lt;unistd.h&gt;\n\u529f\u80fd\uff1a\u4fee\u6539\u5f53\u524d\u76ee\u5f55\uff0c\u5373\u5207\u6362\u76ee\u5f55\uff0c\u76f8\u5f53\u4e8ecd\u547d\u4ee4\n\u51fd\u6570\u539f\u578b int chdir(const char *path);\n\u53c2\u6570\uff1a\npath\uff1a\u6587\u4ef6\u8def\u5f84\uff08~\u4e0d\u8bc6\u522b\uff09\n\u8fd4\u56de\u503c\n\u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\n\u539f\u578b\nint chmod(const char *path, mode_t mode);\n\u53c2\u6570\uff1a\npath \uff1a\u6587\u4ef6\u8def\u5f84\nmode\uff1a\u6743\u9650\uff08\u7ed9\u4ec0\u4e48\u5c31\u662f\u4ec0\u4e48\uff09\n\u8fd4\u56de\u503c\n\u6210\u529f\u8fd4\u56de0\u5931\u8d25-1\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6\uff1a\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n\u529f\u80fd\uff1a\u91cd\u65b0\u5b9a\u4f4d\u5230\u76ee\u5f55\u6587\u4ef6\u7684\u5934\u90e8\n\u51fd\u6570\u539f\u578b\uff1avoid rewinddir(DIR *dir);\n\u53c2\u6570\uff1a\u6253\u5f00\u76ee\u5f55\u540e\u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\n\u8fd4\u56de\u503c\n\u6210\u529f\u8fd4\u56de\u6307\u5411dirp\u7684\u6307\u9488dirent\uff0c\u9519\u8bef\u8fd4\u56deNULL\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n\u529f\u80fd\uff1a\u8bbe\u7f6e\u53c2\u6570dir \u76ee\u5f55\u6d41\u76ee\u524d\u7684\u8bfb\u53d6\u4f4d\u7f6e, \u5728\u8c03\u7528readdir()\u65f6\u4fbf\u4ece\u6b64\u65b0\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6. \u53c2\u6570offset \u4ee3\u8868\u8ddd\u79bb\u76ee\u5f55\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\u3002\n\u51fd\u6570\u539f\u578b\uff1a\nvoid seekdir(DIR *dir,off_t offset);\n\u8fd4\u56de\u503c\uff1a\u65e0\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n\u529f\u80fd\uff1a\u53d6\u5f97\u76ee\u5f55\u6d41\u7684\u8bfb\u53d6\u4f4d\u7f6e\n\u51fd\u6570\u539f\u578b\uff1aoff_t telldir(DIR *dir); \u53c2\u6570\uff1a\u6253\u5f00\u76ee\u5f55\u540e\u8fd4\u56de\u7684\u6587\u4ef6\u6307\u9488\n\u8fd4\u56de\u503c\uff1a\u6210\u529f\u8fd4\u56de\u8ddd\u79bb\u76ee\u5f55\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\u8fd4\u56de\u503c\u8fd4\u56de\u4e0b\u4e2a\u8bfb\u53d6\u4f4d\u7f6e, \u6709\u9519\u8bef\u53d1\u751f\u65f6\u8fd4\u56de-1\n</code></pre>"},{"location":"LinuxSystem/File/#_8","title":"\u4e3e\u4f8b","text":"<p>Example</p> \u521d\u8bc6\u518d\u63a2\u56de\u7738\u76f8\u8bc6\u518d\u805a\u76f8\u4f1a\u7ea6\u5b9a \u6253\u5f00/\u5173\u95ed\u76ee\u5f55<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;stdio.h&gt;\nint main(int argc,char *argv[])\n{\nif(argc != 2)\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nDIR *fd = opendir(argv[1]); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL; // readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nprintf(\"%s:%ld\\n\",file-&gt;d_name,file-&gt;d_ino);  }\n}\nclosedir(fd);\n}\n</code></pre> \u5b9e\u73b0ls\u7684\u529f\u80fd<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(int argc,char *argv[])\n{\nchar path[255] = {0};   //\u5b9e\u73b0ls\u7684\u529f\u80fd\nif(argc &lt; 2)\n{\nstrcpy(path,\".\");\n}\nelse if(argc == 2)\n{\nstrcpy(path,argv[1]);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nDIR *fd = opendir(path); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL;// readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nprintf(\"%s:%ld\\n\",file-&gt;d_name,file-&gt;d_ino);  }\n}\nclosedir(fd);\n}\n</code></pre> <p></p> \u67e5\u770b\u6587\u4ef6\u7c7b\u578b<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint main(int argc,char *argv[])\n{\nchar path[255] = {0};   //\u5b9e\u73b0ls\u7684\u529f\u80fd\nif(argc &lt; 2)\n{\nstrcpy(path,\".\");\n}\nelse if(argc == 2)\n{\nstrcpy(path,argv[1]);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nprintf(\"DT_REG\\tDT_DIR\\tDT_LNK\\tDT_FIFO\\tDT_SOCK\\n%d\\t%d\\t%d\\t%d\\t%d\\n\",DT_REG,DT_DIR,DT_LNK,DT_FIFO,DT_SOCK); //\u6839\u636e\u5b8f\u663e\u793a\u7684\u6570\u5b57\u6765\u663e\u793a\u6587\u4ef6\u7c7b\u578b\nDIR *fd = opendir(path); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL;// readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nprintf(\"%s:%d\\n\",file-&gt;d_name,file-&gt;d_type);  }\n}\nclosedir(fd);\n}\n</code></pre> <p></p> \u4f7f\u7528linux\u65b9\u5f0f\u67e5\u770b\u6587\u4ef6\u7c7b\u578b<pre><code>#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nchar Fun(unsigned char num);\nint main(int argc,char *argv[])\n{\nchar path[255] = {0};   //\u5b9e\u73b0ls\u7684\u529f\u80fd\nif(argc &lt; 2)\n{\nstrcpy(path,\".\");\n}\nelse if(argc == 2)\n{\nstrcpy(path,argv[1]);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nprintf(\"DT_REG\\tDT_DIR\\tDT_LNK\\tDT_FIFO\\tDT_SOCK\\n%d\\t%d\\t%d\\t%d\\t%d\\n\",DT_REG,DT_DIR,DT_LNK,DT_FIFO,DT_SOCK);\nDIR *fd = opendir(path); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL;// readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nprintf(\"%s:%c\\n\",file-&gt;d_name,Fun(file-&gt;d_type));  }\n}\nclosedir(fd);\n}\nchar Fun(unsigned char num)//\u5c06\u6570\u5b57\u8f6c\u6362\u6210linux\u4e2d\u5b57\u7b26\u8868\u793a\n{\nif(num == DT_REG)\nreturn '-';\nelse if(num == DT_DIR)\nreturn 'd';\nelse if(num == DT_LNK)\nreturn 'l';\nelse if(num == DT_SOCK)\nreturn 's';\nelse if(num == DT_FIFO)\nreturn 'p';\nelse {\nreturn 0;\n}\n}\n</code></pre> <p></p> \u521b\u5efa\u548c\u5220\u9664\u6587\u4ef6\u5939<pre><code>#include &lt;sys/stat.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\nint main()\n{ //\u521b\u5efa\nint a = mkdir(\"./Test\", 0666);\nif(a == -1 )\n{\nperror(\"mkdir\");\nreturn -1;\n}\n//\u5220\u9664:\u8981\u6c42\u76ee\u5f55\u7684\u8def\u5f84\u4e3a\u7a7a\nrmdir(\"./Test\");\nperror(\"rmdir\");\nreturn 0;\n}\n</code></pre> <p></p> chmod/getcwd/chdir<pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/stat.h&gt;\nint main(int argc, char *argv[])\n{\nchmod(argv[1], 0777);//\u4fee\u6539\u6587\u4ef6\u6743\u9650 \nperror(\"chmod\");\nchar buf[255] = {0};\nchar *p = getcwd(buf, 255);//\u8fd4\u56de\u503c\u548c\u7ed9buf\u5b58\u5165\u7684\u503c\u662f\u76f8\u540c\u7684\nprintf(\"buf: %s\\np: %s\\n\",buf,p);\nchdir(\"..\");//\u5207\u6362\u8def\u5f84,chdir\u540e\u4e0d\u8ba4\u8bc6~ \u4e0d\u80fd\u5207\u6362\u5230~\u4e0b\u7684\u8def\u5f84\np = getcwd(buf,255);\nprintf(\"\u66f4\u6362\u540e\u7684\u8def\u5f84buf: %s\\n\u66f4\u6362\u540e\u7684\u8def\u5f84p: %s\\n\",buf,p);\nchdir(\"/\");//\u5207\u6362\u8def\u5f84\np = getcwd(buf,255);\nprintf(\"\u66f4\u6362\u540e\u7684\u8def\u5f84buf: %s\\n\u66f4\u6362\u540e\u7684\u8def\u5f84p: %s\\n\",buf,p);\nreturn 0;\n}\n</code></pre> <p></p> \u5b9e\u73b0\u67e5\u627e\u6240\u6709.txt\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u52a0\u4e0a\u8def\u5f84<pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;string.h&gt;\nint main(int argc, char *argv[])\n{\nchar path[255] = {0};   //\u5b9e\u73b0ls\u7684\u529f\u80fd\nif(argc &lt; 2)\n{\nstrcpy(path,\".\");\n}\nelse if(argc == 2)\n{\nstrcpy(path,argv[1]);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nDIR *fd = opendir(path); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL;// readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nchar buf[255] = {0};\n//\u5c06readdir\u8bfb\u5230\u7684\u6587\u4ef6\u8d4b\u7ed9file,\u8bfb\u5230\u6587\u4ef6\u672b\u5c3e\u4f1a\u8fd4\u56deNULL\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7while\u6765\u904d\u5386\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nchar *q = file-&gt;d_name;//\u83b7\u53d6\u6587\u4ef6\u540d\nint num = strlen(q);//\u83b7\u53d6\u6587\u4ef6\u540d\u7684\u957f\u5ea6\nint a = strcmp(q+num-4,\".txt\");//\u6bd4\u8f83\u540e4\u4e2a\u5b57\u6bcd\nif(a == 0)\n{\nchar *p = getcwd(buf, 255);//\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u8fd4\u56de\u503c*p\u548cbuf\u5b58\u5165\u7684\u503c\u662f\u76f8\u540c\u7684\nstrcat(p,\"/\");\nchar *t =strcat(p,q); //\u5c06\u6587\u4ef6\u540d\u653e\u5230\u8def\u5f84\u540e\u9762\nprintf(\"%s\\n\",t);\n}  }\n}\nclosedir(fd);\nreturn 0;\n}\n</code></pre> <p></p>"},{"location":"LinuxSystem/File/#_9","title":"\u9879\u76ee","text":"<p>\u63a7\u5236MP3\u6587\u4ef6</p> \u53ea\u5728\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u4f7f\u7528\u5b50\u51fd\u6570\u5b9e\u73b0 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;string.h&gt;\nint main(int argc, char *argv[])\n{\nchar path[255] = {0};   //\u5b9e\u73b0ls\u7684\u529f\u80fd\nif(argc &lt; 2)\n{\nstrcpy(path,\".\");\n}\nelse if(argc == 2)\n{\nstrcpy(path,argv[1]);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn -1;\n}\nDIR *fd = opendir(path); // opendir\u7684\u8fd4\u56de\u503c\u662fDIR *\u7c7b\u578b\u7684\nif(fd == NULL)\n{\nperror(\"\u6253\u5f00\u5931\u8d25\\n\");\nreturn -1;\n}\nstruct dirent *file = NULL;// readdir\u7684\u8fd4\u56de\u503c\u662fstruct dirent *\u7c7b\u578b\u7684\nint count = 0;\nchar buf[255] = {0};\nchar song[100][255] = {0};\nwhile( (file=readdir(fd)) != NULL)\n{\nif(file-&gt;d_name[0] != '.') //\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6\n{\nchar *q = file-&gt;d_name;//\u83b7\u53d6\u6587\u4ef6\u540d\nint num = strlen(q);//\u83b7\u53d6\u6587\u4ef6\u540d\u7684\u957f\u5ea6\nint a = strcmp(q+num-4,\".mp3\");//\u6bd4\u8f83\u540e4\u4e2a\u5b57\u6bcd\nif(a == 0)\n{\nstrcpy(song[count++],q);//\u4e00\u4e2a\u5c0f\u7684\u77e5\u8bc6\u70b9\u5c31\u662f\u4e0d\u80fd\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8be6\u89c1\u4e0b\u65b9note\nchar *p = getcwd(buf, 255);//\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u8fd4\u56de\u503c*p\u548cbuf\u5b58\u5165\u7684\u503c\u662f\u76f8\u540c\u7684\nstrcat(p,\"/\");\nchar *t =strcat(p,q); //\u5c06\u6587\u4ef6\u540d\u653e\u5230\u8def\u5f84\u540e\u9762\nprintf(\"%s\\n\",t);\n}  }\n}\nclosedir(fd);\nchar ch = 0;//\u5b9a\u4e49\u6309\u952e\u53d8\u91cf\nint cur = 0;//\u5b9a\u4e49\u5f53\u524d\u6b4c\u5355\u5728\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\nprintf(\"%s\\n\",song[cur]);//\u5148\u6253\u5370\u5f53\u524d\u6b4c\u5355\nwhile(1)\n{\nprintf(\"w:\u4e0a\u4e00\u9996,s:\u4e0b\u4e00\u9996,q:\u9000\u51fa\\n\");\nscanf(\"%c\",&amp;ch);//\u952e\u76d8\u6536\u5165\ngetchar();//\u5438\u6536\u56de\u8f66\u952e\nif(ch == 'w')//\u4e0a\u4e00\u9996\n{\ncur--;//\u6b4c\u5355\u79fb\u52a8\nif(cur == -1)//\u5224\u65ad\u662f\u4e0d\u662f\u5230\u5934\u90e8\n{\ncur = count-1;//\u5230\u5c3e\u90e8\n}\nprintf(\"%s\\n\",song[cur]);\n}\nelse if(ch == 's')//\u4e0b\u4e00\u9996\n{\ncur++;//\u6b4c\u5355\u79fb\u52a8\nif(cur == count)//\u5224\u65ad\u662f\u4e0d\u662f\u5230\u5c3e\u90e8\n{\ncur = 0;//\u5230\u5934\u90e8\n}\nprintf(\"%s\\n\",song[cur]);\n}\nelse if (ch == 'q')//\u9000\u51fa\n{\nreturn 0;\n}\n}\nreturn 0;\n}\n</code></pre> <ol> <li>\u6700\u96be\u7684\u662f\u5c06\u5b57\u7b26\u4e32\u6570\u7ec4\u4f20\u56de\u4e3b\u51fd\u6570(\u4e0b\u9762\u5199\u6cd5\u4e0d\u80fd\u5c06\u6570\u7ec4\u7684\u5927\u5c0f\u4f20\u56de\uff0c\u9700\u5df2\u77e5\u6570\u7ec4\u5927\u5c0f)</li> </ol> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;dirent.h&gt;\n#include &lt;string.h&gt;\nDIR *openfile(int a,char *p);\nchar *readfile(DIR *fp);\nint Keywords(char *z,int count);\nint main(int argc,char *argv[])\n{\nDIR *fp = openfile(argc,argv[1]); //\u6253\u5f00\u76ee\u5f55\nif(fp == NULL ) //\u5982\u679c\u5931\u8d25\uff0c\u7a0b\u5e8f\u9000\u51fa\n{\nreturn -1;\n}\nchar *z = readfile(fp);//\u8bfb\u53d6\u76ee\u5f55,\u5e76\u8fd4\u56de\u6b4c\u5355\n// for(int a = 0;a &lt; 3;a++)\n// {\n//    printf(\"%s\\n\",z+(a*255));//\u6d4b\u8bd5\n// } \nclosedir(fp);\nint b = Keywords(z,3) ;//\u6309\u952e\u63a7\u5236\nif(b == 1)\n{\nreturn 0;\n}\nreturn 0;\n}\nDIR *openfile(int a , char *p)\n{\nchar path[255] = {0};\nif(a &lt; 2)\n{\nstrcpy(path, \".\");\n}\nelse if(a == 2)\n{\nstrcpy(path,p);\n}\nelse\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn NULL;\n}\nDIR *fd = opendir(path);\nif(fd == NULL)\n{\nperror(\"opendir\");\nreturn NULL;\n}\nprintf(\"opendir\u6253\u5f00\u6210\u529f\\n\");\nreturn fd;\n}\nchar *readfile(DIR *fp)\n{\nstruct dirent *file = NULL;// \u627f\u63a5readdir\u7684\u8fd4\u56de\u503c\nchar buf[255] = {0}; //\u5c06\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u8def\u5f84\u5b58\u50a8\u5230buf\u4e2d \nchar house[600] = {0};//\u4f7f\u7528sprintf \u5b58\u53d6\u6587\u4ef6\u8def\u5f84+'/'+\u6587\u4ef6\u540d,\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\u5fc5\u987b&gt;=\u4e24\u4e2a\u62fc\u63a5\u7684\u6570\u7ec4\u5927\u5c0f\u4e4b\u548c\nstatic char song[100][255] = {0};//\u5c06\u83b7\u53d6\u5f97\u5230\u7684.txt\u6587\u4ef6\u4fdd\u5b58\u5230\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\u91cc\u9762\nint i = 0;\nwhile( (file=readdir(fp)) != NULL ) //\u5c06reddir\u8bfb\u53d6\u5230\u7684\u6587\u4ef6\u540d\u8d4b\u503c\u7ed9file\n{\nif(file-&gt;d_name[0] != '.' &amp;&amp; file-&gt;d_type == DT_REG)//\u4e0d\u663e\u793a.\u9690\u85cf\u6587\u4ef6,\u4e14\u6587\u4ef6\u7c7b\u578b\u662f\u666e\u901a\u6587\u4ef6\n{\nchar *q = file-&gt;d_name;//\u83b7\u53d6\u6587\u4ef6\u540d\nint num = strlen(q);//\u83b7\u53d6\u6587\u4ef6\u540d\u7684\u957f\u5ea6\nif(!strcmp(q+num-4,\".mp3\"))//\u6bd4\u8f83\u540e4\u4e2a\u5b57\u6bcd\n{\nstrcpy(*(song+i),q);//\u5c06.mp3\u6587\u4ef6\u4fdd\u5b58\u5230\u6570\u7ec4\u91cc\u9762\n//char *p = getcwd(buf, 255);//\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u8fd4\u56de\u503c*p\u548cbuf\u5b58\u5165\u7684\u503c\u662f\u76f8\u540c\u7684\n//strcat(p,\"/\");//\u5728\u8def\u5f84\u540e\u9762\u52a0\u4e2a`/`\u4f7f\u52a0\u4e0a\u6587\u4ef6\u540d\u540e\u770b\u7740\u8fde\u8d2f\n//char *t =strcat(p,q); //\u5c06\u6587\u4ef6\u540d\u653e\u5230\u8def\u5f84\u540e\u9762\ngetcwd(buf,255);\nsprintf(house,\"%s/%s\",buf,q);//\u4f7f\u7528sprintf\u8fdb\u884c\u62fc\u63a5\nprintf(\"%s\\n\",house);\ni++;\n}  }\n}\nreturn *song;\n}\nint Keywords(char *z,int count)\n{\nchar ch = 0;//\u5b9a\u4e49\u6309\u952e\u53d8\u91cf\nint cur = 0;//\u5b9a\u4e49\u5f53\u524d\u6b4c\u5355\u5728\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\nprintf(\"\u5f53\u524d\u7684\u6b4c\u662f%s\\n\",z+(cur*255));\nwhile(1)\n{\nprintf(\"w: \u4e0a\u4e00\u9996\\ts: \u4e0b\u4e00\u9996\\tq: \u9000\u51fa\\n\");\nscanf(\"%c\",&amp;ch);//\u952e\u76d8\u6536\u5165\ngetchar();//\u5438\u6536\u56de\u8f66\nif(ch == 'w')//\u4e0a\u4e00\u9996\n{\ncur--;//\u6b4c\u5355\u79fb\u52a8\nif(cur == -1)//\u5224\u65ad\u662f\u4e0d\u662f\u5230\u5934\u90e8\n{\ncur = count-1;//\u5230\u5c3e\u90e8\n}\nprintf(\"%s\\n\",z+(cur*255));\n}\nelse if(ch == 's')//\u4e0b\u4e00\u9996\n{\ncur++;//\u6b4c\u5355\u79fb\u52a8\nif(cur == count)//\u5224\u65ad\u662f\u4e0d\u662f\u5230\u5c3e\u90e8\n{\ncur = 0;//\u5230\u5934\u90e8\n}\nprintf(\"%s\\n\",z+(cur*255));\n}\nelse if (ch == 'q')\n{\nreturn 1;//\u8fd4\u56de\u4e3b\u51fd\u6570\n}  }    }\n</code></pre> <p></p> \u5b57\u7b26\u4e32\u6570\u7ec4\u77e5\u8bc6\u56de\u987e <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u4e32\u88ab\u8868\u793a\u4e3a\u5b57\u7b26\u6570\u7ec4\u3002\u800c\u5b57\u7b26\u6570\u7ec4\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u7ec4\u7c7b\u578b\uff0c\u5b83\u9700\u8981\u7279\u6b8a\u7684\u5904\u7406\u65b9\u5f0f\u3002</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u4e32\u88ab\u8868\u793a\u4e3a\u4ee5\u7a7a\u5b57\u7b26(<code>'\\0'</code>)\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4\u3002\u8fd9\u4e2a\u7a7a\u5b57\u7b26\u8868\u793a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u3002</p> <p>\u5f53\u6211\u4eec\u4f7f\u7528\u8d4b\u503c\u64cd\u4f5c\u7b26(<code>=</code>)\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u76f4\u63a5\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5c06\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5b58\u5730\u5740\u8d4b\u7ed9\u4e86\u76ee\u6807\u5b57\u7b26\u4e32\u3002\u8fd9\u610f\u5473\u7740\u76ee\u6807\u5b57\u7b26\u4e32\u53d8\u91cf\u5c06\u6307\u5411\u4e0e\u6e90\u5b57\u7b26\u4e32\u76f8\u540c\u7684\u5185\u5b58\u5730\u5740\uff0c\u800c\u4e0d\u662f\u590d\u5236\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002</p> <p>\u4f8b\u5982\uff1a <pre><code>char source[] = \"Hello, World!\";\nchar destination[] = source;\n</code></pre></p> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c<code>destination</code>\u5e76\u6ca1\u6709\u62f7\u8d1d<code>source</code>\u7684\u5185\u5bb9\uff0c\u800c\u662f\u5171\u4eab\u4e86\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4fee\u6539\u4e86<code>source</code>\u6570\u7ec4\u7684\u5185\u5bb9\uff0c<code>destination</code>\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u590d\u5236\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5e93\u51fd\u6570<code>strcpy</code>\u6216\u8005\u66f4\u5b89\u5168\u7684<code>strncpy</code>\u51fd\u6570\u6765\u5b9e\u73b0\uff1a</p> <pre><code>#include &lt;string.h&gt;\nchar source[] = \"Hello, World!\";\nchar destination[20];\nstrcpy(destination, source);\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c<code>strcpy</code>\u51fd\u6570\u5c06\u6e90\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u590d\u5236\u5230\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\uff0c\u786e\u4fdd\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u72ec\u7acb\u7684\uff0c\u4e92\u4e0d\u5e72\u6270\u3002</p> <p>\u603b\u7ed3\u8d77\u6765\uff0cC\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09\u9700\u8981\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u8d4b\u503c\u64cd\u4f5c\u7b26\u8fdb\u884c\u590d\u5236\uff0c\u800c\u662f\u9700\u8981\u4f7f\u7528\u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570\u6765\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u590d\u5236\u64cd\u4f5c\u3002</p>"},{"location":"LinuxSystem/File/#_10","title":"\u6587\u4ef6\u5c5e\u6027","text":"<p>\u672a\u5f85\u5b8c\u7eed</p>"},{"location":"LinuxSystem/Gccinfo/","title":"Gcc\u7f16\u8bd1\u5668","text":"<p>gcc [\u9009\u9879] [\u6587\u4ef6]</p> <p>\u2003\u2003\u5e38\u7528\u9009\u9879:</p> <ul> <li>-c\uff1a\u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u7f16\u8bd1\u5668\u5c06\u8f93\u5165\u7684.c \u6587\u4ef6\u7f16\u8bd1\u4e3a.o \u7684\u76ee\u6807\u6587\u4ef6\u3002</li> <li>-o\uff1a&lt;\u8f93\u51fa\u6587\u4ef6\u540d&gt;\u7528\u6765\u6307\u5b9a\u7f16\u8bd1\u7ed3\u675f\u4ee5\u540e\u7684\u8f93\u51fa\u6587\u4ef6\u540d\uff0c\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u7684\u8bdd GCC \u9ed8 \u8ba4\u7f16\u8bd1\u51fa\u6765\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540d\u5b57\u4e3a a.out\u3002</li> <li>-g\uff1a\u6dfb\u52a0\u8c03\u8bd5\u4fe1\u606f\uff0c\u5982\u679c\u8981\u4f7f\u7528\u8c03\u8bd5\u5de5\u5177(\u5982 GDB)\u7684\u8bdd\u5c31\u5fc5\u987b\u52a0\u5165\u6b64\u9009\u9879\uff0c\u6b64\u9009\u9879\u6307\u793a\u7f16 \u8bd1\u7684\u65f6\u5019\u751f\u6210\u8c03\u8bd5\u6240\u9700\u7684\u7b26\u53f7\u4fe1\u606f\u3002</li> <li>-l\uff1a\u6dfb\u52a0\u9759\u6001\u5e93/\u52a8\u6001\u5e93\u7684\u8def\u5f84</li> <li>-I\uff1a\u6dfb\u52a0\u5934\u6587\u4ef6\u8def\u5f84</li> <li>-E\uff1a\u53ea\u8fdb\u884c\u9884\u7f16\u8bd1\uff0c\u4e0d\u505a\u5176\u5b83\u5904\u7406</li> <li>-S\uff1a\u53ea\u7f16\u8bd1\u4e0d\u6c47\u7f16\uff0c\u751f\u6210\u6c47\u7f16\u6e90\u7801</li> <li>-v\uff1a\u6253\u5370\u51fa\u7f16\u8bd1\u5668\u5185\u90e8\u7f16\u8bd1\u5404\u4e2a\u8fc7\u7a0b\u7684\u547d\u4ee4\u884c\u4fe1\u606f\u548c\u7f16\u8bd1\u5668\u7684\u7248\u672c</li> <li>-O\uff1a\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u4f18\u5316\u7f16\u8bd1\uff0c\u5982\u679c\u4f7f\u7528\u6b64\u9009\u9879\u7684\u8bdd\u6574\u4e2a\u6e90\u4ee3\u7801\u5728\u7f16\u8bd1\u3001\u94fe\u63a5\u7684\u7684\u65f6\u5019\u90fd\u4f1a\u8fdb \u884c\u4f18\u5316\uff0c\u8fd9\u6837\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6267\u884c\u6548\u7387\u5c31\u9ad8\u3002</li> <li>-O2\uff1a\u6bd4-O \u66f4\u5e45\u5ea6\u66f4\u5927\u7684\u4f18\u5316\uff0c\u751f\u6210\u7684\u53ef\u6267\u884c\u6548\u7387\u66f4\u9ad8\uff0c\u4f46\u662f\u6574\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u4f1a\u5f88\u6162\u3002</li> <li>-D\uff1a\u7f16\u8bd1\u65f6\u5c06\u5b8f\u5b9a\u4e49\u4f20\u5165\u8fdb\u53bb</li> <li>-Wall\uff1a\u6253\u5f00\u6240\u6709\u7c7b\u578b\u7684\u8b66\u544a\u3002</li> </ul>"},{"location":"LinuxSystem/Gccinfo/#gcc_1","title":"GCC\u7684\u7f16\u8bd1\u8fc7\u7a0b","text":"<p>GCC \u7f16\u8bd1\u5668\u7684\u7f16\u8bd1\u6d41\u7a0b\u662f\uff1a\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u548c\u94fe\u63a5\u3002</p> <ul> <li>\u9884\u5904\u7406\u5c31\u662f\u5c55\u5f00\u6240\u6709\u7684\u5934\u6587\u4ef6\u3001\u66ff\u6362\u7a0b\u5e8f\u4e2d\u7684\u5b8f\u3001\u89e3\u6790\u6761\u4ef6\u7f16\u8bd1\u5e76\u6dfb\u52a0\u5230\u6587\u4ef6\u4e2d\u3002</li> <li>\u7f16\u8bd1\u662f\u5c06\u7ecf\u8fc7\u9884\u7f16\u8bd1\u5904\u7406\u7684\u4ee3\u7801\u7f16\u8bd1\u6210\u6c47\u7f16\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u7a0b\u5e8f\u7f16\u8bd1,\u68c0\u67e5\u4ee3\u7801\u89c4\u8303\u6027\u3001\u8bed\u6cd5\u9519\u8bef\u7b49\uff0c\u5728\u68c0\u67e5\u65e0\u8bef\u540e\u628a\u4ee3\u7801\u7ffb\u8bd1\u6210\u6c47\u7f16\u8bed\u8a00</li> <li>\u6c47\u7f16\u5c31\u662f\u5c06\u6c47\u7f16\u8bed\u8a00\u6587\u4ef6\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u76ee\u6807\u6587\u4ef6\u3002</li> <li>\u94fe\u63a5\u5c31\u662f\u5c06\u6c47\u7f16\u51fa\u6765\u7684\u591a\u4e2a\u4e8c\u8fdb\u5236\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u94fe\u63a5\u7684\u65f6\u5019\u8fd8\u4f1a\u6d89\u53ca\u5230\u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93\u7b49\u95ee\u9898</li> </ul> <p></p>"},{"location":"LinuxSystem/Gccinfo/#_1","title":"\u9884\u5904\u7406","text":"<pre><code>gcc -E main.c #\u53ea\u8fdb\u884c\u9884\u5904\u7406\u64cd\u4f5c\u4e0d\u7701\u6210.i\u6587\u4ef6\ngcc -E main.c -o main.i #-o \u6307\u5b9a\u9884\u5904\u7406\u540e\u751f\u6210\u7684\u6587\u4ef6\u540d \u5373 \u751f\u6210\u4e86main.i\u6587\u4ef6\n</code></pre> <p>main.i \u7684\u5185\u5bb9</p> <p></p>"},{"location":"LinuxSystem/Gccinfo/#_2","title":"\u7f16\u8bd1(\u8f6c\u6c47\u7f16)","text":"<pre><code>gcc -S main.i #\u81ea\u52a8\u751f\u6210\u4e86main.s\ngcc -S main.i -o xxx.s #\u5f53\u7136\u4e5f\u53ef\u4ee5\u751f\u6210\u6307\u5b9a\u540d\u5b57\u7684\u6c47\u7f16\u6587\u4ef6\n</code></pre>"},{"location":"LinuxSystem/Gccinfo/#_3","title":"\u6c47\u7f16","text":"<pre><code>as main.s #\u6ce8\u610f\u8fd9\u6837\u751f\u6210\u7684a.out\u6587\u4ef6\u5e76\u4e0d\u662f\u6211\u4eec\u5e73\u65f6\u89c1\u7684\u53ef\u6267\u884c\u6587\u4ef6a.out \u53ea\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u5e76\u4e0d\u53ef\u6253\u5f00(\u6216\u8005\u8bf4\u6253\u5f00\u4f1a\u62a5\u9519)\nas main.s -o main.o # (1) \n</code></pre> <ol> <li>\u4e00\u822c\u4f7f\u7528-o\u547d\u4ee4 \u751f\u6210<code>.o</code>\u76ee\u6807\u6587\u4ef6 \u8fd9\u662f\u56e0\u4e3a:\u901a\u5e38\uff0c\u4e00\u4e2a\u9ad8\u7ea7\u8bed\u8a00\u7684\u6e90\u6587\u4ef6\u90fd\u53ef\u5bf9\u5e94\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u3002 \u76ee\u6807\u6587\u4ef6\u5728Linux \u4e2d\u9ed8\u8ba4\u540e\u7f00\u4e3a\u201c.o\u201d\uff08\u5982\u201cmain.c\u201d\u7684\u76ee\u6807\u6587\u4ef6\u4e3a\u201cmain.o\u201d\uff09\u3002 </li> </ol>"},{"location":"LinuxSystem/Gccinfo/#_4","title":"\u94fe\u63a5","text":"<pre><code>gcc a.out -o main #\u8fd9\u5c31\u662f\u672a\u4f7f\u7528`-o`\u751f\u6210\u4e86a.out\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6 \ngcc main.o -o main #\u63a8\u8350\u4f7f\u7528\n</code></pre>"},{"location":"LinuxSystem/Gccinfo/#_5","title":"\u4ece\u6e90\u7801\u76f4\u63a5\u5230\u76ee\u6807\u6587\u4ef6","text":"<pre><code>gcc -c main.c #\u76f4\u63a5\u751f\u6210mian.o\u6587\u4ef6(\u672a\u94fe\u63a5\uff0c\u914d\u5408\u9759\u6001\u5e93/\u52a8\u6001\u5e93)\ngcc -c main.c -o xxx.o #\u751f\u6210\u6307\u5b9a\u540d\u5b57\u7684`.o`\u76ee\u6807\u6587\u4ef6\ngcc -c main.c add.c print.c #\u540c\u65f6\u7f16\u8bd1\u591a\u4e2a.c\u6587\u4ef6\u751f\u6210\u5bf9\u5e94\u540d\u5b57\u7684`.o`\u6587\u4ef6\ngcc -c *.c #\u5c06\u6240\u6709\u540c\u4e00\u6587\u4ef6\u5939\u4e0b\u7684.c\u6587\u4ef6\u751f\u6210\u5bf9\u5e94\u540d\u5b57\u7684`.o`\u76ee\u6807\u6587\u4ef6\n</code></pre>"},{"location":"LinuxSystem/Gccinfo/#_6","title":"\u4ece\u6e90\u7801\u76f4\u63a5\u5230\u53ef\u6267\u884c\u6587\u4ef6","text":"<pre><code>gcc main.c #\u9ed8\u8ba4\u751f\u6210\u53eba.out\u7684\u53ef\u6267\u884c\u6587\u4ef6 \ngcc main.c -o xxx.o #\u751f\u6210\u6307\u5b9a\u540d\u5b57\u7684\u53ef\u6267\u884c\u6587\u4ef6\ngcc *.c -o xxx.o -I(\u5934\u6587\u4ef6\u8def\u5f84) #\n</code></pre>"},{"location":"LinuxSystem/Gccinfo/#_7","title":"\u9759\u6001\u5e93","text":"<p>\u5f62\u6210\u9759\u6001\u5e93\u7684\u6b65\u9aa4:</p> <ol> <li>: \u5c06\u529f\u80fd\u51fd\u6570.c \u5206\u6210\u751f\u6210 .o\u7684\u76ee\u6807\u6587\u4ef6 (\u9664mian.c\u6587\u4ef6)</li> <li>: \u5c06\u529f\u80fd\u51fd\u6570.o \u6587\u4ef6\u6253\u5305\u751f\u6210\u5e93</li> </ol> <p>ar -rc lib\u5e93\u540d.a *.o</p> <ol> <li>: \u9a8c\u8bc1\u5e93 </li> </ol> <p>gcc main.c -o -l \u5e93\u540d -L \u5e93\u7684\u8def\u5f84 -I \u5934\u6587\u4ef6\u8def\u5f84</p> <ol> <li>: \u7279\u70b9\uff1a\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4</li> </ol> <p></p>"},{"location":"LinuxSystem/Gccinfo/#_8","title":"\u52a8\u6001\u5e93","text":"<p>\u5f62\u6210\u52a8\u6001\u5e93\u7684\u6b65\u9aa4:</p> <ol> <li>: \u5c06\u529f\u80fd\u51fd\u6570.c \u5206\u522b\u751f\u6210 .o\u76ee\u6807\u6587\u4ef6</li> <li>: \u5c06\u529f\u80fd\u51fd\u6570.o \u6253\u5305\u6210\u5e93</li> </ol> <p>gcc shared -fpic -o lib\u5e93\u540d.so *.o</p> <ol> <li>: \u5c06\u52a8\u6001\u5e93\u79fb\u52a8\u5230<code>usr/lib</code></li> </ol> <p>sudo cp ./lib\u5e93\u540d.so /usr/lib</p> <ol> <li>: \u9a8c\u8bc1\u5e93</li> </ol> <p>gcc main.c -o main -l \u5e93\u540d</p> <ol> <li>: \u7279\u70b9\uff1a\u4ee5\u65f6\u95f4\u6362\u7a7a\u95f4</li> </ol> <p></p> <p></p>"},{"location":"LinuxSystem/Gccinfo/#gdb","title":"gdb\u8c03\u8bd5","text":"<p>gdb\u7684\u4f5c\u7528\u662f: \u8c03\u8bd5\u4ee3\u7801</p> <p>\u8c03\u8bd5\u4ee3\u7801\u7684\u6b65\u9aa4:</p> <ul> <li>\u6d4b\u8bd5\uff1a\u53d1\u73b0\u95ee\u9898</li> <li>\u56fa\u5316\uff1a\u8ba9bug\u91cd\u73b0</li> <li>\u5b9a\u4f4d\uff1a\u627e\u5230bug\u6240\u5728\u4f4d\u7f6e</li> <li>\u4fee\u6539\uff1a\u4fee\u6539\u95ee\u9898</li> <li>\u9a8c\u8bc1\uff1aprintf\u6253\u5370/\u5229\u7528 <code>__FILE__,__LINE__,__FUNCTION__</code>\u8fdb\u884c\u7a0b\u5e8f\u8c03\u8bd5 \u6ce8\u610f__\u662f\u8fde\u7eed\u7684\u4e24\u4e2a/gdb\u8c03\u8bd5</li> </ul>"},{"location":"LinuxSystem/Gccinfo/#gdb_1","title":"gdb\u7684\u4f7f\u7528","text":"\u8c03\u8bd5\u4ee3\u78011<pre><code>#include &lt;stdio.h&gt;\nint main(int argc, char *argv[])\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\n</code></pre> <p>\u7b2c\u4e00\u6b65: \u751f\u6210\u5e26\u6709\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> <p>\u4f7f\u7528 gcc -g xxx.c #\u751f\u6210\u5e26\u6709\u8c03\u8bd5\u4fe1\u606f\u7684\u53ef\u6267\u884c\u6587\u4ef6</p> <p></p> <p>\u7b2c\u4e8c\u6b65: \u8fdb\u5165\u8c03\u8bd5\u754c\u9762</p> <p></p>"},{"location":"LinuxSystem/Gccinfo/#gdb_2","title":"\u5173\u4e8egdb\u7684\u4f7f\u7528\u547d\u4ee4","text":"<ul> <li> <p><code>quit</code>/<code>q</code> \u9000\u51fagdb\u8c03\u8bd5</p> </li> <li> <p><code>list</code>/<code>l</code> \u6253\u5370\u6e90\u7801\u5230\u7ec8\u7aef\uff0c\u4e00\u6b21\u6700\u591a10\u884c \u5728<code>l</code>\u540e\u53ef\u52a0\u884c\u6570 \u5c06\u5176\u5468\u56f4\u7684\u4ee3\u7801\u663e\u793a\u51fa\u6765</p> </li> </ul> <p></p> <ul> <li><code>run</code>/<code>r</code> \u8fd0\u884c</li> </ul> <p></p> <ul> <li><code>break + \u884c\u53f7</code>/<code>b + \u884c\u53f7</code> \u8bbe\u7f6e\u65ad\u70b9</li> </ul> <p></p> <ul> <li> <p><code>cont</code>/<code>c</code> \u7ee7\u7eed\u8fd0\u884c</p> </li> <li> <p><code>print + \u53d8\u91cf\u540d</code>/<code>p + \u53d8\u91cf\u540d</code> \u6253\u5370\u53d8\u91cf\u7684\u503c</p> </li> </ul> <p></p> <ul> <li><code>info + b</code>/<code>i + b</code> \u6253\u5370\u65ad\u70b9</li> </ul> <p></p> <ul> <li> <p><code>enable + \u65ad\u70b9\u7684\u7f16\u53f7</code> \u4f7f\u80fd\u8be5\u65ad\u70b9</p> </li> <li> <p><code>disable + \u65ad\u70b9\u7684\u7f16\u53f7</code> \u5931\u80fd\u8be5\u65ad\u70b9</p> </li> </ul> <p></p> <ul> <li><code>clear + \u884c\u53f7</code> /<code>delete + \u65ad\u70b9\u7684\u7f16\u53f7</code> \u5220\u9664\u65ad\u70b9</li> </ul> <p></p>"},{"location":"LinuxSystem/Gccinfo/#_9","title":"\u542f\u52a8\u5355\u6b65\u8c03\u8bd5","text":"<ul> <li> <p>\u542f\u52a8\u5355\u6b65\u8c03\u8bd5: start</p> </li> <li> <p>n: \u6309\u6b65\u8c03\u5f0f -- \u9047\u5230\u51fd\u6570\u4e0d\u8fdb\u5165\u51fd\u6570\u5185\u90e8</p> </li> <li> <p>s: \u6309\u6b65\u8c03\u5f0f -- \u9047\u5230\u51fd\u6570\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8</p> </li> <li> <p>finish: -- \u7ed3\u675f\u5f53\u524d\u51fd\u6570\uff0c\u8fd4\u56de\u5230\u8c03\u7528\u70b9</p> </li> </ul> <p></p> \u8c03\u8bd5\u4ee3\u78012<pre><code>#include &lt;stdio.h&gt;\nint Func(void);\nint main(int argc, char *argv[])\n{\nint sum = Func();\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\nint Func(void)\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nreturn sum;\n}\n</code></pre> <p></p>"},{"location":"LinuxSystem/Gccinfo/#gdb_3","title":"\u5e26\u6709\u4e3b\u51fd\u6570\u4f20\u53c2\u7684gdb\u8c03\u8bd5","text":"<p>gdb -args ./\u6267\u884c\u6587\u4ef6+\u53c2\u65701+\u53c2\u65702</p> \u8c03\u8bd5\u4ee3\u78013<pre><code>#include &lt;stdio.h&gt;\nint Func(void);\nint main(int argc, char *argv[])\n{\nfor(int i = 0;i &lt; argc;i++)\n{\nprintf(\"%s\\n\",argv[i]);\n}\nint sum = Func();\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\nint Func(void)\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nreturn sum;\n}\n</code></pre> <p></p> <p>\u672a\u5f85\u5b8c\u5e8f...</p>"},{"location":"LinuxSystem/Internet/","title":"\u7f51\u7edc","text":""},{"location":"LinuxSystem/Lintroduct/","title":"Linuxconfig","text":""},{"location":"LinuxSystem/Makefile/","title":"Makefile","text":""},{"location":"LinuxSystem/Makefile/#makefile_1","title":"\u4ec0\u4e48\u662fMakefile","text":"<p>\u6211\u60f3\u8bf4\uff0c\u5728\u5b66\u4e60\u7f16\u7a0b\u521d\u9636\u6bb5\u6211\u4eec\u4e60\u60ef\u6027\u4f7f\u7528GCC/G++\u547d\u4ee4\u6765\u5e2e\u52a9\u6211\u4eec\u7f16\u8bd1\u8c03\u8bd5\u4ee3\u7801\uff0c\u53ef\u662f\u5f53\u8fdb\u884c\u7cfb\u7edf\u6027\u7f16\u7a0b\u7684\u65f6\u5019\uff0c \u7f16\u8bd1\u548c\u8c03\u8bd5\u5f97\u590d\u6742\u8d77\u6765\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u8bb8\u8bb8\u591a\u591a\u7684\u6587\u4ef6\uff0c\u90a3\u4e48\u547d\u4ee4\u53ef\u80fd\u662f\u4e00\u5927\u884c\u5e76\u4e14\u53ef\u80fd\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u90a3\u4e9b\u9700\u8981\u7f16\u8bd1\uff0c \u90a3\u4e9b\u662f\u521a\u521a\u4fee\u6539\u8fc7\uff0c\u53ea\u9700\u8981\u518d\u6b21\u5bf9\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u4e0d\u662f\u5c06\u6240\u6709\u7684\u6587\u4ef6\u518d\u6b21\u8fdb\u884c\u7f16\u8bd1\uff0c\u90a3\u4e48\u6211\u4eec\u6b64\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u5230<code>Makefile</code></p>"},{"location":"LinuxSystem/Makefile/#makefile_2","title":"Makefile\u7684\u4f7f\u7528\u89c4\u5219","text":"<pre><code>target ... : prerequisites ...\n    commend\n</code></pre> GUN\u4e2d\u6587\u624b\u518c-Make\u89c4\u5219 <p>target: \u89c4\u5219\u7684\u76ee\u6807\u3002\u901a\u5e38\u662f \u6700\u540e\u9700\u8981\u751f\u6210\u7684\u6587\u4ef6\u540d \u6216\u8005 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684\u800c\u5fc5\u9700 \u7684 \u4e2d\u95f4\u8fc7\u7a0b\u6587\u4ef6\u540d ,\u53ef\u4ee5\u662f.o\u6587\u4ef6\u3001\u4e5f\u53ef\u4ee5\u662f\u6700\u540e\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u6587\u4ef6\u540d\u7b49\u3002\u53e6\u5916\uff0c\u76ee \u6807\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2amake\u6267\u884c\u7684\u52a8\u4f5c\u7684\u540d\u79f0\uff0c\u5982\u76ee\u6807\u201cclean\u201d\uff0c\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u76ee\u6807\u662f\u201c\u4f2a\u76ee\u6807\u201d\u3002</p> <p>prerequisites: \u89c4\u5219\u7684\u4f9d\u8d56\u3002\u751f\u6210\u89c4\u5219\u76ee\u6807\u6240\u9700\u8981\u7684\u6587\u4ef6\u540d\u5217\u8868\u3002\u901a\u5e38\u4e00\u4e2a\u76ee\u6807\u4f9d \u8d56\u4e8e\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u3002</p> <p>command: \u89c4\u5219\u7684\u547d\u4ee4\u884c\u3002\u662f\u89c4\u5219\u6240\u8981\u6267\u884c\u7684\u52a8\u4f5c\uff08\u4efb\u610f\u7684 shell \u547d\u4ee4\u6216\u8005\u662f\u53ef\u5728 shell \u4e0b\u6267\u884c\u7684\u7a0b\u5e8f\uff09\u3002\u5b83\u9650\u5b9a\u4e86 make \u6267\u884c\u8fd9\u6761\u89c4\u5219\u65f6\u6240\u9700\u8981\u7684\u52a8\u4f5c\u3002</p> <p>\u4e00\u4e2a\u89c4\u5219\u53ef\u4ee5\u6709\u591a\u4e2a\u547d\u4ee4\u884c\uff0c\u6bcf\u4e00\u6761\u547d\u4ee4\u5360\u4e00\u884c\u3002\u6ce8\u610f\uff1a\u6bcf\u4e00\u4e2a\u547d\u4ee4\u884c\u5fc5\u987b\u4ee5<code>Tab</code> \u5b57\u7b26\u5f00\u59cb\uff0c<code>Tab</code>\u5b57\u7b26\u544a\u8bc9 make \u6b64\u884c\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u3002make \u6309\u7167\u547d\u4ee4\u5b8c\u6210\u76f8\u5e94\u7684\u52a8\u4f5c\u3002 \u8fd9\u4e5f\u662f\u4e66\u5199 Makefile \u4e2d\u5bb9\u6613\u4ea7\u751f\uff0c\u800c\u4e14\u6bd4\u8f83\u9690\u853d\u7684\u9519\u8bef\u3002</p> <p>\u547d\u4ee4\u5c31\u662f\u5728\u4efb\u4f55\u4e00\u4e2a\u76ee\u6807\u7684\u4f9d\u8d56\u6587\u4ef6\u53d1\u751f\u53d8\u5316\u540e\u91cd\u5efa\u76ee\u6807\u7684\u52a8\u4f5c\u63cf\u8ff0\u3002\u4e00\u4e2a\u76ee\u6807\u53ef \u4ee5\u6ca1\u6709\u4f9d\u8d56\u800c\u53ea\u6709\u52a8\u4f5c\uff08\u6307\u5b9a\u7684\u547d\u4ee4\uff09\u3002\u6bd4\u5982 Makefile \u4e2d\u7684\u76ee\u6807\u201cclean\u201d\uff0c\u6b64\u76ee\u6807\u6ca1\u6709 \u4f9d\u8d56\uff0c\u53ea\u6709\u547d\u4ee4\u3002\u5b83\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u7528\u6765\u5220\u9664 make \u8fc7\u7a0b\u4ea7\u751f\u7684\u4e2d\u95f4\u6587\u4ef6\uff08\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c\uff09\u3002</p> <p>\u5728 Makefile \u4e2d\u201c\u89c4\u5219\u201d\u5c31\u662f\u63cf\u8ff0\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u3001\u5982\u4f55\u91cd\u5efa\u89c4\u5219\u7684\u76ee\u6807\u6587\u4ef6\uff0c\u901a\u5e38 \u89c4\u5219\u4e2d\u5305\u62ec\u4e86\u76ee\u6807\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u76ee\u6807\u7684\u4f9d\u8d56\u6587\u4ef6\uff09\u548c\u91cd\u5efa\u76ee\u6807\u7684\u547d\u4ee4\u3002make \u6267\u884c\u91cd\u5efa \u76ee\u6807\u7684\u547d\u4ee4\uff0c\u6765\u521b\u5efa\u6216\u8005\u91cd\u5efa\u89c4\u5219\u7684\u76ee\u6807\uff08\u6b64\u76ee\u6807\u6587\u4ef6\u4e5f\u53ef\u4ee5\u662f\u89e6\u53d1\u8fd9\u4e2a\u89c4\u5219\u7684\u4e0a\u4e00\u4e2a \u89c4\u5219\u4e2d\u7684\u4f9d\u8d56\u6587\u4ef6\uff09\u3002\u89c4\u5219\u5305\u542b\u4e86\u6587\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u548c\u66f4\u65b0\u6b64\u89c4\u5219\u76ee\u6807\u6240\u9700\u8981\u7684\u547d\u4ee4\u3002 \u4e00\u4e2a Makefile \u6587\u4ef6\u4e2d\u901a\u5e38\u8fd8\u5305\u542b\u4e86\u9664\u89c4\u5219\u4ee5\u5916\u7684\u5f88\u591a\u4e1c\u897f\u3002\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Makefile  \u53ef\u80fd\u53ea\u5305\u542b\u89c4\u5219\u3002\u89c4\u5219\u5728\u6709\u4e9b Makefile \u4e2d\u53ef\u80fd\u770b\u8d77\u6765\u975e\u5e38\u590d\u6742\uff0c\u4f46\u662f\u65e0\u8bba\u89c4\u5219\u7684\u4e66\u5199\u662f \u591a\u4e48\u7684\u590d\u6742\uff0c\u5b83\u90fd\u7b26\u5408\u89c4\u5219\u7684\u57fa\u672c\u683c\u5f0f\u3002make \u7a0b\u5e8f\u6839\u636e\u89c4\u5219\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u51b3\u5b9a\u662f\u5426\u6267\u884c \u89c4\u5219\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u7684\u8fc7\u7a0b\u6211\u4eec\u79f0\u4e4b\u4e3a\u6267\u884c\u89c4\u5219\u3002</p> Tip <p>target \u5c31\u662f\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff0c\u53ef\u4ee5\u662f Object File\uff0c\u4e5f\u53ef\u4ee5\u662f\u6267\u884c\u6587\u4ef6\u3002 \u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u6807\u7b7e\uff08Label\uff09prerequisites \u5c31\u662f\uff0c\u8981\u751f\u6210\u90a3\u4e2a target \u6240\u9700\u8981\u7684\u6587\u4ef6\u6216\u662f\u76ee\u6807\u3002 command \u4e5f\u5c31\u662f make \u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\u3002\uff08\u4efb\u610f\u7684 Shell \u547d\u4ee4\uff09</p>"},{"location":"LinuxSystem/Makefile/#_1","title":"\u4e3e\u4f8b","text":"<p>\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5728\u91cc\u9762\u5efa\u7acb\u4e00\u4e2aMakefile\u7684\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4fdd\u5b58\u540e\u5728\u7ec8\u7aef\u8f93\u5165<code>make debug</code></p> \u6700\u7b80\u5355\u7684\u4f8b\u5b50<pre><code>debug :\necho hello world\n# (1)\n</code></pre> <ol> <li>echo\u524d\u9762\u7a7a\u4f4d\u5fc5\u987b\u4f7f\u7528<code>Tab</code>\u5426\u5219Makefile\u6587\u4ef6\u4f1a\u62a5\u9519,\u4e0d\u60f3\u5728\u7ec8\u7aef\u663e\u793aecho\uff0c\u53ef\u5728\u524d\u9762\u52a0\u4e0a<code>@</code>\uff0c<code>#</code>\u8fd9\u662fmakefile\u7684\u6ce8\u91ca\u7b26</li> </ol> <p></p> <p>\u793a\u4f8b1</p> cmakefile <pre><code>#include &lt;stdio.h&gt;\nint Func(void);\nint main(int argc, char *argv[])\n{\nfor(int i = 0;i &lt; argc;i++)\n{\nprintf(\"%s\\n\",argv[i]);\n}\nint sum = Func();\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\nint Func(void)\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nreturn sum;\n}\n</code></pre> <pre><code>main :main.c\ngcc main.c -o main\n</code></pre> <p></p> <p>\u793a\u4f8b\u4e8c</p> main.cFun.cmakefile <pre><code>#include &lt;stdio.h&gt;\nextern int Func(void);\nint main(int argc, char *argv[])\n{\nfor(int i = 0;i &lt; argc;i++)\n{\nprintf(\"%s\\n\",argv[i]);\n}\nint sum = Func();\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt; int Func(void)\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nreturn sum;\n}\n</code></pre> <pre><code>main :main.c Fun.c\ngcc main.c Fun.c -o main\n</code></pre> <p></p> <p>\u793a\u4f8b\u4e09</p> main.cFun.cmakefile <pre><code>#include &lt;stdio.h&gt;\nextern int Func(void);\nint main(int argc, char *argv[])\n{\nfor(int i = 0;i &lt; argc;i++)\n{\nprintf(\"%s\\n\",argv[i]);\n}\nint sum = Func();\nprintf(\"sum = %d\\n\",sum);\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt; int Func(void)\n{\nint i = 0,sum = 0;\nfor(i = 0;i &lt; 10;i++)\n{\nsum += i;\n}\nreturn sum;\n}\n</code></pre> <pre><code>main:main.o Fun.o\ngcc main.o Fun.o -o main\nmain.o:main.c\ngcc -c main.c -o main.o\nFun.o:Fun.c\ngcc -c Fun.c -o Fun.o\n</code></pre> <p></p>"},{"location":"LinuxSystem/Makefile/#make","title":"Make\u7684\u5de5\u4f5c\u6d41","text":"GNU\u4e2d\u6587\u624b\u518c-Make\u5982\u4f55\u5de5\u4f5c <p>\u9ed8\u8ba4\u7684\u60c5\u51b5\u4e0b\uff0cmake\u6267\u884c\u7684\u662fMakefile\u4e2d\u7684\u7b2c\u4e00\u4e2a\u89c4\u5219\uff0c\u6b64\u89c4\u5219\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u79f0 \u4e4b\u4e3a\u201c\u6700\u7ec8\u76ee\u7684\u201d\u6216\u8005\u201c\u7ec8\u6781\u76ee\u6807\u201d\uff0c\u5c31\u662f\u4e00\u4e2aMakefile\u6700\u7ec8\u9700\u8981\u66f4\u65b0\u6216\u8005\u521b\u5efa\u7684\u76ee\u6807\u3002</p> <p>\u5f53\u5728 shell \u63d0\u793a\u7b26\u4e0b\u8f93\u5165<code>make</code>\u547d\u4ee4\u4ee5\u540e\u3002make \u8bfb\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 Makefile \u6587 \u4ef6\uff0c\u5e76\u5c06 Makefile \u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\u4f5c\u4e3a\u5176\u6267\u884c\u7684\u201c\u7ec8\u6781\u76ee\u6807\u201d\uff0c\u5f00\u59cb\u5904\u7406\u7b2c\u4e00\u4e2a\u89c4 \u5219\uff08\u7ec8\u6781\u76ee\u6807\u6240\u5728\u7684\u89c4\u5219\uff09</p> <p>\u5728\u4e0a\u9762 \u793a\u4f8b\u4e09 \u4e2d\uff0c\u7b2c\u4e00\u4e2a\u89c4\u5219\u5c31\u662f\u76ee\u6807\u201cmain\u201d\u6240\u5728\u7684\u89c4\u5219\u3002 \u89c4\u5219\u63cf\u8ff0\u4e86\u201cmain\u201d\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5b9a\u4e49\u4e86\u94fe\u63a5.o \u6587\u4ef6\u751f\u6210\u76ee\u6807\u201cmain\u201d\u7684\u547d\u4ee4\uff1b</p> <p>make\u5728\u6267\u884c\u8fd9\u4e2a\u89c4\u5219\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u4e4b\u524d\uff0c\u9996\u5148\u5904\u7406\u76ee\u6807\u201cmain\u201d\u7684\u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6\uff08\u4f8b\u5b50\u4e2d \u7684\u90a3\u4e9b.o \u6587\u4ef6\uff09\u7684\u66f4\u65b0\u89c4\u5219\uff08\u4ee5\u8fd9\u4e9b.o \u6587\u4ef6\u4e3a\u76ee\u6807\u7684\u89c4\u5219\uff09</p> .o\u6587\u4ef6\u7684\u5904\u7406\u89c4\u5219 <p>\u5bf9\u8fd9\u4e9b.o \u6587\u4ef6\u4e3a\u76ee\u6807\u7684\u89c4\u5219\u5904\u7406\u6709\u4e0b\u5217\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u76ee\u6807.o \u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u4f7f\u7528\u5176\u63cf\u8ff0\u89c4\u5219\u521b\u5efa\u5b83\uff1b</p> </li> <li> <p>\u76ee\u6807.o \u6587\u4ef6\u5b58\u5728\uff0c\u76ee\u6807.o \u6587\u4ef6\u6240\u4f9d\u8d56\u7684.c \u6e90\u6587\u4ef6\u3001.h \u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6bd4\u76ee\u6807.o \u6587\u4ef6\u201c\u66f4\u65b0\u201d\uff08\u5728\u4e0a\u4e00\u6b21 make \u4e4b\u540e\u88ab\u4fee\u6539\uff09\u3002\u5219\u6839\u636e\u89c4\u5219\u91cd\u65b0\u7f16\u8bd1\u751f\u6210\u5b83\uff1b</p> </li> <li> <p>\u76ee\u6807.o \u6587\u4ef6\u5b58\u5728\uff0c\u76ee\u6807.o \u6587\u4ef6\u6bd4\u5b83\u7684\u4efb\u4f55\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\uff08\u7684.c \u6e90\u6587\u4ef6\u3001.h \u6587\u4ef6\uff09 \u201c\u66f4\u65b0\u201d\uff08\u5b83\u7684\u4f9d\u8d56\u6587\u4ef6\u5728\u4e0a\u4e00\u6b21 make \u4e4b\u540e\u6ca1\u6709\u88ab\u4fee\u6539\uff09\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002</p> </li> </ol> \u76ee\u6807\u6587\u4ef6\u7684\u5904\u7406\u89c4\u5219 <p>make \u7a0b\u5e8f\u5c06\u5904\u7406\u7ec8\u6781\u76ee\u6807\u201cmain\u201d\u6240\u5728\u7684\u89c4\u5219\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u76ee\u6807\u6587\u4ef6\u201cmain\u201d\u4e0d\u5b58\u5728\uff0c\u5219\u6267\u884c\u89c4\u5219\u4ee5\u521b\u5efa\u76ee\u6807\u201cmain\u201d\u3002</p> </li> <li> <p>\u76ee\u6807\u6587\u4ef6\u201cmain\u201d\u5b58\u5728\uff0c\u5176\u4f9d\u8d56\u6587\u4ef6\u4e2d\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u6bd4\u5b83\u201c\u66f4\u65b0\u201d\uff0c\u5219\u6839 \u636e\u89c4\u5219\u91cd\u65b0\u94fe\u63a5\u751f\u6210\u201cmain\u201d\u3002</p> </li> <li> <p>\u76ee\u6807\u6587\u4ef6\u201cmain\u201d\u5b58\u5728\uff0c\u5b83\u6bd4\u5b83\u7684\u4efb\u4f55\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\u90fd\u201c\u66f4\u65b0\u201d\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\u3002</p> </li> </ol> <p>** \u5728 Makefile \u4e2d\u4e00\u4e2a\u89c4\u5219\u7684\u76ee\u6807\u5982\u679c\u4e0d\u662f\u201c\u7ec8\u6781\u76ee\u6807\u201d\u6240\u4f9d\u8d56\u7684\uff08\u6216\u8005 \u201c\u7ec8\u6781\u76ee\u6807\u201d\u7684\u4f9d\u8d56\u6587\u4ef6\u6240\u4f9d\u8d56\u7684\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u89c4\u5219\u5c06\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u9664\u975e\u660e\u786e\u6307\u5b9a\u6267\u884c \u8fd9\u4e2a\u89c4\u5219\uff08\u53ef\u4ee5\u901a\u8fc7 make \u7684\u547d\u4ee4\u884c\u6307\u5b9a\u91cd\u5efa\u76ee\u6807\uff0c\u90a3\u4e48\u8fd9\u4e2a\u76ee\u6807\u6240\u5728\u7684\u89c4\u5219\u5c31\u4f1a\u88ab\u6267 \u884c\uff0c\u4f8b\u5982 make clean\uff09**</p> GUN\u4e2d\u6587\u624b\u518c-Make\u68c0\u6d4b <p>\u66f4\u65b0\uff08\u6216\u8005\u521b\u5efa\uff09\u7ec8\u6781\u76ee\u6807\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u89c4\u5219\u6267\u884c\u51fa\u73b0\u9519\u8bef make \u5c31\u7acb \u5373\u62a5\u9519\u5e76\u9000\u51fa\u3002\u6574\u4e2a\u8fc7\u7a0b make \u53ea\u662f\u8d1f\u8d23\u6267\u884c\u89c4\u5219\uff0c\u800c\u5bf9\u5177\u4f53\u89c4\u5219\u6240\u63cf\u8ff0\u7684\u4f9d\u8d56\u5173\u7cfb\u7684 \u6b63\u786e\u6027\u3001\u89c4\u5219\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u7684\u6b63\u786e\u6027\u4e0d\u505a\u4efb\u4f55\u5224\u65ad\u3002\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u89c4\u5219\u7684\u4f9d\u8d56\u5173\u7cfb\u662f\u5426 \u6b63\u786e\u3001\u63cf\u8ff0\u91cd\u5efa\u76ee\u6807\u7684\u89c4\u5219\u547d\u4ee4\u884c\u662f\u5426\u6b63\u786e\uff0cmake \u4e0d\u505a\u4efb\u4f55\u9519\u8bef\u68c0\u67e5\u3002</p> <p>\u56e0\u6b64\uff0c\u9700\u8981\u6b63\u786e\u7684\u7f16\u8bd1\u4e00\u4e2a\u5de5\u7a0b\u3002\u9700\u8981\u5728\u63d0\u4f9b\u7ed9 make \u7a0b\u5e8f\u7684 Makefile \u4e2d\u6765\u4fdd\u8bc1 \u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u6b63\u786e\u6027\u3001\u548c\u6267\u884c\u547d\u4ee4\u7684\u6b63\u786e\u6027\u3002</p>"},{"location":"LinuxSystem/Makefile/#clean","title":"\u4f2a\u76ee\u6807","text":"<p>\u4e3a\u4f55\u8981\u4f7f\u7528\u4f2a\u76ee\u6807\uff1f\u6839\u636e\u6211\u76ee\u524d\u7684\u638c\u63e1\u77e5\u8bc6\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u4f7f\u7528make\u751f\u6210\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u4e0d\u60f3\u8981\u4e2d\u95f4\u7684\u751f\u6210\u6587\u4ef6 \u53ea\u60f3\u8981\u6700\u7ec8\u7684\u6587\u4ef6\uff0c\u6216\u8005\u8bf4\u53ea\u60f3\u8981\u6e90\u7801\uff0c\u6b64\u65f6\u8981\u662f\u591f\u901a\u8fc7\u4e3b\u89c2\u610f\u8bc6\u53bb\u6e05\u7a7a\u8fd9\u4e9b\u591a\u597d\u5440\uff0c\u8fd9\u6837\u4f2a\u76ee\u6807\u5c31\u8bde\u751f\u4e86\u3002</p> <p>Makefile\u4e2d\u628a\u90a3\u4e9b\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u53ea\u6709\u6267\u884c\u52a8\u4f5c\u7684\u76ee\u6807\u79f0\u4e3a \u4f2a\u76ee\u6807\uff08phony targets\uff09</p> Gun\u4e2d\u6587\u624b\u518c-Make clean <p>\u76ee\u6807\u201cclean\u201d\u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u4ec5\u4ec5\u4ee3\u8868\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\u7684\u6807\u8bc6\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e0d \u9700\u8981\u6267\u884c\u8fd9\u4e2a\u89c4\u5219\u6240\u5b9a\u4e49\u7684\u52a8\u4f5c\uff0c\u56e0\u6b64\u76ee\u6807\u201cclean\u201d\u6ca1\u6709\u51fa\u73b0\u5728\u5176\u5b83\u4efb\u4f55\u89c4\u5219\u7684\u4f9d\u8d56 \u5217\u8868\u4e2d\u3002\u56e0\u6b64\u5728\u6267\u884cmake\u65f6\uff0c\u5b83\u6240\u6307\u5b9a\u7684\u52a8\u4f5c\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u9664\u975e\u5728\u6267\u884cmake\u65f6\u660e\u786e\u5730 \u6307\u5b9a\u5b83\u3002\u800c\u4e14\u76ee\u6807\u201cclean\u201d\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u6587\u4ef6\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u76ee\u7684\uff0c\u5c31\u662f\u901a\u8fc7\u8fd9\u4e2a\u76ee\u6807 \u540d\u6765\u6267\u884c\u5b83\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\u3002</p> <p>\u9700\u8981\u6267\u884c\u201cclean\u201d\u76ee\u6807\u6240\u5b9a\u4e49\u7684\u547d\u4ee4\uff0c\u53ef\u5728shell\u4e0b\u8f93\u5165\uff1a<code>make clean</code></p> <ul> <li> <p>\"\u4f2a\u76ee\u6807\" \u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ea\u662f\u4e00\u4e2a\u6807\u7b7e\u3002\u6211\u4eec\u8981\u663e\u793a\u5730\u6307\u660e\u8fd9\u4e2a \"\u76ee\u6807\" \u624d\u80fd\u8ba9\u5176\u751f\u6548</p> </li> <li> <p>\"\u4f2a\u76ee\u6807\" \u7684\u53d6\u540d\u4e0d\u80fd\u548c\u6587\u4ef6\u540d\u91cd\u540d\uff0c\u5426\u5219\u4e0d\u4f1a\u6267\u884c\u547d\u4ee4</p> </li> <li> <p>\u4e3a\u4e86\u907f\u514d\u548c\u6587\u4ef6\u91cd\u540d\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0 <code>.PHONY</code> \u6765\u663e\u793a\u5730\u6307\u660e\u4e00\u4e2a\u76ee\u6807\u662f\u201c\u4f2a\u76ee\u6807\u201d\uff0c \u5411 make \u8bf4\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u76ee\u6807\u5c31\u662f \"\u4f2a\u76ee\u6807\"</p> </li> <li> <p>\u53ea\u8981\u6709\u8fd9\u4e2a\u58f0\u660e\uff0c\u4e0d\u7ba1\u662f\u5426\u6709\u201cclean\u201d\u6587\u4ef6\uff0c\u8981\u8fd0\u884c \"clean\" \u8fd9\u4e2a\u76ee\u6807\uff0c\u53ea\u6709 <code>make clean</code> \u8fd9\u4e2a\u547d\u4ee4</p> </li> </ul> <pre><code>.PHONY : clean\n# (1)\nclean :\nrm -rf temp\n</code></pre> <ol> <li>:\u5982\u679ctemp\u6587\u4ef6\u548cclean\u6587\u4ef6\u90fd\u5b58\u5728\uff0c\u4e14\u6ca1\u6709.PHONY\u547d\u4ee4\u7684\u8bdd\uff0c\u90a3\u4e48clean\u547d\u4ee4\u5c31\u8fdb\u884c\u4e0d\u4e86\u4e86</li> </ol> <p>\u7531\u4e8e\u6211\u81ea\u5df1\u7b2c\u4e00\u6b21\u5c1d\u8bd5Makefile\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u521b\u5efa\u4e00\u4e2atemp\u7684\u6587\u4ef6\u5939\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u7136\u540e\u5728\u7ec8\u7aef\u6572\u5165 <code>make clean</code>\u795e\u5947\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\uff0c\u6309\u7167\u5b66\u4e60\u7684\u6587\u6863\u6765\u8bf4\u672c\u6765temp\u6587\u4ef6\u4e0d\u5e94\u8be5\u88ab\u5220\u9664\uff0c\u4f46\u7ed3\u679c\u662f\u88ab\u5220\u9664\u4e86\uff0c \u4e8e\u662f\u6211\u9677\u5165\u4e86\u6c89\u601dwhy\uff1f\u4e8e\u662f\u4e4e\uff0c\u6211\u5c31\u67e5\u8d44\u6599\uff0c\u627e\u5230\u4e86\uff0c\u539f\u6765\u662fMakefile\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6709\u4e0b\u6709\u6587\u4ef6\u540d\u4e3a clean\u7684\u6587\u4ef6\u65f6\uff0c\u4e0d\u6dfb\u52a0<code>.PHONY :clean</code>\u624d\u4f1a\u62a5\u9519\uff0c\u6267\u884c<code>make clean</code>\u65e0\u6548\u3002\u540c\u65f6\u7406\u89e3\u4e86<code>.PHONY :XX</code>\u5c31\u662f \u7528\u6765\u4fdd\u8bc1\u76ee\u5f55\u4e0b\u6709\u6587\u4ef6\u540d\u4e3a<code>XX</code>\u7684\u6587\u4ef6\u65f6\uff0c\u4e5f\u80fd\u6b63\u5e38\u6267\u884c<code>make XX</code></p> <p></p>"},{"location":"LinuxSystem/Makefile/#makefile_3","title":"Makefile\u58f0\u660e\u53d8\u91cf","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u58f0\u660e\u53d8\u91cf\uff0c\u5176\u5b9e\u5982\u679c\u4f60\u5b66\u8fc7(\u4f60\u80af\u5b9a\u5b66\u8fc7\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e0d\u7136\u4f60\u4e3a\u4ec0\u4e48\u6765\u5b66\u4e60Makefile)C\u8bed\u8a00\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u8bbe\u5b9a\u53d8\u91cf\uff0c \u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u4f7f\u7528\u8fd9\u4e2a\u6570\u503c\u7684\u65f6\u5019\uff0c\u90fd\u8981\u5f15\u7528\u8fd9\u4e2a\u6570\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u4fee\u6539\u5b83\uff0c\u9700\u8981\u5728\u539f\u6587\u4e2d\u5168\u90e8\u90fd\u4fee\u6539\uff0c\u8fd9\u6837\u592a\u9ebb\u70e6\u4e86\uff0c \u6240\u4ee5\u8981\u5f15\u5165\u53d8\u91cf\uff0cMakefile\u540c\u7406</p> <p>\u58f0\u660e\u65f6\u53d8\u91cf\u7684\u540d\u5b57\u53ef\u968f\u610f\u5b9a\uff0c\u4f46\u6700\u597d\u77e5\u540d\u5176\u610f\uff1a</p> <pre><code>objects = main.o Func.o\n# (1)\nmain : $(objects) \ngcc $(objects) -o main\n# (2)\nclean : rm main $(objects)\n</code></pre> <ol> <li>objects\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u7528<code>=</code>\u6765\u8d4b\u503c</li> <li>\u4f7f\u7528<code>$(objects)</code>\u6765\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf</li> </ol> <p>\u5bf9\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u662f\u201cN.o\u201d\uff0c\u501a\u8d56\u6587\u4ef6\u662f\u201cN.c\u201d\u7684\u89c4\u5219\uff0c\u5b8c\u5168\u53ef\u4ee5\u7701\u7565\u5176\u89c4\u5219\u7684\u547d\u4ee4\u884c\uff0c\u800c\u7531make\u81ea\u8eab\u51b3\u5b9a\u4f7f\u7528\u9ed8\u8ba4\u547d\u4ee4\u3002\u6b64\u9ed8\u8ba4\u89c4\u5219\u79f0\u4e3amake\u7684\u9690\u542b\u89c4\u5219</p> <p></p> \u8d4b\u503c\u7b26\u7684\u591a\u79cd\u4f7f\u7528 <p><code>:=</code>:\u5176\u4f5c\u7528\u662f\u4e0d\u4f1a\u4f7f\u7528\u540e\u9762\u7684\u53d8\u91cf\uff0c\u53ea\u80fd\u4f7f\u7528\u524d\u9762\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684</p> <p><code>?=</code>:\u8fd9\u4e2a\u5f88\u50cf\u662f#ifndef\uff0c\u4f8b\u5982<code>name?=sakura</code>\u610f\u601d\u662f\u5982\u679c\u53d8\u91cf\u524d\u9762\u6ca1\u6709\u88ab\u5b9a\u4e49\uff0c\u90a3\u4e48\u53d8\u91cf\u5c31\u662fsakura, \u5982\u679c\u524d\u9762\u5df2\u7ecf\u8d4b\u503c\u8fc7\uff0c\u90a3\u4e48\u5c31\u4f7f\u7528\u524d\u9762\u7684\u8d4b\u503c</p> <p><code>+=</code>:</p>"},{"location":"LinuxSystem/Makefile/#_2","title":"\u81ea\u52a8\u53d8\u91cf","text":"<ul> <li>%  :\u901a\u914d\u7b26</li> <li>$@ :\u76ee\u6807\u6587\u4ef6(\u5f53\u524d\u6240\u5728\u884c\u7684\u6700\u8fd1\u7684\u76ee\u6807\u6587\u4ef6)</li> <li>$^ :\u6240\u6709\u7684\u4f9d\u8d56</li> <li>$&lt; :\u6240\u6709\u4f9d\u8d56\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4f9d\u8d56(\u4e0d\u7ecf\u5e38\u4f7f\u7528)\u3002\u5982\u679c\u4f9d\u8d56\u662f\u4ee5\u6a21\u5f0f(\u5373<code>%</code>)\u5b9a\u4e49\u7684,\u5373\u548c<code>%</code>\u4ee5\u53ca <code>$@</code>\u914d\u5408,\u90a3\u4e48<code>$&lt;</code>\u5c06\u662f\u7b26\u5408\u6a21\u5f0f\u7684\u4e00\u7cfb\u5217\u7684\u6587\u4ef6\u96c6,     \u7528\u76f8\u5e94\u7684\u4f9d\u8d56\uff0c\u751f\u6210\u76f8\u5e94\u7684\u76ee\u6807 (\u5f88\u667a\u80fd\u4f1a\u81ea\u52a8\u4e00\u4e2a\u4e00\u4e2a\u7684\u9009\u53d6)</li> </ul>"},{"location":"LinuxSystem/Makefile/#makefile_4","title":"Makefile\u7684\u5e94\u7528","text":""},{"location":"LinuxSystem/Makefile/#_3","title":"\u9759\u6001\u5e93","text":"<pre><code>vpath %.c src\n#(1)\nmain: main.c libstatic.a\ngcc main.c -o main -l static -L ./ -I ./include\n\nlibstatic.a: Add.o Change.o Fin.o Menu.o Struc.o delt.o insert.o print.o rank1.o\nar -rc $@ $^\n#(2)\n%.o: %.c\ngcc -c $&lt; -o $@ -I ./include\n#(3)\nclean:\nrm *.o main libstatic.a\n</code></pre> <ol> <li>vpath \u7684\u65f6\u5019\uff0c\u641c\u7d22\u7684\u6761\u4ef6\u4e2d\u53ef\u4ee5\u5305\u542b\u6a21\u5f0f\u5b57\u7b26 %\uff0c\u8fd9\u4e2a\u7b26\u53f7\u7684\u4f5c\u7528\u662f\u5339\u914d\u4e00\u4e2a\u6216\u8005\u662f\u591a\u4e2a\u5b57\u7b26\uff0c    \u4f8b\u5982 %.c\u8868\u793a\u641c\u7d22\u8def\u5f84\u4e0b\u6240\u6709\u7684 .c \u7ed3\u5c3e\u7684\u6587\u4ef6\u3002\u5982\u679c\u641c\u7d22\u6761\u4ef6\u4e2d\u6ca1\u6709\u5305\u542b % \uff0c\u90a3\u4e48\u641c\u7d22\u7684\u6587\u4ef6\u5c31\u662f\u5177\u4f53\u7684\u6587\u4ef6\u540d\u79f0\u3002</li> <li><code>ar -rc %@ $^</code> \u7b49\u540c\u4e8e <code>ar -rc libstatic.a *.o</code></li> <li><code>gcc -c $&lt; -o $@ -I ./include</code> \u7b49\u540c\u4e8e <code>gcc -c \u6bcf\u4e00\u4e2a.c\u6587\u4ef6 -o \u6bcf\u4e00\u4e2a.o\u6587\u4ef6 -I ./include</code> \u4f9d\u6b21\u6267\u884c</li> </ol>"},{"location":"LinuxSystem/Makefile/#_4","title":"\u52a8\u6001\u5e93","text":"<p>\u672a\u5f85\u5b8c\u7eed</p> <ul> <li> 1234</li> </ul> <p>The HTML specification is maintained by the W3C.</p>"},{"location":"LinuxSystem/Multi-process/","title":"\u8fdb\u7a0b","text":""},{"location":"LinuxSystem/Multi-process/#_2","title":"\u7406\u8bba","text":""},{"location":"LinuxSystem/Multi-process/#_3","title":"\u8fdb\u7a0b\u7684\u5b9a\u4e49","text":"<p>\u5b9a\u4e49:</p> <p>\u8fdb\u7a0b\u662f\u4e00\u4e2a\u8fd0\u884c\u7740\u7684\u7a0b\u5e8f\uff0c\u5b83\u5305\u542b\u4e86\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u7684\u5404\u4e2a\u8d44\u6e90\uff0c\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e5f\u662f \u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d\u3002\u8fdb\u7a0b\u662f\u4e00\u4e2a\u7a0b\u5e8f\u4e00\u6b21\u6267\u884c\u7684\u8fc7\u7a0b\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u52a8\u6001\u6267\u884c\u7684\u57fa\u672c\u5355\u5143\u3002</p> <p>\u6982\u5ff5:</p> <ol> <li> <p>\u8fdb\u7a0b\u662f\u4e00\u4e2a\u5b9e\u4f53,\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4</p> <ul> <li>\u4ee3\u7801\u533a: \u6587\u672c\u533a\u57df\u5b58\u50a8\u5904\u7406\u5668\u6267\u884c\u7684\u4ee3\u7801</li> <li>\u6570\u636e\u533a: \u5b58\u50a8\u53d8\u91cf\u548c\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58</li> <li>\u5806\u6808\u533a: \u5b58\u50a8\u6d3b\u52a8\u8fdb\u7a0b\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u548c\u5c40\u90e8\u53d8\u91cf\u53ca\u51fd\u6570\u8c03\u7528\u65f6\u7684\u8fd4\u56de\u503c</li> </ul> </li> <li> <p>\u8fdb\u7a0b\u662f\u4e00\u4e2a\u201c\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u201d\uff0c\u5b83\u548c\u7a0b\u5e8f\u6709\u672c\u8d28\u533a\u522b</p> <ul> <li>\u7a0b\u5e8f\u662f\u9759\u6001\u7684\uff0c\u5b83\u662f\u4e00\u4e9b\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\u6307\u4ee4\u7684\u6709\u5e8f\u96c6\u5408\uff08\u6587\u4ef6\uff09</li> <li>\u8fdb\u7a0b\u662f\u4e00\u4e2a\u52a8\u6001\u7684\u6982\u5ff5\uff0c\u5b83\u662f\u4e00\u4e2a\u8fd0\u884c\u7740\u7684\u7a0b\u5e8f\uff0c\u5305\u542b\u4e86\u8fdb\u7a0b\u7684\u52a8\u6001\u521b\u5efa\u3001\u8c03\u5ea6\u548c\u6d88\u4ea1\u7684\u8fc7\u7a0b\uff0c\u662f Linux \u7684\u57fa\u672c\u8c03\u5ea6\u5355\u4f4d</li> </ul> </li> </ol>"},{"location":"LinuxSystem/Multi-process/#_4","title":"\u8fdb\u7a0b\u72b6\u6001","text":"<p>\u8fdb\u7a0b\u662f\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u6839\u636e\u5b83\u7684\u751f\u547d\u5468\u671f\u53ef\u4ee5\u5212\u5206\u6210 3 \u79cd\u72b6\u6001\u3002</p> <ul> <li>\u6267\u884c\u6001\uff1a\u8be5\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\uff0c\u5373\u8fdb\u7a0b\u6b63\u5728\u5360\u7528 CPU\uff0c \u4efb\u4f55\u65f6\u5019\u90fd\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u3002</li> <li>\u5c31\u7eea\u6001\uff1a\u8fdb\u7a0b\u5df2\u7ecf\u5177\u5907\u6267\u884c\u7684\u4e00\u5207\u6761\u4ef6\uff0c\u6b63\u5728\u7b49\u5f85\u5206\u914d CPU \u7684\u5904\u7406\u65f6\u95f4\u7247\u3002</li> <li>\u7b49\u5f85\u6001\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u67d0\u4e9b\u4e8b\u4ef6\uff0c\u5f53\u524d\u4e0d\u80fd\u5206\u914d\u65f6\u95f4\u7247\uff0c\u8fdb\u7a0b\u4e0d\u80fd\u4f7f\u7528 CPU\uff0c\u82e5\u7b49\u5f85\u4e8b\u4ef6\u53d1\u751f\uff08\u7b49\u5f85\u7684\u8d44\u6e90\u5206\u914d\u5230\uff09\u5219\u53ef\u5c06\u5176\u5524\u9192\uff0c\u53d8\u6210\u5c31\u7eea\u6001\u3002</li> </ul> <pre><code>graph LR\n  A[\u6267\u884c\u6001] --&gt;|CPU\u8c03\u5ea6| B[\u5c31\u7eea\u6001];\n  B --&gt;|\u65f6\u95f4\u7247\u7528\u5b8c\u4e86| A;\n  B --&gt; |\u7b49\u5f85\u67d0\u4e8b\u4ef6\u53d1\u751f| C[\u7b49\u5f85\u6001];\n  C --&gt; |\u4e8b\u4ef6\u53d1\u751f| A;</code></pre> <p>\u6ce8\u610f: \u7b49\u5f85\u6001\u4e0d\u80fd\u76f4\u63a5\u8f6c\u6362\u6210\u6267\u884c\u6001</p>"},{"location":"LinuxSystem/Multi-process/#_5","title":"\u8fdb\u7a0b\u63cf\u8ff0","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u578b ID,\u505a\u4e3a\u8fdb\u7a0b\u7684\u6807\u8bc6\u53f7(pid)\u3002</p> Note <p>\u8fdb\u7a0b\u6807\u8bc6\u662f\u65e0\u6cd5\u5728\u7528\u6237\u5c42\u4fee\u6539\u7684\uff08\u7528\u6237\u7a0b\u5e8f\u4e0d\u80fd\u81ea\u5df1\u6765\u4fee\u6539\u81ea\u5df1\u7684 pid,\u8fd9\u662f\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u7684\uff09\u3002</p> <p>\u8fdb\u7a0b\u9664\u4e86\u81ea\u8eab\u7684 ID \u5916,\u8fd8\u6709\u7236\u8fdb\u7a0bID(ppid)\u30010\u8fdb\u7a0b\u3001init\u8fdb\u7a0b(1\u8fdb\u7a0b)\u3001\u5b64\u513f\u8fdb\u7a0b\u3001\u50f5\u5c38\u8fdb\u7a0b,\u8fd9\u4e9b\u7279\u6b8a\u8fdb\u7a0b\u3002</p> <p>\u6240\u6709\u8fdb\u7a0b\u7684\u7956\u5148\u8fdb\u7a0b\u662f\u540c\u4e00\u4e2a\u8fdb\u7a0b,\u5b83\u53eb\u505a init \u8fdb\u7a0b,ID \u4e3a 1\uff0cinit \u8fdb\u7a0b\u662f\u5185\u6838\u542f\u52a8\u540e\u7684\u8fd0\u884c\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u3002 init \u8fdb\u7a0b\u8d1f\u8d23\u5f15\u5bfc\u7cfb\u7edf\u3001\u542f\u52a8\u5b88\u62a4\uff08\u540e\u53f0\uff09\u8fdb\u7a0b\u5e76\u4e14\u8fd0\u884c\u5fc5\u8981\u7684\u7a0b\u5e8f\u3002\u5b83\u4e0d\u662f\u7cfb\u7edf\u8fdb\u7a0b\uff0c\u4f46\u5b83\u4ee5\u7cfb\u7edf\u7684\u8d85\u7ea7\u7528\u6237\u7279\u6743\u8fd0\u884c</p> <p>\u7279\u6b8a\u8fdb\u7a0b </p> <p></p> <p>ps \u547d\u4ee4: \u7c7b\u4f3c\u4efb\u52a1\u7ba1\u7406\u5668\uff0c ps \u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fdb\u7a0b\u7684\u4e00\u6b21\u6027\u7684\u67e5\u770b\uff0c\u5b83\u6240\u63d0\u4f9b\u7684\u67e5\u770b\u7ed3\u679c\u5e76\u4e0d\u52a8\u6001\u8fde\u7eed\u7684</p> <p>kill \u547d\u4ee4: \u901a\u5e38\u4e0e ps \u547d\u4ee4\u4e00\u8d77\u4f7f\u7528\uff0c\u5e38\u7528\u7684\u5f62\u5f0f\uff1a kill -9 \u8fdb\u7a0b ID\uff08\u8868\u793a\u5411\u6307\u5b9a\u7684\u8fdb\u7a0b ID \u53d1\u9001 SIGKILL \u7684 \u4fe1\u53f7\u3002\u5176\u4e2d-9 \u8868\u793a\u5f3a\u5236\u7ec8\u6b62\uff0c\u53ef\u4ee5\u7701\u7565\u3002\u5b83\u662f\u4fe1\u53f7\u4ee3\u7801\uff0c\u53ef\u4ee5\u5229\u7528 kill \u2013l \u5217\u51fa\u6240\u6709\u7684\u4fe1\u53f7\u3002\uff09 \u53e6\u5916\uff0c pkill \u8fdb\u7a0b\u540d\u5b57(\u53ef\u4ee5\u76f4\u63a5\u6740\u6b7b\u6307\u5b9a\u8fdb\u7a0b\u540d\u7684\u8fdb\u7a0b)</p> <p>top \u547d\u4ee4: \u548c ps \u76f8\u6bd4\uff0c top \u662f\u52a8\u6001\u76d1\u89c6\u7cfb\u7edf\u4efb\u52a1\u7684\u5de5\u5177\uff0c top \u8f93\u51fa\u7684\u7ed3\u679c\u662f\u8fde\u7eed\u7684\uff0c\u6bd4\u5982#top</p> <p>jobs \u547d\u4ee4: \u89c2\u5bdf\u540e\u53f0\u8fdb\u7a0b\u3002</p> <p></p> <p></p>"},{"location":"LinuxSystem/Multi-process/#_6","title":"\u8fdb\u7a0b\u7684\u8d44\u6e90\u5206\u914d","text":"<ul> <li> <p>\u4ee3\u7801\u533a: \u52a0\u8f7d\u7684\u662f\u53ef\u6267\u884c\u6587\u4ef6\u4ee3\u7801\u6bb5\uff0c \u53ef\u6267\u884c\u4ee3\u7801\uff0c\u5728\u6709\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u65f6\uff0c\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u5173\u6ce8\u8fd9\u4e00\u4f4d\u7f6e\u3002 \u4ee3\u7801\u533a\u901a\u5e38\u662f\u53ea\u8bfb\u7684\uff0c\u53ea\u8bfb\u7684\u539f\u56e0\u662f\u9632\u6b62\u7a0b\u5e8f\u610f\u5916\u5730\u4fee\u6539\u4e86\u5b83\u7684\u6307\u4ee4\u3002</p> </li> <li> <p>\u6570\u636e\u6bb5: </p> <ul> <li>\u5df2\u521d\u59cb\u5316\u6570\u636e\u533a: \u8be5\u533a\u5305\u542b\u5728\u7a0b\u5e8f\u4e2d\u660e\u786e\u88ab\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u548c\u5e38\u91cf\u6570\u636e\u3002\u5b58\u50a8\u4e8e\u8be5\u533a\u7684\u6570\u636e\u7684\u751f\u5b58\u5468\u671f\u4e3a\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u3002</li> <li>\u672a\u521d\u59cb\u5316\u6570\u636e\u533a\uff08 BSS \u6bb5\uff09\uff0c \u5b58\u5165\u7684\u662f\u5168\u5c40\u672a\u521d\u59cb\u5316\u53d8\u91cf\u548c\u672a\u521d\u59cb\u5316\u9759\u6001\u53d8\u91cf\u8fd8\u6709\u521d\u59cb\u503c\u4e3a 0 \u7684\u53d8\u91cf\u3002 BSS \u6bb5\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u5f00\u59cb\u4e4b\u524d\u7684\u503c\u90fd\u4e3a 0\uff0c\u5728\u7a0b\u5e8f\u9000\u51fa\u65f6\u624d\u91ca\u653e\u3002</li> </ul> </li> <li> <p>\u6808\u533a: \u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\u3001\u8fd4\u56de\u503c\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\u3002\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5b9e\u65f6\u52a0\u8f7d\u548c \u91ca\u653e\uff0c\u56e0\u6b64\uff0c\u5c40\u90e8\u53d8\u91cf\u7684\u751f\u5b58\u5468\u671f\u4e3a\u7533\u8bf7\u5230\u91ca\u653e\u8be5\u6bb5\u6808\u7a7a\u95f4\u7684\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u5806\u533a: \u7528\u4e8e\u52a8\u6001\u5185\u5b58\u5206\u914d\u3002 \u5806\u533a\u4e00\u822c\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u548c\u91ca\u653e\uff0c\u6211\u4eec\u4f7f\u7528 malloc \u7533\u8bf7\u7684\u5185\u5b58\u90fd\u5c5e\u4e8e\u5806\u533a\u5185\u5b58\u3002</p> </li> </ul>"},{"location":"LinuxSystem/Multi-process/#_7","title":"\u8fdb\u7a0b\u7684\u7279\u70b9","text":"<p>\u52a8\u6001\u6027: \u8fdb\u7a0b\u7684\u5b9e\u8d28\u662f\u7a0b\u5e8f\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b\uff0c\u8fdb\u7a0b\u662f\u52a8\u6001\u4ea7\u751f\uff0c\u52a8\u6001\u6d88\u4ea1\u7684</p> <p>\u5e76\u53d1\u6027: \u4efb\u4f55\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u540c\u5176\u4ed6\u8fdb\u7a0b\u4e00\u8d77\u5e76\u53d1\u6267\u884c</p> <p>\u72ec\u7acb\u6027: \u8fdb\u7a0b\u662f\u4e00\u4e2a\u80fd\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u540c\u65f6\u4e5f\u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u548c\u8c03\u5ea6\u7684\u72ec\u7acb\u5355\u4f4d;</p> <p>\u5f02\u6b65\u6027: \u7531\u4e8e\u8fdb\u7a0b\u95f4\u7684\u76f8\u4e92\u5236\u7ea6\uff0c\u4f7f\u8fdb\u7a0b\u5177\u6709\u6267\u884c\u7684\u95f4\u65ad\u6027\uff0c\u5373\u8fdb\u7a0b\u6309\u5404\u81ea\u72ec\u7acb\u7684\u3001\u4e0d\u53ef\u9884\u77e5\u7684\u901f\u5ea6\u5411\u524d\u63a8\u8fdb</p>"},{"location":"LinuxSystem/Multi-process/#_8","title":"\u8fdb\u7a0b\u7684\u5173\u7cfb","text":"<p>\u7236\u5b50\u5173\u7cfb -- \u8be5\u8fdb\u7a0b\u7531\u8c01\u4ea7\u751f\uff0c\u8c01\u5c31\u662f\u8be5\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\uff0c\u4ee3\u7801\u4e2d\u5f80\u5f80\u662f\u7236\u8fdb\u7a0b\u7ba1\u7406\u5b50\u8fdb\u7a0b\uff08\u7236\u8fdb\u7a0b\u77e5\u9053\u5b50\u8fdb\u7a0b\u7684PID\u53f7\uff09</p>"},{"location":"LinuxSystem/Multi-process/#teshu","title":"\u7279\u6b8a\u8fdb\u7a0b","text":"<ol> <li>\u7236\u5b50\u8fdb\u7a0b: \u7236\u8fdb\u7a0b\u5e2e\u52a9\u5b50\u8fdb\u7a0b\u6536\u5c38\uff0c\u56de\u6536\u8d44\u6e90\uff0c\u63a7\u5236\u5b50\u8fdb\u7a0b\uff0c\u6740\u6b7b\u5b50\u8fdb\u7a0b\uff0c\u6682\u505c\u5b50\u8fdb\u7a0b\uff0c\u6062\u590d\u5b50\u8fdb\u7a0b\u8fd0\u884c</li> <li>0\u53f7\u8fdb\u7a0b: \u7cfb\u7edf\u542f\u52a8\u7684\u5f15\u5bfc\u8fdb\u7a0b</li> <li>1\u53f7\u8fdb\u7a0b/\u7956\u5148\u8fdb\u7a0b: \u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u8d77\u6765\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f</li> <li>\u5b64\u513f\u8fdb\u7a0b: \u7236\u8fdb\u7a0b\u7ed3\u675f\uff0c\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c \u5b64\u513f\u8fdb\u7a0b\u4f1a\u88ab\uff1a/sbin/upstart --user \u56de\u6536\u63a5\u7ba1</li> <li>\u50f5\u5c38\u8fdb\u7a0b: \u5b50\u8fdb\u7a0b\u5df2\u7ecf\u6d88\u4ea1\uff0c\u4f46\u662f\u7236\u8fdb\u7a0b\u4e3a\u5176\u6536\u5c38\uff0c\u6ca1\u6709\u505a\u6e05\u7406\u5de5\u4f5c,\u653e\u5f03\u51e0\u4e4e\u6240\u6709\u8d44\u6e90\uff0c\u4f46\u662f\u552f\u72ec\u5360\u7528pid\u53f7</li> </ol>"},{"location":"LinuxSystem/Multi-process/#_9","title":"\u5b9e\u8df5","text":""},{"location":"LinuxSystem/Multi-process/#_10","title":"\u51fd\u6570","text":"<ol> <li>\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684PID\u51fd\u6570: <code>getpid</code> </li> <li>\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\u7684PID\u51fd\u6570: <code>getppid</code></li> <li>\u521b\u5efa\u8fdb\u7a0b\u7684\u51fd\u6570: <code>fork</code> <code>vfork</code></li> <li>\u7ed3\u675f\u8fdb\u7a0b\u7684\u65b9\u6cd5:<ol> <li>\u4fe1\u53f7:<ul> <li>\u4f7f\u7528 Ctrl+C \u7ed3\u675f\u8fdb\u7a0b</li> <li>\u4f7f\u7528 kill -9 pid</li> </ul> </li> <li>\u5728\u7a0b\u5e8f\u4e2d\u7528\u51fd\u6570\u7ed3\u675f<ul> <li>\u4e3b\u51fd\u6570 -- <code>return 0</code></li> <li><code>exit(0)</code> -- \u7ed3\u675f\u8fdb\u7a0b</li> <li><code>_exit(0)</code> --\u7ed3\u675f\u8fdb\u7a0b</li> </ul> </li> </ol> </li> <li>\u8fdb\u7a0b\u7b49\u5f85\u51fd\u6570:<ul> <li><code>wait</code> -- \u963b\u585e\u7b49\u5f85\u4efb\u610f\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u4e3a\u5176\u6536\u5c38</li> <li><code>waitpid</code> --  \u66f4\u52a0\u5f3a\u5927\uff0c\u53ef\u4e0d\u963b\u585e\u7b49\u5f85\u6307\u5b9a\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u4e3a\u5176\u6536\u5c38</li> </ul> </li> <li><code>system</code>\u51fd\u6570:\u63a5\u53d7\u4e00\u4e2a\u547d\u4ee4\u5b57\u7b26\u4e32\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8fd0\u884c\u8be5\u547d\u4ee4</li> <li><code>exec</code>\u51fd\u6570\u65cf:\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5728\u8fdb\u7a0b\u4e2d\u542f\u52a8\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6267\u884c,\u4f1a\u8986\u76d6\u539f\u6709\u8fdb\u7a0b\uff0c\u4e00\u822c\u548cvfork\u8fde\u7528,\u5305\u542b6\u4e2a\u51fd\u6570<ul> <li>int execl(const char path, const char arg, ...);</li> <li>int execlp(const char file, const char arg, ...);</li> <li>int execle(const char path, const char arg, ..., char * const envp[]);</li> <li>int execv(const char path, char const argv[]);</li> <li>int execvp(const char file, char const argv[]);</li> <li>int execve(const char path, char const argv[], char *const envp[]);</li> </ul> </li> <li>\u83b7\u53d6\u67d0\u4e00\u8def\u5f84\u4e0b\u7684\u67d0\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u51fd\u6570:<code>glob</code></li> <li>\u6e05\u7406\u51fd\u6570:\u4e0d\u7528\u81ea\u5df1\u8c03\u7528\uff0c\u8fdb\u7a0b\u7ed3\u675f\u4f1a\u81ea\u52a8\u8c03\u7528<code>atexit</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> getpidgetppidforkvforkexit(0)_exit(0)waitwaitpidsystemexec\u51fd\u6570\u65cfglobatexit <pre><code>\u529f\u80fd:\u83b7\u5f97\u8fdb\u7a0bid\n\u51fd\u6570\u539f\u578b:pid _t getpid(void)\n\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\u53c2\u6570:\u65e0\n\u8fd4\u56de\u503c:\u8c03\u7528\u8be5\u51fd\u6570\u7684\u8fdb\u7a0bid\n</code></pre> <pre><code>\u529f\u80fd:\u83b7\u5f97\u8fdb\u7a0bid\n\u51fd\u6570\u539f\u578b:pid_t getppid(void)\n\u6240\u5c5e\u5934\u6587\u4ef6\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n\u53c2\u6570:\u65e0\n\u8fd4\u56de:\u503c\u8c03\u7528\u8be5\u51fd\u6570\u7684\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0bid\n</code></pre> <pre><code>\u529f\u80fd:\u521b\u5efa\u65b0\u8fdb\u7a0b\n\u539f\u578b:pid_t fork(void)\n\u6240\u5c5e\u5934\u6587\u4ef6\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n\u53c2\u6570:\u65e0\n\u8fd4\u56de\u503c:\u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n0:\u5b50\u8fdb\u7a0b\n\u5b50\u8fdb\u7a0bPID(\u5927\u4e8e0\u7684\u6574\u6570):\u7236\u8fdb\u7a0b\n-1:\u51fa\u9519\n\u7279\u70b9:fork\u6210\u529f\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u8d44\u6e90\u7236\u5b50\u8fdb\u7a0b\u540c\u65f6\u4ecefork\u51fd\u6570\n\u4ee5\u4e0b\u5f00\u59cb\u5e76\u884c\u8fd0\u884c\u3002\u4e92\u4e0d\u5e72\u6270\u3002\u62e5\u6709\u72ec\u7acb\u7684\u6570\u636e\u6bb5\u3001\u5806\u6808\uff0c\u4f46\u65e0\u6cd5\u786e\u5b9a\u7236\u5b50\u8fdb\u7a0b\u7684\u8fd0\u884c\u987a\u5e8f\n</code></pre> <pre><code>\u529f\u80fd:\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5e76\u4e14\u963b\u585e\u7236\u8fdb\u7a0b\n\u539f\u578b:pid_t vfork(void)\n\u6240\u5c5e\u5934\u6587\u4ef6\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n\u53c2\u6570:\u65e0\n\u8fd4\u56de\u503c:\u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684PID\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\n\u7279\u70b9:vfork\u6210\u529f\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u5171\u7528(\u72ec\u5360)\u7236\u8fdb\u7a0b\u8d44\u6e90\uff0c\n\u5b50\u8fdb\u7a0b\u9000\u51fa\u7236\u8fdb\u7a0b\u624d\u4f1a\u5f97\u5230\u6267\u884c\u3002\u5206\u4eab\u7236\u8fdb\u7a0b\u7684\u6570\u636e\u6bb5\u3001\u5806\uff0c\u4e00\u5b9a\u662f\u5b50\u8fdb\u7a0b\u5148\u8fd0\u884c\n</code></pre> <pre><code>\u51fd\u6570\u539f\u578b:void exit(int status);\n\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;stdlib.h&gt;\n\u5f62\u53c2:\u4e00\u822c\u76f4\u63a5\u51990\n\u8fd4\u56de\u503c:\u65e0\n\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4f1a\u6e05\u7406\u7f13\u51b2\u533a\n</code></pre> <pre><code>\u51fd\u6570\u539f\u578b:void _exit(int status)\uff1b\n\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;unistd.h&gt;\n\u5f62\u53c2:\u4e00\u822c\u76f4\u63a5\u51990\n\u8fd4\u56de\u503c:\u65e0\n\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u6e05\u7406\u7f13\u51b2\u533a\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;sys/types.h&gt;\n#include &lt;sys/wait.h&gt;\n\u51fd\u6570\u539f\u578b:pid_t wait(int *status);\n\u5f62\u53c2:NULL\n\u8fd4\u56de\u503c:\u6210\u529f\u8fd4\u56de\u7ed3\u675f\u7684\u5b50\u8fdb\u7a0b\u7684pid\u53f7\n\u5931\u8d25\u8fd4\u56de-1\n</code></pre> <pre><code>\u51fd\u6570\u539f\u578b:pid_t waitpid(pid_t pid, int *status, int options);\n\u5f62\u53c2:\npid:\u6307\u5b9a\u7b49\u5f85\u54ea\u4e00\u4e2a\u5b50\u8fdb\u7a0b  -1:\u7b49\u5f85\u4efb\u610f\u5b50\u8fdb\u7a0b\u7ed3\u675f\nstatus:NULL\noptions:\n0:\u540cwait()\uff0c\u963b\u585e\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u8fd4\u56de\u503c\u540cwait\noptions\u5982\u679c\u662f0\uff0c\u5373\u963b\u585e\u7b49\u5f85\uff0c\u6210\u529f\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684pid\uff0c\u5931\u8d25\u8fd4\u56de-1\uff1b\nWNOHANG:\u82e5\u7531 pid \u6307\u5b9a\u7684\u5b50\u8fdb\u7a0b\u4e0d\u7acb\u5373\u53ef\u7528(\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\u4e2d),\u5219 waitpid \u4e0d\u963b\u585e,\u6b64\u65f6\u8fd4\u56de\u503c\u4e3a 0\noptions\u5982\u679c\u662fWNOHANG\uff0c\u5373\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u6210\u529f\u7b49\u5230\u5b50\u8fdb\u7a0b\u6b7b\u4ea1\uff0c\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684pid\uff0c\u672a\u7b49\u5230\u8fd4\u56de0\uff1b\n\u8fd4\u56de\u503c:\n\u6210\u529f\u8fd4\u56de\u5b50\u8fdb\u7a0bpid\uff0c\u6ca1\u7b49\u5230\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\uff1b\n\u4e3e\u4f8b:\nwait(NULL) \u7b49\u4ef7\u7684 waitpid(-1,NULL,0)\uff1b\n\u5982\u679coptions\u53c2\u6570\u9009\u62e9WNOHANG,\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528while\u5faa\u73af\u68c0\u6d4b\u6307\u5b9a\u7684PID\u662f\u5426\u6b7b\u4ea1,\n\u5f53\u5176\u6b7b\u4ea1,\u53ef\u4ee5\u4e3a\u5176\u6536\u5c38,\u672a\u6b7b\u4ea1,\u6267\u884c\u4e0b\u4e00\u6761\u8bed\u53e5(\u4e0d\u5835\u585e)\n\u53ef\u53c2\u8003:\u987a\u5e8f\u64ad\u653eMP3\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;stdlib.h&gt;\nint system(const char *command);\n\u5f62\u53c2:command -- \u53ef\u6267\u884c\u7a0b\u5e8f\n\u6267\u884c\u64cd\u4f5c:\n1.\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u6765\u6267\u884c\u547d\u4ee4\u3002\n2.\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8c03\u7528\u547d\u4ee4\u884c\u89e3\u91ca\u5668\uff08shell\uff09\uff0c\u5e76\u5c06\u4f20\u5165\u7684\u547d\u4ee4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u3002\n3.\u7b49\u5f85\u547d\u4ee4\u7684\u6267\u884c\u5b8c\u6210\u3002\n4.\u8fd4\u56de\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u7801\uff08\u8fd4\u56de\u503c\u4e3a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u7801\uff09\u3002\nsystem\u51fd\u6570\u7684\u8fd4\u56de\u503c\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5:\n1.\u5982\u679c\u547d\u4ee4\u6210\u529f\u6267\u884c\u5e76\u6b63\u5e38\u9000\u51fa\uff0csystem\u51fd\u6570\u8fd4\u56de\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u7801\u3002\n2.\u5982\u679c\u521b\u5efa\u5b50\u8fdb\u7a0b\u5931\u8d25\u6216\u65e0\u6cd5\u6267\u884c\u547d\u4ee4\uff0csystem\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u975e\u96f6\u503c\u3002\n3.\u5982\u679ccommand\u4e3aNULL\uff0csystem\u51fd\u6570\u4f1a\u68c0\u67e5\u547d\u4ee4\u89e3\u91ca\u5668\u662f\u5426\u53ef\u7528\u3002\n\u6ce8\u610f\u4e8b\u9879:\n\u5728\u4f7f\u7528system\u51fd\u6570\u65f6\uff0c\u8981\u786e\u4fdd\u4f20\u9012\u7ed9\u5b83\u7684\u547d\u4ee4\u5b57\u7b26\u4e32\u662f\u53ef\u4fe1\u4efb\u7684\uff0c\u4ee5\u9632\u6b62\u547d\u4ee4\u6ce8\u5165\u5b89\u5168\u6f0f\u6d1e\u3002\n* system\u51fd\u6570\u4f1a\u963b\u585e\u5f53\u524d\u8fdb\u7a0b\uff0c\u76f4\u5230\u547d\u4ee4\u6267\u884c\u5b8c\u6210\u3002\n* system\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u53ef\u80fd\u53d7\u5230\u64cd\u4f5c\u7cfb\u7edf\u548c\u547d\u4ee4\u884c\u89e3\u91ca\u5668\u7684\u9650\u5236\u3002\n* \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u8fd4\u56de\u503c\u6765\u5224\u65ad\u547d\u4ee4\u662f\u5426\u6210\u529f\u6267\u884c\u3002\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n{\nprintf(\"**Begin**\\n\");\nprintf(\"\\n\");\nsystem(\"ls -a\");//\u4e0eexec\u51fd\u6570\u65cf\u4e0d\u540c\uff0c\u8c03\u7528\u540e\u4e0d\u4f1a\u7ed3\u675f\u5f53\u524d\u8fdb\u7a0b\nprintf(\"\\n\");\nprintf(\"**THE END**\\n\");\nreturn 0;\n}\n</code></pre> <p></p> <p>exec\u51fd\u6570\u65cf\u5b9a\u4e49: </p> <p>\u662f\u4e00\u7ec4\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7528\u4e8e\u6267\u884c\u5176\u4ed6\u7a0b\u5e8f\u7684\u51fd\u6570\u3002 \u8fd9\u4e9b\u51fd\u6570\u5c06\u5f53\u524d\u8fdb\u7a0b\u66ff\u6362\u4e3a\u65b0\u7684\u7a0b\u5e8f\uff0c\u65b0\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u6570\u636e\u548c\u5806\u6808\u4f1a\u8986\u76d6\u539f\u6765\u7684\u8fdb\u7a0b\u3002 <code>exec</code>\u51fd\u6570\u65cf\u901a\u5e38\u4e0e<code>fork</code>\u6216<code>vfork</code>\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u7528\u4e8e\u5728\u65b0\u7684\u8fdb\u7a0b\u4e2d\u6267\u884c\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002</p> <p>exec\u51fd\u6570\u65cf\u4f7f\u7528\u573a\u666f:</p> <p>\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\uff0c\u60f3\u6267\u884c\u53e6\u5916\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c<code>vfork/fork</code>+ <code>exec\u51fd\u6570\u65cf</code> \u5f53\u8be5\u8fdb\u7a0b\u4e0d\u80fd\u5728\u4e3a\u7cfb\u7edf\u505a\u51fa\u8d21\u732e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528exec\u51fd\u6570\u65cf\u8ba9\u81ea\u5df1\u91cd\u751f\u3002</p> <p>exec\u51fd\u6570\u65cf\u7684\u7279\u70b9:</p> <ul> <li> <p>fork+exec\u51fd\u6570\u65cf: fork\u8c03\u7528\u4e4b\u540e\uff0c\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u8d44\u6e90\uff0c\u5b50\u8fdb\u7a0b\u4e2d\u5982\u679c\u4f7f\u7528exec\uff0c                        \u539f\u672c\u7684fork\u7684\u8d44\u6e90\u4f1a\u88ab\u65b0\u7684exec\u6240\u5e26\u7684\u7a0b\u5e8f\u66ff\u6362\uff0c\u53ea\u6709pid\u53f7\u4fdd\u6301\u4e0d\u53d8\u3002</p> </li> <li> <p>vfork+exec\u51fd\u6570\u65cf: \u5728\u8c03\u7528exec\u51fd\u6570\u65cf\u7684\u65f6\u5019\uff0c\u4f1a\u91cd\u65b0\u5f97\u5230\u65b0\u7684\u7a7a\u95f4\uff0c\u4e0d\u518d\u548c\u7236\u8fdb\u7a0b\u516c\u5171\u540c\u4e00\u5757\u7a7a\u95f4\uff0c\u53ea\u6709pid\u53f7\u4fdd\u6301\u4e0d\u53d8\u3002</p> </li> </ul> <p>\u4ee5\u4e0a\u4e24\u79cd\u518d\u4f7f\u7528exec\u51fd\u6570\u65cf\u4e4b\u540e\uff0c\u4f7f\u7528\u7684\u90fd\u662f\u65b0\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u4e0e\u7236\u8fdb\u7a0b\u90fd\u4e0d\u662f\u540c\u4e00\u7a7a\u95f4\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f7f\u7528\u7684\u662fvfork+exec\u51fd\u6570\u65cf\uff0c\u8fd9\u6837 \u4e00\u5f00\u59cb\u5c31\u4e0d\u7528\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\u4e86(\u76f8\u5bf9\u4e8efork\u6765\u8bf4)</p> <p>exec\u51fd\u6570\u65cf\u5305\u62ec\u4ee5\u4e0b\u51fd\u6570:</p> <p>\u6240\u9700\u5934\u6587\u4ef6:<code>#include &lt;unistd.h&gt;</code></p> <ol> <li> <p><code>int execl(const char *path, const char *arg, ...);</code></p> <ul> <li><code>execl</code>\u51fd\u6570\u4f7f\u7528 \u53ef\u53d8\u53c2\u6570\u5217\u8868 \uff0c\u63a5\u53d7\u4e00\u4e2a \u5b57\u7b26\u4e32\u53c2\u6570\u5217\u8868 \u6765\u6307\u5b9a\u65b0\u7a0b\u5e8f\u7684 \u8def\u5f84 \u548c \u547d\u4ee4\u884c\u53c2\u6570 \u3002\u53c2\u6570\u5217\u8868\u4ee5 NULL \u7ed3\u5c3e\u3002</li> <li>path:\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84\uff0c\u4f7f\u7528 \u5b8c\u6574\u7684\u6587\u4ef6\u76ee\u5f55 \u6765\u67e5\u627e\u5bf9\u5e94\u7684 \u53ef\u6267\u884c\u6587\u4ef6 \u3002\u6ce8\u610f\u76ee\u5f55\u5fc5\u987b\u4ee5\u201c/\u201d\u5f00\u5934\uff0c\u5426\u5219\u5c06\u5176\u89c6\u4e3a\u6587\u4ef6\u540d  </li> <li>arg: \u53ef\u53d8\u4f20\u53c2(1. \u5199\u53ef\u6267\u884c\u7a0b\u5e8f\u81ea\u8eab 2. \u5199\u7ed9\u6267\u884c\u7a0b\u5e8f\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 3. \u5199\u7ed9\u6267\u884c\u7a0b\u5e8f\u4f20\u5165\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u00b7\u00b7\u00b7\u6700\u540e\u4ee5NULL\u7ed3\u5c3e)</li> <li>\u793a\u4f8b\uff1a<code>execl(\"/bin/ls\", \"ls\", \"-l\", NULL);</code></li> </ul> </li> <li> <p><code>int execv(const char *path, char *const argv[]);</code></p> <ul> <li><code>execv</code>\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a \u5b57\u7b26\u4e32\u6570\u7ec4 \u6765\u6307\u5b9a\u65b0\u7a0b\u5e8f\u7684 \u8def\u5f84 \u548c \u547d\u4ee4\u884c\u53c2\u6570 \u3002\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5fc5\u987b\u662f NULL \u3002</li> <li>\u793a\u4f8b\uff1a<code>char *args[] = { \"ls\", \"-l\", NULL }; execv(\"/bin/ls\", args);</code></li> </ul> </li> <li> <p><code>int execle(const char *path, const char *arg, ..., char *const envp[]);</code></p> <ul> <li><code>execle</code>\u51fd\u6570\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u5217\u8868\uff0c\u5e76\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\u5217\u8868\u548c\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u6570\u7ec4\u6765\u6307\u5b9a\u65b0\u7a0b\u5e8f\u7684\u8def\u5f84\u3001\u547d\u4ee4\u884c\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\u3002</li> <li>\u793a\u4f8b\uff1a<code>execle(\"/bin/ls\", \"ls\", \"-l\", NULL, envp);</code></li> </ul> </li> <li> <p><code>int execve(const char *path, char *const argv[], char *const envp[]);</code></p> <ul> <li><code>execve</code>\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u548c\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u6570\u7ec4\u6765\u6307\u5b9a\u65b0\u7a0b\u5e8f\u7684\u8def\u5f84\u3001\u547d\u4ee4\u884c\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\u3002</li> <li>\u793a\u4f8b\uff1a<code>char *args[] = { \"ls\", \"-l\", NULL }; execve(\"/bin/ls\", args, envp);</code></li> </ul> </li> <li> <p><code>int execlp(const char *file, const char *arg, ...);</code></p> <ul> <li><code>execlp</code>\u51fd\u6570\u7c7b\u4f3c\u4e8e<code>execl</code>\uff0c\u4f46\u4f1a\u5728\u7cfb\u7edf\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u67e5\u627e \u53ef\u6267\u884c\u6587\u4ef6 \u3002</li> <li>\u793a\u4f8b1\uff1a<code>execlp(\"ls\", \"ls\", \"-l\", NULL);</code></li> <li>\u793a\u4f8b2\uff1a<code>execlp(\"./hello\",\"hello\",NULL);</code></li> </ul> </li> <li> <p><code>int execvp(const char *file, char *const argv[]);</code></p> <ul> <li><code>execvp</code>\u51fd\u6570\u7c7b\u4f3c\u4e8e<code>execv</code>\uff0c\u4f46\u4f1a\u5728\u7cfb\u7edf\u7684\u641c\u7d22\u8def\u5f84\u4e2d\u67e5\u627e\u53ef\u6267\u884c\u6587\u4ef6\u3002</li> <li>\u793a\u4f8b\uff1a<code>char *args[] = { \"ls\", \"-l\", NULL }; execvp(\"ls\", args);</code></li> </ul> </li> </ol> <p>\u8fd9\u4e9b<code>exec</code>\u51fd\u6570\u5728\u8c03\u7528\u6210\u529f\u65f6\u4e0d\u4f1a\u8fd4\u56de\uff0c\u53ea\u6709\u5728\u51fa\u9519\u65f6\u624d\u4f1a\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6e\u9519\u8bef\u7801<code>errno</code>\u3002\u5b83\u4eec\u4f1a\u5c06\u5f53\u524d\u8fdb\u7a0b\u7684\u4ee3\u7801\u3001\u6570\u636e\u548c\u5806\u6808\u66ff\u6362\u4e3a\u8981\u6267\u884c\u7684\u65b0\u7a0b\u5e8f\uff0c\u5e76\u5f00\u59cb\u6267\u884c\u65b0\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002</p> <p><code>exec</code>\u51fd\u6570\u65cf\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u4fbf\u4e14\u5e38\u7528\u7684\u65b9\u5f0f\u6765\u6267\u884c\u5176\u4ed6\u7a0b\u5e8f\uff0c\u901a\u5e38\u4e0e<code>fork</code>\u6216<code>vfork</code>\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u7684\u66ff\u6362\u548c\u7a0b\u5e8f\u7684\u6267\u884c\u3002</p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;glob.h&gt;\n\u51fd\u6570\u539f\u578b:\nint glob(const char *pattern, int flags,int (*errfunc) (const char *epath, int eerrno), glob_t *pglob);\n\u51fd\u6570\u5f62\u53c2: pattern:  \u83b7\u53d6\u67d0\u4e00\u8def\u5f84\u4e0b\u7684\u67d0\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\n\u4e3e\u4f8b\uff1a\"/home/sakuraji/mp3file/*.mp3\"  flags\uff1a0\nerrfunc\uff1aNULL\npglob\uff1a\u8981\u4fdd\u5b58\u7684\u4f4d\u7f6eglob_t *\u7c7b\u578b   \uff08glob  \u5982\u4e0b\uff09\ntypedef struct {\nsize_t gl_pathc; /*\u627e\u5230\u7684\u6587\u4ef6\u4e2a\u6570*/\nchar **gl_pathv;/*\u6587\u4ef6\u540d:gl_pathv[0]  gl_pathv[1]  \u3002\u3002\u3002\u3002 */\nsize_t   gl_offs; /* \u4e0d\u7ba1 */\n} glob_t;\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;glob.h&gt;\nint main()\n{\nglob_t song; //\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\nglob(\"/home/sakura-ji/Traing/mp3file/*.mp3\",0,NULL,&amp;song);\nfor(int i = 0; i &lt; song.gl_pathc; i++)\n{\nprintf(\"%s\\n\",song.gl_pathv[i]);\n}\nreturn 0;\n}\n</code></pre> <p></p> <ol> <li>\u5982\u679c\u662f\u975e\u6b63\u5e38\u9000\u51fa\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u4f7f\u7528 Ctrl+C \u9000\u51fa\u4e0d\u4f1a\u8c03\u7528 <code>atexit</code>\u51fd\u6570 <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;stdlib.h&gt;\n\u51fd\u6570\u539f\u578b:\nint atexit(void (*function)(void));\n\u5f62\u53c2:\nfunction  \u8fd4\u56de\u503c\u548c\u5f62\u53c2\u5747\u4e3avoid\u7684\u51fd\u6570\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nvoid cleanup() {\nprintf(\"Performing cleanup...\\n\");\n// \u6267\u884c\u4e00\u4e9b\u6e05\u7406\u64cd\u4f5c\n}\nint main() {\natexit(cleanup);\nprintf(\"Program is running...\\n\");\n// \u5176\u4ed6\u7684\u7a0b\u5e8f\u4ee3\u7801\nreturn 0;\n}\n</code></pre> </li> </ol>"},{"location":"LinuxSystem/Multi-process/#_11","title":"\u521b\u5efa\u8fdb\u7a0b","text":"<p>\u65b9\u5f0f\u4e00: \u901a\u8fc7\u8fd0\u884c\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b</p> <p></p> <p>\u65b9\u5f0f\u4e8c: \u901a\u8fc7\u51fd\u6570 <code>fork()</code> \u6216\u8005 <code>vfork()</code></p> <p>Example</p> \u521d\u8bc6fork\u521d\u8bc6Vfork\u4e8c\u8005\u7684\u533a\u522b <p>1.fork\u7684\u7279\u70b9\u5c31\u662f:fork\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\uff0c\u521b\u5efa\u4e00\u4e2a\u5b8c\u5168\u76f8\u540c\u7684\u5b50\u8fdb\u7a0b\u3002 \u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4f1a\u5728fork\u8c03\u7528\u4e4b\u540e\u540c\u65f6\u6267\u884c\u3002(\u5148\u540e\u987a\u5e8f\u4e0d\u786e\u5b9a)</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main()\n{\npid_t pid = fork();\nif(pid == 0)\n{\nprintf(\"i am son\\n\");\n}\nelse if(pid &gt; 0)\n{\nprintf(\"i am father\\n\");\n}\n}\n</code></pre> <p></p> <p>1.vfork\u7684\u7279\u70b9:\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90,\u5b50\u8fdb\u7a0b\u4f1a\u5728\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u8fd0\u884c\uff0c \u76f4\u5230\u5b50\u8fdb\u7a0b\u8c03\u7528exec\u6216\u8005_exit\u51fd\u6570\u540e\uff0c\u5b50\u8fdb\u7a0b\u624d\u4f1a\u72ec\u7acb\u4e8e\u7236\u8fdb\u7a0b\u8fd0\u884c\u3002</p> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\nint main()\n{\npid_t pid = vfork();//pid_t pid = fork();\nif(pid == 0)\n{\nsleep(2);//\u52a0\u5165sleep\uff0c\u662f\u4e3a\u4e86\u8bc1\u660e\u4f1a\u5148\u5b50\u8fdb\u7a0b\uff0c\u7236\u8fdb\u7a0b\u5728\u7b49\nprintf(\"i am son pid:%d and i start,my father's pid:%d \\n\",getpid(),getppid());\nsleep(2);\nprintf(\"son pid:%d finish,my father's pid:%d \\n\",getpid(),getppid());\n_exit(0);//\u89c4\u5b9a\u4f7f\u7528_exit(0)\u9000\u51fa\uff0c\u9632\u6b62\u51fa\u73b0\u6838\u5fc3\u5df2\u8f6c\u50a8\u7684\u9519\u8bef\n}\nelse if(pid &gt; 0)\n{\nprintf(\"i am farher process\\n\");\n}\nelse {\nperror(\"vfork\");\nreturn -1;\n}\n}\n</code></pre> <p></p> <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\nint num = 100;\nint main()\n{\npid_t pid = vfork();//pid_t pid = fork();\nif(pid == 0)\n{\nnum++;\nprintf(\"i am son,num = %d\\n\",num);\n_exit(0);//\u89c4\u5b9a\u4f7f\u7528_exit(0)\u9000\u51fa\uff0c\u9632\u6b62\u51fa\u73b0\u6838\u5fc3\u5df2\u8f6c\u50a8\u7684\u9519\u8bef\n}\nelse if(pid &gt; 0)\n{\nprintf(\"i am father,num = %d\\n\",num);\n}\nelse {\nperror(\"vfork\");\nreturn -1;\n}\n}\n</code></pre> <p></p>"},{"location":"LinuxSystem/Multi-process/#_12","title":"\u4e3e\u4f8b","text":"<p>Example</p> \u4f7f\u7528fork\u6253\u53708\u4e2anihao\u7236\u8fdb\u7a0b\u68c0\u6d4b\u5b50\u8fdb\u7a0b\u72b6\u6001exec\u51fd\u6570\u65cf\u7684\u4f7f\u7528\u987a\u5e8f\u64ad\u653eMP3\u6587\u4ef6 \u4f7f\u75283\u4e2afork\u5c55\u5f003\u4e2afork <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\nint main()\n{\nfork();\nfork();\nfork();\nprintf(\"nihao\\n\");\n}\n</code></pre> \u8fdb\u7a0b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\nint main()\n{\npid_t pid1 = fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid1 == 0)\n{\npid_t pid2 = fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid2 == 0)\n{\npid_t pid3 =fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid3 == 0 )\n{\nprintf(\"nihao\\n\");\n}\nelse if(pid3 &gt; 0)\n{\nprintf(\"nihao\\n\");\n}\n}\nelse if(pid2 &gt; 0)\n{\npid_t pid4 =fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid4 == 0 )\n{\nprintf(\"nihao\\n\");\n}\nelse if(pid4 &gt; 0)\n{\nprintf(\"nihao\\n\");\n}\n}\n}\nelse if(pid1 &gt; 0)\n{\npid_t pid5 = fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid5 == 0)\n{\npid_t pid6 =fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid6 == 0 )\n{\nprintf(\"nihao\\n\");\n}\nelse if(pid6 &gt; 0)\n{\nprintf(\"nihao\\n\");\n}\n}\nelse if(pid5 &gt; 0)\n{\npid_t pid7 =fork();//\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u5e76\u590d\u5236\u7236\u8fdb\u7a0b\nif(pid7 == 0 )\n{\nprintf(\"nihao\\n\");\n}\nelse if(pid7 &gt; 0)\n{\nprintf(\"nihao\\n\");\n}\n}\n}\nreturn 0;\n}\n</code></pre> <p></p> Test1Test2 <pre><code> #include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\nint main()\n{\npid_t pid = fork();\nif(pid == 0)\n{\nprintf(\"i am son,son-pid:%d\\n\",getpid());\nsleep(5);\nprintf(\"son die\\n\");\n}\nelse if(pid &gt; 0)\n{\nprintf(\"i am father,father-pid:%d\\n\",getpid());\nwait(NULL);\nprintf(\"\u68c0\u6d4b\u5230son die\uff0c\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\\n\");\npid_t pid1 = fork();\nif(pid1 == 0)\n{\nprintf(\"\u8fd9\u662f\u65b0\u7684\u5b50\u8fdb\u7a0b,\u65b0\u7684\u5b50\u8fdb\u7a0bpid\u662f:%d\\n\",getpid());\nsleep(5);\nprintf(\"\u65b0\u7684\u5b50\u8fdb\u7a0b\u6b7b\u4ea1\\n\");\n}\nelse if(pid1 &gt; 0)\n{\nwait(NULL);\nprintf(\"\u8fd9\u662f\u65b0\u7684\u7236\u8fdb\u7a0b,\u65b0\u7684\u7236\u8fdb\u7a0bpid\u662f:%d\",getpid());\n}\n}\n}\n</code></pre> <p></p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\nint main()\n{\npid_t pid;\nloop:\n//\u89c4\u5b9aloop\u4e0b\u4e0d\u80fd\u5b9a\u4e49\u53d8\u91cf\npid = fork();\nif(pid == 0)\n{\nprintf(\"i am son,son-pid:%d\\n\",getpid());\nsleep(5);\nprintf(\"son die\\n\");\n}\nelse if(pid &gt; 0)\n{\nprintf(\"i am father,my son pid is:%d,father-pid:%d\\n\",pid,getpid());//fork()\u5728\u7236\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684pid\npid_t a = wait(NULL);\nif(a == pid)\n{\ngoto loop;\n}\n}\n}\n</code></pre> </p> \u521d\u4f7f\u7528\u4e0evfork\u8fde\u7528 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\nint main()\n{\nprintf(\"12345\\n\");\nexecl(\"/home/sakuraji/Tring/Multi-process/hello\", \"hello\",NULL);//\u542f\u52a8\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6267\u884c,\u8986\u76d6\u539f\u6709\u8fdb\u7a0b\nprintf(\"67890\\n\");//\u4e0d\u8fdb\u884c\nreturn 0;\n}\n</code></pre> <p></p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;sys/wait.h&gt;\nint main()\n{\npid_t pid = vfork();\nif(pid == 0)\n{\nprintf(\"12345\\n\");\nexecl(\"/home/sakuraji/Tring/Multi-process/hello\", \"hello\",NULL);//\u542f\u52a8\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u6267\u884c,\u8986\u76d6\u539f\u6709\u8fdb\u7a0b\nprintf(\"67890\\n\");//\u4e0d\u8fd0\u884c\n_exit(0);//\u4e0d\u8fd0\u884c\n}\nelse if(pid &gt; 0)\n{\nwait(NULL);//\u7b49\u5f85\u5b50\u8fdb\u7a0b\u6d88\u4ea1\nprintf(\"i am father\\n\");\n}\nreturn 0;\n}\n</code></pre> <p></p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;glob.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include&lt;wait.h&gt;\nglob_t *s = NULL;//\u4f7f\u7528\u6307\u9488\u5b9a\u4e49\u7ed3\u6784\u4f53\u7c7b\u578b\u7684glob\uff0c\u6307\u9488\u53ea\u6709\u5730\u5740\uff0c\u6240\u4ee5\u540e\u9762\u9700\u8981\u7ed9\u6307\u9488\u5f00\u7a7a\u95f4\npid_t pid;\nint cur_i = 0;//\u5f53\u524d\u5728\u64ad\u653e\u90a3\u4e00\u9996\u6b4c\uff0c\u4ece\u7b2c\u4e00\u9996\u5f00\u59cb\nint main()\n{\n//1.\u83b7\u53d6\u6b4c\u5355\ns = (glob_t * )malloc(sizeof(glob_t));//\u5f00\u8f9f\u7a7a\u95f4\nglob(\"/home/sakura-ji/Traing/mp3file/*.mp3\",0,NULL,s);\nprintf(\"\u6b4c\u66f2\u540d\u5355\u4e3a:\\n\");\nfor(int i = 0; i &lt; s-&gt;gl_pathc; i++)\n{\nprintf(\"%s\\n\",s-&gt;gl_pathv[i]);\n}\nloop:\npid = vfork();\nif(pid &lt; 0)\n{\nperror(\"vfork\");\nreturn -1;\n}\nelse if(pid == 0 )\n{\nexeclp(\"mpg123\", \"mpg123\", s-&gt;gl_pathv[cur_i],NULL);  }\nelse\n{\nwhile(1)//\u4f7f\u7528waitpid\u4e3a\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u4e3a\u4e86\u8981\u4e00\u76f4\u76d1\u63a7\u5b50\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4f7f\u7528while\u5faa\u73af\n{\nint res = waitpid(pid, NULL, WNOHANG);//\u8fd9\u662f\u4e3a\u4e86\u5728\u5b50\u8fdb\u7a0b\u4f7f\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7236\u8fdb\u7a0b\u4e5f\u8981\u505a\u4e8b\u60c5\uff0c\u76f4\u5230\u76d1\u6d4b\u5230\u5b50\u8fdb\u7a0b\u6b7b\u4ea1\nif(res == pid)\n{\ncur_i++;\nif(cur_i == s-&gt;gl_pathc)\ncur_i = 0;\ngoto loop;\n}\n}\n}\nreturn 0;\n}\n</code></pre> </p>"},{"location":"LinuxSystem/Posix/","title":"\u7ebf\u7a0b","text":""},{"location":"LinuxSystem/Posix/#_2","title":"\u7ebf\u7a0b\u57fa\u7840","text":""},{"location":"LinuxSystem/Posix/#_3","title":"\u7406\u8bba","text":"<p>\u7ebf\u7a0b\u901a\u5e38\u53eb\u505a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b,\u591a\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7a7a\u95f4\u91cc\u9762\u3002\u7ebf\u7a0b\u4e5f\u662f\u80fd\u591f\u88ab\u7cfb\u7edf\u8c03\u5ea6\u7684\u3002</p> <p>\u7ebf\u7a0b\u7684\u7279\u70b9:</p> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u6761\u7ebf\u7a0b\uff0c\u5373 <code>main</code> \u51fd\u6570\u6240\u4ee3\u8868\u7684\u6267\u884c\u5e8f\u5217\uff0c\u79f0\u4e4b\u4e3a\u4e3b\u7ebf\u7a0b</li> <li>Linux \u7684\u7ebf\u7a0b\u662f\u901a\u8fc7\u7528\u6237\u7ea7\u7684\u51fd\u6570\u5e93\u5b9e\u73b0\u7684\uff0c\u4e00\u822c\u91c7\u7528 <code>pthread</code> \u7ebf\u7a0b\u5e93\u5b9e\u73b0\u7ebf\u7a0b\u7684\u8bbf\u95ee\u548c\u63a7\u5236\u3002\u5b83\u4f7f\u7528\u7b2c\u4e09\u65b9   <code>posix</code> \u6807\u51c6\u7684 <code>pthread</code>\uff0c\u5177\u6709\u826f\u597d\u7684\u53ef\u79fb\u690d\u6027\uff0c\u7f16\u8bd1\u7684\u65f6\u5019\u8981\u5728\u540e\u9762\u52a0\u4e0a  <code>-l pthread</code> </li> </ul> <pre><code>gcc xxx.c -l pthread -o Test\n</code></pre> <ul> <li>\u4e3b\u7ebf\u7a0b\u4ec5\u4ec5\u662f\u4ee3\u8868\u8fdb\u7a0b\u6267\u884c\u7684\u7b2c\u4e00\u6761\u7ebf\u7a0b,\u5f53\u4e3b\u7ebf\u7a0b\u901a\u8fc7\u7ebf\u7a0b\u5e93\u521b\u5efa\u51fa\u51fd\u6570\u7ebf\u7a0b\u4ee5\u540e\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u5c31\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u3002</li> <li>\u540c\u4e00\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5747\u4f1a\u72ec\u7acb\u6267\u884c\u76f8\u540c\u7a0b\u5e8f\uff0c\u4e14\u5171\u4eab\u540c\u4e00\u4efd\u5168\u5c40\u5185\u5b58\u533a\u57df\uff0c\u5176\u4e2d\u5305\u62ec\u521d\u59cb\u5316\u6570\u636e\u6bb5\uff08initialized data\uff09\u3001\u672a\u521d\u59cb\u5316\u6570\u636e\u6bb5 \uff08uninitialized data\uff09\uff0c\u4ee5\u53ca\u5806\u5185\u5b58\u6bb5\uff08heap segment\uff09\u53ea\u6709\u6808\u533a\u662f\u81ea\u5df1\u7684(\u5c40\u90e8\u53d8\u91cf)</li> <li>\u5728\u7ebf\u7a0b\u4e2d\uff0c\u4efb\u610f\u7ebf\u7a0b\u975e\u6b63\u5e38\u6d88\u4ea1\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5168\u6302\u6389\u3002\u4e00\u6b7b\u5168\u6b7b</li> <li>\u8fd0\u884c\u987a\u5e8f\u7531cpu\u51b3\u5b9a</li> <li>\u5e76\u53d1\u8fd0\u884c</li> <li>\u4f18\u70b9: \u5360\u7528\u7cfb\u7edf\u7684\u8d44\u6e90\u5c11,\u901a\u4fe1\u7b80\u5355</li> <li>\u7f3a\u70b9: \u8c03\u5ea6\u6ca1\u6709\u8fdb\u7a0b\u65b9\u4fbf,\u5bf9\u8d44\u6e90\u7684\u64cd\u4f5c\u4e0d\u5b89\u5168</li> </ul> \u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u533a\u522b\u548c\u9009\u62e9 <p>\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b</p> <p>\u8fdb\u7a0b\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u7ebf\u7a0b\u6ca1\u6709\u5355\u72ec\u7684\u5730\u5740\u7a7a\u95f4\u3002\uff08\u540c\u4e00\u8fdb\u7a0b\u5185\u7684\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff09</p> <p>\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\u6240\u82b1\u8d39\u7684\u7a7a\u95f4\u8fdc\u8fdc\u5927\u4e8e\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u6240\u82b1\u8d39\u7684\u7a7a\u95f4\uff0830\u500d\u5de6\u53f3\uff09\uff0c \u800c\u4e14\uff0c\u7ebf\u7a0b\u95f4\u5f7c\u6b64\u5207\u6362\u6240\u9700\u7684\u65f6\u95f4\u4e5f\u8fdc\u8fdc\u5c0f\u4e8e\u8fdb\u7a0b\u95f4\u5207\u6362\u6240\u9700\u8981\u7684\u65f6\u95f4\uff08&gt;10\u500d\uff09 \u7ef4\u62a4\u8fdb\u7a0b\u5bf9\u5185\u6838\u7684\u6d88\u8017\u8fdc\u8fdc\u5927\u4e8e\u7ebf\u7a0b</p> <p>\u7ebf\u7a0b\u95f4\u53ef\u4ee5\u5171\u4eab\u6570\u636e\uff0c\u66f4\u5bb9\u6613\u901a\u4fe1</p> <p>\u5982\u4f55\u9009\u62e9:</p> <ol> <li>\u9700\u8981\u9891\u7e41\u521b\u5efa\u9500\u6bc1\u7684\u4f18\u5148\u7528\u7ebf\u7a0b,\u56e0\u4e3a\u5bf9\u8fdb\u7a0b\u6765\u8bf4\u521b\u5efa\u548c\u9500\u6bc1\u4e00\u4e2a\u8fdb\u7a0b\u4ee3\u4ef7\u662f\u5f88\u5927\u7684\u3002</li> <li>\u7ebf\u7a0b\u7684\u5207\u6362\u901f\u5ea6\u5feb\uff0c\u6240\u4ee5\u5728\u9700\u8981\u5927\u91cf\u8ba1\u7b97\uff0c\u5207\u6362\u9891\u7e41\u65f6\u7528\u7ebf\u7a0b\uff0c\u8fd8\u6709\u8017\u65f6\u7684\u64cd\u4f5c\u4f7f\u7528\u7ebf\u7a0b\u53ef\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u54cd\u5e94</li> <li>\u5f3a\u76f8\u5173\u7684\u5904\u7406\u7528\u7ebf\u7a0b\uff0c\u5f31\u76f8\u5173\u7684\u5904\u7406\u7528\u8fdb\u7a0b</li> <li>\u56e0\u4e3a\u5bf9CPU\u7cfb\u7edf\u7684\u6548\u7387\u4f7f\u7528\u4e0a\u7ebf\u7a0b\u66f4\u5360\u4f18\uff0c\u6240\u4ee5\u53ef\u80fd\u8981\u53d1\u5c55\u5230\u591a\u673a\u5206\u5e03\u7684\u7528\u8fdb\u7a0b\uff0c\u591a\u6838\u5206\u5e03\u7528\u7ebf\u7a0b\uff1b</li> <li>\u9700\u8981\u66f4\u7a33\u5b9a\u5b89\u5168\u65f6\uff0c\u9002\u5408\u9009\u62e9\u8fdb\u7a0b\uff1b\u9700\u8981\u901f\u5ea6\u65f6\uff0c\u9009\u62e9\u7ebf\u7a0b\u66f4\u597d\u3002</li> </ol>"},{"location":"LinuxSystem/Posix/#_4","title":"\u51fd\u6570","text":"<ol> <li>\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u7684\u51fd\u6570 <code>pthread_create</code></li> <li>\u7528\u4e8e\u7b49\u5f85\u6307\u5b9a\u7684\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5e76\u83b7\u53d6\u5176\u8fd4\u56de\u503c(\u5982\u679c\u6709)\u7684\u51fd\u6570 <code>pthread_join</code></li> <li>\u7528\u4e8e\u7ec8\u6b62\u5f53\u524d\u7ebf\u7a0b\uff0c\u5e76\u53ef\u9009\u62e9\u4f20\u9012\u4e00\u4e2a\u7ebf\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u7684\u51fd\u6570 <code>pthread_exit</code></li> <li>\u7528\u4e8e\u83b7\u53d6\u8c03\u7528\u5b83\u7684\u7ebf\u7a0b\u7684\u7ebf\u7a0bID(Thread ID)\u7684\u51fd\u6570 <code>pthread_self</code></li> <li>\u7528\u4e8e\u53d6\u6d88\u6307\u5b9a\u7684\u7ebf\u7a0b\u7684\u51fd\u6570<code>pthread_cancel</code></li> <li>\u7528\u4e8e\u5728\u7ebf\u7a0b\u6267\u884c\u8fc7\u7a0b\u4e2d\u6ce8\u518c\u6e05\u7406\u51fd\u6570\u7684\u51fd\u6570\u662f <code>pthread_cleanup_push</code>\u548c<code>pthread_cleanup_pop</code></li> <li>\u7528\u4e8e\u5411\u6307\u5b9a\u7684\u7ebf\u7a0b\u53d1\u9001\u4fe1\u53f7\u7684\u51fd\u6570(\u540c\u8fdb\u7a0b): <code>pthread_kill</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> pathread_createpthread_joinpthread_exitpthread_selfpthread_cancelpthread_cleanup_push \u548c pthread_cleanup_poppthread_kill <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include&lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_create(pthread_t *thread,const pthread_attr_t *attr,void *(*start_routine)(void*),void *arg);\n\u53c2\u6570: thread: \u6307\u5411 pthread_t \u7c7b\u578b\u7684\u6307\u9488\uff0c\u7528\u4e8e\u5b58\u50a8\u65b0\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff0c\u5373\u7ebf\u7a0bID\nattr: \u6307\u5411 pthread_attr_t \u7c7b\u578b\u7684\u6307\u9488\uff0c\u7528\u4e8e\u6307\u5b9a\u65b0\u7ebf\u7a0b\u7684\u5c5e\u6027\u3002\u5982\u679c\u4f20\u5165 NULL \uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\u3002\nstart_routine: \u7ebf\u7a0b\u7684\u5165\u53e3\u51fd\u6570\uff0c\u662f\u4e00\u4e2a\u6307\u5411\u8fd4\u56de void* \u7684\u51fd\u6570\u6307\u9488\uff0c\u63a5\u53d7\u4e00\u4e2a void* \u7c7b\u578b\u7684\u53c2\u6570\u3002(void *)\u662f\u4e00\u4e2a\u4e07\u80fd\u6307\u9488\narg: \u4f20\u9012\u7ed9\u7ebf\u7a0b\u5165\u53e3\u51fd\u6570\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u6307\u9488\u3002\n\u8fd4\u56de\u503c:\n\u6210\u529f -- 0, \u5931\u8d25 -- \u975e0\u503c\uff1b\n\u4e3e\u4f8b:\npthread_t id = 0;\npthread_create(&amp;id,NULL,Func,NULL);\n</code></pre> \u4e3e\u4f8b1\u4e3e\u4f8b2\u4e3e\u4f8b3 <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\npthread_create(&amp;id, NULL, Func, NULL);//\u521b\u5efa\u7ebf\u7a0b\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\nsleep(1);//\u4e0d\u52a0\u5ef6\u65f6\u6709\u53ef\u80fd\u5b50\u7ebf\u7a0b\u4e0d\u4f1a\u8fd0\u884c\uff0c\u56e0\u4e3amain\u7ebf\u7a0b\u76f4\u63a5return 0\u4f1a\u5c06\u8fdb\u7a0b\u76f4\u63a5\u7ed3\u675f\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b\\n\");\nreturn NULL; }\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\npthread_create(&amp;id, NULL, Func, \"hello\");//\u521b\u5efa\u7ebf\u7a0b,\u4f20\u5165\u53c2\u6570\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\nsleep(1);//\u4e0d\u52a0\u5ef6\u65f6\u6709\u53ef\u80fd\u5b50\u7ebf\u7a0b\u4e0d\u4f1a\u663e\u793a\uff0c\u56e0\u4e3amain\u7ebf\u7a0b\u76f4\u63a5return 0\u4f1a\u5c06\u8fdb\u7a0b\u76f4\u63a5\u7ed3\u675f\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u884c\u6570\u662f:%d,\u4f20\u5165\u7684\u53c2\u6570\u662f:%s\\n\",__LINE__,(char *)p);\nreturn NULL; //\u7ed3\u675f\u5b50\u7ebf\u7a0b\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\nint num = 56;\npthread_create(&amp;id, NULL, Func, &amp;num);//\u521b\u5efa\u7ebf\u7a0b,\u4f20\u5165\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\nsleep(1);//\u4e0d\u52a0\u5ef6\u65f6\u6709\u53ef\u80fd\u5b50\u7ebf\u7a0b\u4e0d\u4f1a\u663e\u793a\uff0c\u56e0\u4e3amain\u7ebf\u7a0b\u76f4\u63a5return 0\u4f1a\u5c06\u8fdb\u7a0b\u76f4\u63a5\u7ed3\u675f\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u884c\u6570\u662f:%d,\u4f20\u5165\u7684\u53c2\u6570\u662f:%d\\n\",__LINE__,*((int *)p));\n//\u5148\u5c06\u4f20\u5165\u8fc7\u6765\u7684void *\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u6210int *,\u7136\u540e\u518d\u5c06\u5176\u8fdb\u884c\u89e3\u6307\u9488\u64cd\u4f5c\nreturn NULL; //\u7ed3\u675f\u5b50\u7ebf\u7a0b\n}\n</code></pre> </p> <ol> <li>\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u963b\u585e\u51fd\u6570\uff0c\u4e00\u76f4\u7b49\u5230\u53c2\u6570 pthid \u6307\u5b9a\u7684\u7ebf\u7a0b\u8fd4\u56de\uff1b\u4e0e\u591a\u8fdb\u7a0b\u4e2d\u7684 wait \u6216 waitpid \u7c7b\u4f3c <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_join(pthread_t thread, void **retval);\n\u53c2\u6570:\nthread: \u8981\u7b49\u5f85\u7684\u7ebf\u7a0b\u7684\u6807\u8bc6\u7b26\uff08\u5373pthread_t\u7c7b\u578b\uff09\u3002\nretval: \u6307\u5411\u4e00\u4e2a\u6307\u9488\u7684\u6307\u9488\uff0c\u7528\u4e8e\u83b7\u53d6\u7ebf\u7a0b\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u4e0d\u9700\u8981\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u4f20\u5165NULL\u3002\n\u8fd4\u56de\u503c:\npthread_join()\u51fd\u6570\u8fd4\u56de\u503c\u4e3a0\u8868\u793a\u6210\u529f\u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f\uff0c\u975e\u96f6\u503c\u8868\u793a\u7b49\u5f85\u5931\u8d25\u3002\n\u7ebf\u7a0b\u7684\u8fd4\u56de\u503c\u5b58\u50a8\u5728retval\u6307\u9488\u6240\u6307\u5411\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u6839\u636e\u7ebf\u7a0b\u5165\u53e3\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002\n</code></pre></li> </ol> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\nint num = 56;\npthread_create(&amp;id, NULL, Func, &amp;num);//\u521b\u5efa\u7ebf\u7a0b,\u4f20\u5165\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\npthread_join(id, NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bid\u7ed3\u675f\nprintf(\"\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86\\n\");\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u884c\u6570\u662f:%d,\u4f20\u5165\u7684\u53c2\u6570\u662f:%d\\n\",__LINE__,*((int *)p));\n//\u5148\u5c06\u4f20\u5165\u8fc7\u6765\u7684void *\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u6210int *,\u7136\u540e\u518d\u5c06\u5176\u8fdb\u884c\u89e3\u6307\u9488\u64cd\u4f5c\nsleep(2);\nreturn NULL; //\u7ed3\u675f\u5b50\u7ebf\u7a0b\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nvoid pthread_exit(void *retval);\n\u53c2\u6570:\nretval\uff0c\u7528\u4e8e\u4f20\u9012\u7ebf\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u3002\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u3002\n</code></pre> \u4e3e\u4f8b\u4e00\u4e3e\u4f8b2 <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\nint num = 56;\npthread_create(&amp;id, NULL, Func, &amp;num);//\u521b\u5efa\u7ebf\u7a0b,\u4f20\u5165\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\nvoid *a = NULL;//pthread_exit \u4f20\u56de\u6765\u4e00\u4e2avoid *\u7c7b\u578b\u7684\u53c2\u6570 (\u5730\u5740)\npthread_join(id, &amp;a);//\u7b49\u5f85\u5b50\u7ebf\u7a0bid\u7ed3\u675f\uff0cjoin\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f void **\u7c7b\u578b\u7684 \u6240\u4ee5\u518d\u53d6\u4e00\u6b21\u5730\u5740\n//\u628abuf\u7684\u5730\u5740\u4f20\u8fc7\u6765\u4e86\nprintf(\"\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86,\u4f20\u56de\u6765\u7684\u53c2\u6570:%s\\n\",(char *)a);\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u884c\u6570\u662f:%d,\u4f20\u5165\u7684\u53c2\u6570\u662f:%d\\n\",__LINE__,*((int *)p));\n//\u5148\u5c06\u4f20\u5165\u8fc7\u6765\u7684void *\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u6210int *,\u7136\u540e\u518d\u5c06\u5176\u8fdb\u884c\u89e3\u6307\u9488\u64cd\u4f5c\nsleep(2);\nstatic char buf[100] = {\"hello\"};//\u9700\u8981\u4f7f\u7528\u9759\u6001\u53d8\u91cf\uff0c\u4e0d\u80fd\u5c06buf\u7a7a\u95f4\u91ca\u653e\uff0c\u5426\u5219\u5c31\u4f20\u4e0d\u56de\u53bb\u4e86\npthread_exit(buf); //\u7ed3\u675f\u5b50\u7ebf\u7a0b,\u5e76\u5c06\u53c2\u6570\u4f20\u56de\u53bb\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\nint num = 56;\npthread_create(&amp;id, NULL, Func, &amp;num);//\u521b\u5efa\u7ebf\u7a0b,\u4f20\u5165\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b\\n\");\nvoid *a = NULL;//pthread_exit \u4f20\u56de\u6765\u4e00\u4e2avoid *\u7c7b\u578b\u7684\u53c2\u6570 (\u5730\u5740)\npthread_join(id, &amp;a);//\u7b49\u5f85\u5b50\u7ebf\u7a0bid\u7ed3\u675f\uff0cjoin\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f void **\u7c7b\u578b\u7684 \u6240\u4ee5\u518d\u53d6\u4e00\u6b21\u5730\u5740\n//\u628a&amp;son\u7684\u5730\u5740\u4f20\u8fc7\u6765\u4e86\nprintf(\"\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86,\u4f20\u56de\u6765\u7684\u53c2\u6570:%d\\n\",*((int *)a));\n//\u6211\u7684\u7406\u89e3\u662f\uff0cexit\u7684\u4f20\u56de\u7c7b\u578b\u662f(void *),\u90a3\u4e48\u6211\u4eec\u7528void *\u7c7b\u578b\u7684a\u627f\u63a5\n//\u4f46\u6309\u7167\u89c4\u5219\u7b49\u5f85\u51fd\u6570join\u9700\u8981\u627f\u63a52\u7ea7\u7c7b\u578b\u7684\u6307\u9488\uff0c\u6240\u4ee5\u6211\u4eec\u5c06a\u53d6\u5730\u5740\u653e\u5230\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\n//\u8fd9\u6837&amp;a \u91cc\u9762 \u653e\u7684 \u662f &amp;son\u7684\u5730\u5740  \uff0c a \u91cc\u9762\u653e\u7684 \u5c31\u662f &amp;son\n// \u6240\u4ee5 *a = son\u7684\u503c\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u884c\u6570\u662f:%d,\u4f20\u5165\u7684\u53c2\u6570\u662f:%d\\n\",__LINE__,*((int *)p));\n//\u5148\u5c06\u4f20\u5165\u8fc7\u6765\u7684void *\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u6210int *,\u7136\u540e\u518d\u5c06\u5176\u8fdb\u884c\u89e3\u6307\u9488\u64cd\u4f5c\nsleep(2);\nstatic int son = 67;//\u9700\u8981\u4f7f\u7528\u9759\u6001\u53d8\u91cf\uff0c\u4e0d\u80fd\u5c06son\u7a7a\u95f4\u91ca\u653e\uff0c\u5426\u5219\u5c31\u4f20\u4e0d\u56de\u53bb\u4e86\npthread_exit(&amp;son); //\u7ed3\u675f\u5b50\u7ebf\u7a0b,\u5e76\u5c06\u53c2\u6570\u4f20\u56de\u53bb\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\npthread_t pthread_self(void);\n\u5f62\u53c2:\u65e0\n\u8fd4\u56de\u503c:\n\u5f53\u524d\u7ebf\u7a0b\u7684id\uff0cpthread_t \u4e0d\u540c\u7684\u7ebf\u7a0bpid\u4e00\u6837\uff0c\u7ebf\u7a0bid\u4e0d\u540c\uff1b\n</code></pre> <p>\u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\npthread_create(&amp;id, NULL, Func, NULL);//\u521b\u5efa\u7ebf\u7a0b\nprintf(\"\u6211\u662fmain\u7ebf\u7a0b,\u6211\u7684\u7ebf\u7a0bid\u662f:%lu,\u6211\u7684\u8fdb\u7a0bid\u662f:%d\\n\",pthread_self(),getpid());\npthread_join(id, NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bid\u7ed3\u675f\nprintf(\"\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86\\n\");\nreturn 0;\n}\nvoid *Func(void *p)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b,\u6240\u5728\u51fd\u6570\u540d\u662f:%s,\u6211\u7684\u7ebf\u7a0bid\u662f:%lu,\u6211\u7684\u8fdb\u7a0bid\u662f:%d\\n\",__FUNCTION__,pthread_self(),getpid());\nsleep(2);\npthread_exit(NULL); //\u7ed3\u675f\u5b50\u7ebf\u7a0b\n}\n</code></pre> </p> <p><pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_cancel(pthread_t thread);\n\u53c2\u6570:\nthread\uff0c\u6307\u5b9a\u8981\u53d6\u6d88\u7684\u7ebf\u7a0b\u7684\u7ebf\u7a0bID\uff08pthread_t\u7c7b\u578b\uff09\n</code></pre> \u4e3e\u4f8b<pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u7ebf\u7a0bid\npthread_create(&amp;id, NULL, Func, NULL);//\u521b\u5efa\u7ebf\u7a0b\nsleep(5);\npthread_cancel(id);//\u53d6\u6d88\u7ebf\u7a0b\npthread_join(id, NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bid\u7ed3\u675f\nprintf(\"\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e86\\n\");\nreturn 0;\n}\nvoid *Func(void *p)\n{\nwhile(1)\n{\nprintf(\"\u6211\u662f\u5b50\u7ebf\u7a0b\\n\");\nsleep(1);\n}\npthread_exit(NULL); //\u7ed3\u675f\u5b50\u7ebf\u7a0b\n}\n</code></pre> </p> <p>\u6709\u4e09\u79cd\u60c5\u51b5\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570 \u4f1a\u88ab\u8c03\u7528 :</p> <ol> <li>\u7ebf\u7a0b\u8fd8\u672a\u6267\u884c <code>pthread_cleanup_pop</code> \u524d , \u88ab <code>pthread_cancel</code> \u53d6\u6d88</li> <li>\u7ebf\u7a0b\u8fd8\u672a\u6267\u884c <code>pthread_cleanup_pop</code> \u524d , \u4e3b\u52a8\u6267\u884c <code>pthread_exit</code> \u7ec8\u6b62</li> <li>\u7ebf\u7a0b\u6267\u884c <code>pthread_cleanup_pop</code> , \u4e14 <code>pthead_cleanup_pop</code> \u7684\u53c2\u6570\u4e0d\u4e3a 0.</li> </ol> <p>\u6709\u591a\u4e2acleanup\u6e05\u7406\u51fd\u6570\u65f6,\u9075\u5faa\u5148\u8fdb\u540e\u51fa\u539f\u5219\u548c\u8fdb\u6808\u51fa\u6808\u4e00\u6837,\u770b\u793a\u4f8b4</p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nvoid pthread_cleanup_push(void (*routine)(void*), void *arg);\n\u53c2\u6570:\nroutine: \u6e05\u7406\u51fd\u6570\uff0c\u5f53\u7ebf\u7a0b\u88ab\u53d6\u6d88\u6216\u8c03\u7528pthread_exit()\u51fd\u6570\u65f6\uff0c\u4f1a\u5728\u6e05\u7406\u51fd\u6570\u4e2d\u6267\u884c\u76f8\u5e94\u7684\u6e05\u7406\u64cd\u4f5c\u3002\narg: \u4f20\u9012\u7ed9\u6e05\u7406\u51fd\u6570\u7684\u53c2\u6570\u3002\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nvoid pthread_cleanup_pop(int execute);\n\u53c2\u6570:\nexecute: \u63a7\u5236\u6e05\u7406\u51fd\u6570\u7684\u6267\u884c\u3002\u5982\u679cexecute\u4e3a\u975e\u96f6\u503c\uff0c\u8868\u793a\u6267\u884c\u6e05\u7406\u51fd\u6570\uff1b\n\u5982\u679cexecute\u4e3a\u96f6\uff0c\u8868\u793a\u4e0d\u6267\u884c\u6e05\u7406\u51fd\u6570\u3002\n</code></pre> \u4e3e\u4f8b1\u4e3e\u4f8b2\u4e3e\u4f8b3\u4e3e\u4f8b4 <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\nvoid *Son_Pthread(void *p);//\u5b50\u7ebf\u7a0b\nvoid Clean_Fun(void *p);//\u6e05\u7406\u51fd\u6570\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u5b50\u7ebf\u7a0bID\npthread_create(&amp;id,NULL,Son_Pthread,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\nprintf(\"i am main pthread!\\n\");\nsleep(3);\npthread_cancel(id);//\u53d6\u6d88\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u8fdb\u884c\npthread_join(id,NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bID\u7ed3\u675f\nreturn 0;\n}\nvoid *Son_Pthread(void *p)\n{\npthread_cleanup_push(Clean_Fun,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570\nint count = 0;\nwhile(1)\n{\nprintf(\"%s\u7ebf\u7a0b\u88ab\u6267\u884c\\n\",__FUNCTION__);\nsleep(1);\ncount++;\nif(count == 5)\nbreak;\n}\npthread_exit(NULL);\npthread_cleanup_pop(0);//\u548cpush\u8fdb\u884c\u7ec4\u5408\n}\nvoid Clean_Fun(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\nvoid *Son_Pthread(void *p);//\u5b50\u7ebf\u7a0b\nvoid Clean_Fun(void *p);//\u6e05\u7406\u51fd\u6570\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u5b50\u7ebf\u7a0bID\npthread_create(&amp;id,NULL,Son_Pthread,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\nprintf(\"i am main pthread!\\n\");\npthread_join(id,NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bID\u7ed3\u675f\nreturn 0;\n}\nvoid *Son_Pthread(void *p)\n{\npthread_cleanup_push(Clean_Fun,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570\nint count = 0;\nwhile(1)\n{\nprintf(\"%s\u7ebf\u7a0b\u88ab\u6267\u884c\\n\",__FUNCTION__);\nsleep(1);\ncount++;\nif(count == 5)\nbreak;\n}\npthread_exit(NULL);//pop\u524d \u6b63\u5e38\u9000\u51fa\npthread_cleanup_pop(0);//\u548cpush\u8fdb\u884c\u7ec4\u5408\n}\nvoid Clean_Fun(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\nvoid *Son_Pthread(void *p);\nvoid Clean_Fun(void *p);\nint main()\n{\npthread_t id = 0;\npthread_create(&amp;id,NULL,Son_Pthread,NULL);\nprintf(\"i am main pthread!\\n\");\npthread_join(id,NULL);\nreturn 0;\n}\nvoid *Son_Pthread(void *p)\n{\npthread_cleanup_push(Clean_Fun,NULL);\nint count = 0;\nwhile(1)\n{\nprintf(\"%s\u7ebf\u7a0b\u88ab\u6267\u884c\\n\",__FUNCTION__);\nsleep(1);\ncount++;\nif(count == 5)\nbreak;\n}\n// pthread_exit(NULL);//\u672a\u6b63\u5e38\u9000\u51fa\npthread_cleanup_pop(1);//\u7136\u540e \u53c2\u6570\u4e3a \u975e0\u503c\n}\nvoid Clean_Fun(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\nvoid *Son_Pthread(void *p);//\u5b50\u7ebf\u7a0b\nvoid Clean_Fun1(void *p);//\u6e05\u7406\u51fd\u6570\nvoid Clean_Fun2(void *p);//\u6e05\u7406\u51fd\u6570\nvoid Clean_Fun3(void *p);//\u6e05\u7406\u51fd\u6570\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u5b50\u7ebf\u7a0bID\npthread_create(&amp;id,NULL,Son_Pthread,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\nprintf(\"i am main pthread!\\n\");\npthread_join(id,NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0bID\u7ed3\u675f\nreturn 0;\n}\nvoid *Son_Pthread(void *p)\n{\npthread_cleanup_push(Clean_Fun1,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570\npthread_cleanup_push(Clean_Fun2,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570\npthread_cleanup_push(Clean_Fun3,NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\u6e05\u7406\u51fd\u6570\nint count = 0;\nwhile(1)\n{\nprintf(\"%s\u7ebf\u7a0b\u88ab\u6267\u884c\\n\",__FUNCTION__);\nsleep(1);\ncount++;\nif(count == 5)\nbreak;\n}\npthread_exit(NULL);\npthread_cleanup_pop(1);//\u548cpush\u8fdb\u884c\u7ec4\u5408\npthread_cleanup_pop(1);//\u548cpush\u8fdb\u884c\u7ec4\u5408\npthread_cleanup_pop(1);//\u548cpush\u8fdb\u884c\u7ec4\u5408\n}\nvoid Clean_Fun1(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\nvoid Clean_Fun2(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\nvoid Clean_Fun3(void *p)\n{\nprintf(\"%s\u88ab\u6267\u884c\\n\",__FUNCTION__);\n}\n</code></pre> </p> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n#include &lt;signal.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_kill(pthread_t thread, int sig);\n\u53c2\u6570:\nthread: \u8981\u53d1\u9001\u4fe1\u53f7\u7684\u76ee\u6807\u7ebf\u7a0b\u7684\u7ebf\u7a0bID\uff08pthread_t\u7c7b\u578b\uff09\u3002\nsig: \u8981\u53d1\u9001\u7684\u4fe1\u53f7\u7684\u7f16\u53f7\u3002\n\u8fd4\u56de\u503c:\n\u6210\u529f,\u8fd4\u56de0\n\u5931\u8d25,\u8fd4\u56de\u503c\u4e3a\u4e00\u4e2a\u975e\u96f6\u7684\u9519\u8bef\u7801\n</code></pre> \u4e3e\u4f8b1\u4e3e\u4f8b2 <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;signal.h&gt;\nvoid *Func(void *p);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u5b50\u7ebf\u7a0bID\u53f7\npthread_create(&amp;id, NULL, Func, NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\nsleep(3);\npthread_kill(id, 2);//\u5411\u5b50\u7ebf\u7a0b\u4f20\u90122\u53f7\u4fe1\u53f7\npthread_join(id,NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0b\nprintf(\"never find here!\\n\");//\u8fd0\u884c\u4e0d\u5230\u8fd9\u91cc \uff0c \u56e0\u4e3a2\u53f7\u4fe1\u53f7\u76f4\u63a5\u628a\u8fdb\u7a0b\u6740\u6b7b\u4e86\n}\nvoid *Func(void *p)\n{\nwhile(1)\n{\nprintf(\"i am son\\n\");\nsleep(1);\n}\n}\n</code></pre> </p> <p><pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;signal.h&gt;\nvoid *Func(void *p);\nvoid Cap(int a);\nint main()\n{\npthread_t id = 0;//\u5b9a\u4e49\u5b50\u7ebf\u7a0bID\u53f7\npthread_create(&amp;id, NULL, Func, NULL);//\u521b\u5efa\u5b50\u7ebf\u7a0b\nsleep(3);\npthread_kill(id, 2);//\u5411\u5b50\u7ebf\u7a0b\u4f20\u90122\u53f7\u4fe1\u53f7\npthread_join(id,NULL);//\u7b49\u5f85\u5b50\u7ebf\u7a0b\nprintf(\"never find here!\\n\");//\u8fd0\u884c\u4e0d\u5230\u8fd9\u91cc,\u56e0\u4e3a\u5b50\u7ebf\u7a0b\u4e00\u76f4\u518d\u5faa\u73af\n}\nvoid *Func(void *p)\n{\n//signal(2,SIN_IGN);//\u5ffd\u7565\u5904\u7406\nsignal(2,Cap);//\u5c062\u53f7\u4fe1\u53f7\u6355\u83b7\nwhile(1)\n{\nprintf(\"i am son\\n\");\nsleep(1);\n}\n}\nvoid Cap(int a)\n{\nprintf(\"ctrl + c\u5df2\u7ecf\u88ab\u6355\u83b7\\n\");\n}\n</code></pre> </p>"},{"location":"LinuxSystem/Posix/#_5","title":"\u4e3e\u4f8b","text":"<p>\u4f7f\u7528\u6709\u540d\u7ba1\u9053\u8fdb\u884c\u53cc\u5411\u901a\u4fe1</p> 0\u53f7\u901a\u4fe11\u53f7\u901a\u4fe1 <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\n#include &lt;pthread.h&gt;\n#define TEXT \"text.fifo\"\n#define DATA \"data.fifo\"\nvoid *Func(void *p);\nint main()\n{\n// \u68c0\u67e5text.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(TEXT, F_OK) == 0)\n{\nprintf(\"text.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"text.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(TEXT,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n// \u68c0\u6d4bdata.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(DATA, F_OK) == 0)\n{\nprintf(\"data.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"data.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(DATA,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u521b\u5efa\u7ebf\u7a0b\npthread_t id = 0;//\u521b\u5efa\u7ebf\u7a0bID\npthread_create(&amp;id, NULL, Func, NULL);\n//\u4e3b\u7ebf\u7a0b \u6253\u5f00 -- \u5199\nprintf(\"\u8bf7\u5411text.fifo\u7ba1\u9053\u6587\u4ef6\u4e2d\u5199\u5165\\n\");\nint fd = open(TEXT,O_WRONLY);\nchar w_buf[100] = {0};\nif(fd == -1)\n{\nperror(\"0hao write open\");\nreturn -1;\n}\nwhile(1)\n{\nprintf(\"0\u53f7\u6b63\u5728\u54111\u53f7\u53d1\u9001\u5185\u5bb9:\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd,w_buf,strlen(w_buf));\nif(!strcmp(w_buf, \"quit\"))//\u9632\u6b62\u9677\u5165\u5f53\u4e00\u7aef\u5173\u95ed\uff0c\u7ba1\u9053\u6467\u6bc1\uff0c\u53e6\u4e00\u7aef\u51fa\u73b0bug\n{\npthread_exit(NULL);\n}\nmemset(w_buf,0,100);\n}\npthread_join(id,NULL);\nreturn 0;\n}\nvoid *Func(void *p)\n{\n// \u5b50\u7ebf\u7a0b\u8fdb\u884c\u8bfb\u53d6\nprintf(\"0 hao \u6b63\u5728\u76d1\u542c1\u53f7\u53d1\u9001\u7684\u5185\u5bb9\\n\");\nint fp = open(DATA,O_RDONLY);\nchar r_buf[100] = {0};\nif(fp == -1)\n{\nperror(\"0 hao read open\");\npthread_exit(NULL);\n}\nwhile(1)\n{\nread(fp,r_buf,100);\nif(!strcmp(r_buf, \"quit\"))\n{\nprintf(\"1\u53f7\u53d1\u9001\u5411-&gt;0\u53f7\u7684\u901a\u9053\u7ed3\u675f\\n\");\nreturn NULL;\n}\nprintf(\"0 hao \u8bfb\u53d6\u5230\u7684\u5185\u5bb9:%s\\n\",r_buf);\nmemset(r_buf,0,100);\n}\nreturn NULL;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;sys/stat.h&gt;\n#include&lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\n#include &lt;pthread.h&gt;\n#define TEXT \"text.fifo\"\n#define DATA \"data.fifo\"\nvoid *Func(void *p);\nint main()\n{\n// \u68c0\u67e5text.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(TEXT, F_OK) == 0)\n{\nprintf(\"text.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"text.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(TEXT,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n// \u68c0\u6d4bdata.fifo\u6587\u4ef6\u662f\u5426\u5b58\u5728\nif (access(DATA, F_OK) == 0)\n{\nprintf(\"data.fifo File exists\\n\");//\u5b58\u5728\n} else\n{\nprintf(\"data.fifo File does not exist,creat it\\n\");//\u4e0d\u5b58\u5728\nif(mkfifo(DATA,0644) == -1)//\u521b\u5efa\u6587\u4ef6\n{\nperror(\"mkfifo\");\nreturn -1;\n}\n}\n//\u521b\u5efa\u7ebf\u7a0b\npthread_t id = 0;//\u521b\u5efa\u7ebf\u7a0bID\npthread_create(&amp;id, NULL, Func, NULL);\n//\u4e3b\u7ebf\u7a0b \u6253\u5f00 -- \u5199\nprintf(\"\u8bf7\u5411data.fifo\u7ba1\u9053\u6587\u4ef6\u4e2d\u5199\u5165\\n\");\nint fd = open(DATA,O_WRONLY);\nchar w_buf[100] = {0};\nif(fd == -1)\n{\nperror(\"1hao write open\");\nreturn -1;\n}\nwhile(1)\n{\nprintf(\"1\u53f7\u6b63\u5728\u54110\u53f7\u53d1\u9001\u5185\u5bb9:\\n\");\nscanf(\"%s\",w_buf);\nwrite(fd,w_buf,strlen(w_buf));\nif(!strcmp(w_buf, \"quit\"))//\u9632\u6b62\u9677\u5165\u5f53\u4e00\u7aef\u5173\u95ed\uff0c\u7ba1\u9053\u6467\u6bc1\uff0c\u53e6\u4e00\u7aef\u51fa\u73b0bug\n{\npthread_exit(NULL);\n}\nmemset(w_buf,0,100);\n}\npthread_join(id,NULL);\nreturn 0;\n}\nvoid *Func(void *p)\n{\n// \u5b50\u7ebf\u7a0b\u8fdb\u884c\u8bfb\u53d6\nprintf(\"1 hao \u6b63\u5728\u76d1\u542c0\u53f7\u53d1\u9001\u7684\u5185\u5bb9\\n\");\nint fp = open(TEXT,O_RDONLY);\nchar r_buf[100] = {0};\nif(fp == -1)\n{\nperror(\"1 hao read open\");\npthread_exit(NULL);\n}\nwhile(1)\n{\nread(fp,r_buf,100);\nif(!strcmp(r_buf, \"quit\"))\n{\nprintf(\"0\u53f7\u53d1\u9001-&gt;0\u53f7\u7684\u901a\u9053\u7ed3\u675f\\n\");\nreturn NULL;\n}\nprintf(\"1 hao \u8bfb\u53d6\u5230\u7684\u5185\u5bb9:%s\\n\",r_buf);\nmemset(r_buf,0,100);\n}\nreturn NULL;\n}\n</code></pre> <p> </p>"},{"location":"LinuxSystem/Posix/#_6","title":"\u540c\u6b65\u548c\u4e92\u65a5","text":""},{"location":"LinuxSystem/Posix/#_7","title":"\u7406\u8bba","text":"<p>\u7ebf\u7a0b\u7684\u540c\u6b65\u548c\u4e92\u65a5\u662f\u5e76\u53d1\u7f16\u7a0b\u4e2d\u5e38\u7528\u7684\u4e24\u79cd\u6280\u672f\uff0c\u7528\u4e8e\u786e\u4fdd\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u6b63\u786e\u6267\u884c\u987a\u5e8f\u548c\u5171\u4eab\u8d44\u6e90\u7684\u5b89\u5168\u8bbf\u95ee\u3002</p> <p>\u540c\u6b65(Synchronization): \u662f\u6307\u591a\u4e2a\u7ebf\u7a0b\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u6267\u884c\uff0c\u4fdd\u8bc1\u7ebf\u7a0b\u4e4b\u95f4\u7684\u76f8\u5bf9\u987a\u5e8f\u548c\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002 \u5e38\u89c1\u7684\u540c\u6b65\u673a\u5236\u6709\u4e92\u65a5\u9501\u3001\u6761\u4ef6\u53d8\u91cf\u3001\u4fe1\u53f7\u91cf\u7b49\u3002</p> <p>\u4e92\u65a5(Mutual Exclusion): \u662f\u6307\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u5373\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\uff0c \u5176\u4ed6\u7ebf\u7a0b\u9700\u8981\u7b49\u5f85\u3002\u4e92\u65a5\u673a\u5236\u53ef\u4ee5\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u5bfc\u81f4\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u6216\u7ade\u6001\u6761\u4ef6\u7b49\u95ee\u9898\u3002\u5e38\u89c1\u7684\u4e92\u65a5\u673a\u5236\u6709\u4e92\u65a5\u9501\u3001\u8bfb\u5199\u9501\u7b49\u3002</p> <p>\u5728\u4f7f\u7528\u540c\u6b65\u548c\u4e92\u65a5\u673a\u5236\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9:</p> <ol> <li> <p>\u4e34\u754c\u533a(Critical Section): \u6307\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u4ee3\u7801\u6bb5\u3002\u5728\u8fdb\u5165\u4e34\u754c\u533a\u4e4b\u524d\uff0c\u9700\u8981\u901a\u8fc7\u4e92\u65a5\u673a\u5236\u83b7\u53d6\u9501\u6216\u4fe1\u53f7\u91cf\uff0c\u4ee5\u786e\u4fdd\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\u6267\u884c\u3002</p> </li> <li> <p>\u4e92\u65a5\u9501(Mutex): \u662f\u6700\u5e38\u7528\u7684\u540c\u6b65\u673a\u5236\u3002\u5728\u8fdb\u5165\u4e34\u754c\u533a\u4e4b\u524d\uff0c\u7ebf\u7a0b\u5c1d\u8bd5\u83b7\u53d6\u4e92\u65a5\u9501\uff0c\u5982\u679c\u9501\u5df2\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501\u3002</p> </li> <li> <p>\u6761\u4ef6\u53d8\u91cf(Condition Variable): \u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\u7684\u7b49\u5f85\u548c\u901a\u77e5\u3002\u5f53\u7ebf\u7a0b\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6761\u4ef6\u53d8\u91cf\u6682\u65f6\u91ca\u653e\u4e92\u65a5\u9501\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u6ee1\u8db3\u6761\u4ef6\u540e\u901a\u77e5\u7b49\u5f85\u7684\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u3002</p> </li> <li> <p>\u4fe1\u53f7\u91cf(Semaphore): \u7528\u4e8e\u63a7\u5236\u540c\u65f6\u8bbf\u95ee\u67d0\u4e2a\u8d44\u6e90\u7684\u7ebf\u7a0b\u6570\u91cf\u3002\u901a\u8fc7\u4fe1\u53f7\u91cf\u53ef\u4ee5\u9650\u5236\u540c\u65f6\u8bbf\u95ee\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u5b9e\u73b0\u8d44\u6e90\u7684\u5408\u7406\u5206\u914d\u3002</p> </li> </ol> <p>\u4f7f\u7528\u540c\u6b65\u548c\u4e92\u65a5\u673a\u5236\u53ef\u4ee5\u6709\u6548\u5730\u7ba1\u7406\u7ebf\u7a0b\u4e4b\u95f4\u7684\u7ade\u4e89\u548c\u8d44\u6e90\u8bbf\u95ee,\u786e\u4fdd\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002 \u4f46\u540c\u65f6,\u4f7f\u7528\u4e0d\u5f53\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3001\u9965\u997f\u7b49\u95ee\u9898,\u56e0\u6b64\u5728\u7f16\u5199\u5e76\u53d1\u7a0b\u5e8f\u65f6\u9700\u8981\u8c28\u614e\u8bbe\u8ba1\u548c\u8c03\u8bd5\u3002</p>"},{"location":"LinuxSystem/Posix/#mutex","title":"\u4e92\u65a5\u9501","text":"<p>\u542b\u4e49: \u6bcf\u6b21\u64cd\u4f5c\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u53bb\u68c0\u6d4b\u9501</p> <ul> <li>\u5982\u679c\u9501\u5904\u4e8e\u52a0\u9501\u72b6\u6001\u7b49\u5f85\u9501\u89e3\u5f00</li> <li>\u5982\u679c\u9501\u5904\u4e8e\u89e3\u9501\u72b6\u6001\uff0c\u52a0\u9501\u4f7f\u7528\uff0c\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u89e3\u9501\u3002</li> </ul> <p>\u5206\u7c7b:</p> <ul> <li>\u5feb\u901f\u4e92\u65a5\u9501:\u6700\u5e38\u7528\u7684\u9501\uff0c\u7b26\u5408\u4ee5\u4e0a\u7684\u542b\u4e49   </li> <li>\u68c0\u6d4b\u9501:  \u5feb\u901f\u4e92\u65a5\u9501\u7684\u975e\u963b\u585e\u7248\u672c</li> <li>\u9012\u5f52\u9501:  \u591a\u6b21\u52a0\u9501</li> </ul>"},{"location":"LinuxSystem/Posix/#_8","title":"\u4e92\u65a5\u9501\u51fd\u6570","text":"<ol> <li>\u5b9a\u4e49\u4e00\u4e2a\u4e92\u65a5\u9501: <code>pthread_mutex_t mutex</code></li> <li>\u521d\u59cb\u5316\u4e00\u4e2a\u4e92\u65a5\u9501: <code>pthread_mutex_init</code></li> <li>\u7ade\u4e89\u5360\u7528\u4e92\u65a5\u9501: <code>pthread_mutex_lock</code></li> <li>\u91ca\u653e\u4e92\u65a5\u9501\u8d44\u6e90: <code>pthread_mutex_unlock</code></li> <li>\u9500\u6bc1\u4e92\u65a5\u9501: <code>pthread_mutex_destroy</code></li> </ol> <p>\u51fd\u6570\u539f\u578b</p> pthread_mutex_initpthread_mutex_lockpthread_mutex_trylockpthread_mutex_unlockpthread_mutex_destroy <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr);\n\u53c2\u6570:\nmutex:\u6307\u5411\u4e92\u65a5\u9501\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8be5\u51fd\u6570\u5c06\u521d\u59cb\u5316\u4e92\u65a5\u9501\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9mutex\u3002\nattr:\u6307\u5411\u4e92\u65a5\u9501\u5c5e\u6027\u7684\u6307\u9488\u3002\u5982\u679c\u4f20\u5165NULL\uff0c\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u7684\u4e92\u65a5\u9501\u5c5e\u6027\u3002\n\u4e92\u65a5\u9501\u5c5e\u6027\u5f71\u54cd\u4e92\u65a5\u9501\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\u662f\u5426\u662f\u9012\u5f52\u9501\uff08\u53ef\u4ee5\u591a\u6b21\u9501\u5b9a\u540c\u4e00\u4e2a\u9501\uff09\u7b49\u3002\n\u5982\u679c\u8981\u8bbe\u7f6e\u7279\u5b9a\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528pthread_mutexattr_init\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\uff0c\n\u5e76\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027\u540e\u5c06\u5176\u4f20\u9012\u7ed9pthread_mutex_init\u51fd\u6570\n\u8fd4\u56de\u503c:\n0 \u8868\u793a\u6210\u529f\n\u975e 0 \u8868\u793a\u5931\u8d25\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_mutex_lock(pthread_mutex_t *mutex);\n\u5f62\u53c2:\nmutex:\u6307\u5411\u4e92\u65a5\u9501\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8be5\u51fd\u6570\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u4e92\u65a5\u9501,\u5982\u679c\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6,\u5219\u5f53\u524d\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e,\u76f4\u5230\u6210\u529f\u83b7\u53d6\u5230\u4e92\u65a5\u9501\u4e3a\u6b62\u3002\n\u8fd4\u56de\u503c:\n\u4e3a 0 \u8868\u793a\u6210\u529f\u83b7\u53d6\u5230\u4e92\u65a5\u9501\n\u975e 0 \u8868\u793a\u83b7\u53d6\u5931\u8d25\u3002\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_mutex_trylock(pthread_mutex_t *mutex);\n\u53c2\u6570:\nmutex\uff1a\u6307\u5411\u4e92\u65a5\u9501\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8be5\u51fd\u6570\u4f1a\u5c1d\u8bd5\u83b7\u53d6\u4e92\u65a5\u9501,\u5982\u679c\u4e92\u65a5\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6,\u5219\u8fd4\u56de\u9519\u8bef\u7801,\u5426\u5219\u7acb\u5373\u83b7\u53d6\u4e92\u65a5\u9501\u5e76\u8fd4\u56de0\u3002\n\u8fd4\u56de\u503c:\n\u4e3a 0 \u8868\u793a\u6210\u529f\u83b7\u53d6\u5230\u4e92\u65a5\u9501,\u5426\u5219\u8868\u793a\u83b7\u53d6\u5931\u8d25\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_mutex_unlock(pthread_mutex_t *mutex);\n\u5f62\u53c2:\nmutex:\u6307\u5411\u4e92\u65a5\u9501\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8be5\u51fd\u6570\u4f1a\u91ca\u653e\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u7684\u4e92\u65a5\u9501\u3002\n\u8fd4\u56de\u503c:\n\u8fd4\u56de\u503c\u4e3a 0 \u8868\u793a\u6210\u529f\u91ca\u653e\u4e92\u65a5\u9501\n\u975e 0 \u8868\u793a\u9519\u8bef\n</code></pre> <pre><code>\u6240\u5c5e\u5934\u6587\u4ef6:\n#include &lt;pthread.h&gt;\n\u51fd\u6570\u539f\u578b:\nint pthread_mutex_destroy(pthread_mutex_t *mutex);\n\u5f62\u53c2:\nmutex:\u6307\u5411\u4e92\u65a5\u9501\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8be5\u51fd\u6570\u4f1a\u9500\u6bc1\u4e92\u65a5\u9501\u5bf9\u8c61\uff0c\u5e76\u91ca\u653e\u76f8\u5173\u7684\u8d44\u6e90\u3002\n\u8fd4\u56de\u503c:\n\u4e3a 0 \u8868\u793a\u6210\u529f\u9500\u6bc1\u4e92\u65a5\u9501\n\u975e 0 \u8868\u793a\u9519\u8bef\u53d1\u751f\n</code></pre>"},{"location":"LinuxSystem/Posix/#cond","title":"\u6761\u4ef6\u53d8\u91cf","text":"<p>\u6761\u4ef6\u53d8\u91cf\uff08Condition Variable\uff09\u662f\u4e00\u79cd\u7ebf\u7a0b\u540c\u6b65\u7684\u673a\u5236\uff0c\u7528\u4e8e\u5728\u7ebf\u7a0b\u95f4\u8fdb\u884c\u901a\u4fe1\u548c\u534f\u8c03\u3002 \u5b83\u5141\u8bb8\u7ebf\u7a0b\u5728\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u4e4b\u524d\u7b49\u5f85\uff0c\u5e76\u5728\u6761\u4ef6\u6ee1\u8db3\u65f6\u88ab\u5524\u9192\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u6761\u4ef6\u53d8\u91cf\u901a\u5e38\u4e0e\u4e92\u65a5\u9501\u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u590d\u6742\u7684\u7ebf\u7a0b\u540c\u6b65\u548c\u4e92\u65a5\u64cd\u4f5c\u3002</p> <p>\u6761\u4ef6\u53d8\u91cf\u7684\u4f7f\u7528\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4:</p> <ol> <li> <p>\u521d\u59cb\u5316\u6761\u4ef6\u53d8\u91cf\u548c\u4e92\u65a5\u9501:    \u5728\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u524d\uff0c\u9700\u8981\u901a\u8fc7<code>pthread_cond_init</code>\u51fd\u6570\u521d\u59cb\u5316\u6761\u4ef6\u53d8\u91cf\uff0c\u4ee5\u53ca\u901a\u8fc7<code>pthread_mutex_init</code>\u51fd\u6570\u521d\u59cb\u5316\u4e92\u65a5\u9501\u3002\u6761\u4ef6\u53d8\u91cf\u7528\u4e8e\u7b49\u5f85\u548c\u5524\u9192\u7ebf\u7a0b\uff0c\u800c\u4e92\u65a5\u9501\u7528\u4e8e\u4fdd\u62a4\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u3002</p> </li> <li> <p>\u7b49\u5f85\u6761\u4ef6:    \u5728\u67d0\u4e2a\u7ebf\u7a0b\u5e0c\u671b\u5728\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u4e4b\u524d\u7b49\u5f85\u65f6\uff0c\u53ef\u4ee5\u8c03\u7528<code>pthread_cond_wait</code>\u51fd\u6570\u3002\u6b64\u51fd\u6570\u4f1a\u81ea\u52a8\u5c06\u5f53\u524d\u7ebf\u7a0b\u963b\u585e\uff0c\u5e76\u91ca\u653e\u4e92\u65a5\u9501\u3002\u7ebf\u7a0b\u5c06\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u88ab\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7<code>pthread_cond_signal</code>\u6216<code>pthread_cond_broadcast</code>\u51fd\u6570\u5524\u9192\u3002</p> </li> <li> <p>\u5524\u9192\u7ebf\u7a0b:    \u5f53\u67d0\u4e2a\u7ebf\u7a0b\u6ee1\u8db3\u6761\u4ef6\u5e76\u5e0c\u671b\u5524\u9192\u7b49\u5f85\u7684\u7ebf\u7a0b\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>pthread_cond_signal</code>\u51fd\u6570\u5411\u6761\u4ef6\u53d8\u91cf\u53d1\u9001\u4fe1\u53f7\u3002\u8fd9\u5c06\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\uff0c\u4f7f\u7528<code>pthread_cond_broadcast</code>\u51fd\u6570\u4f1a\u5524\u9192\u6240\u6709\u7b49\u5f85\u7ebf\u7a0b\u3002</p> </li> <li> <p>\u91cd\u65b0\u68c0\u67e5\u6761\u4ef6:    \u7b49\u5f85\u7684\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\uff0c\u5b83\u4f1a\u518d\u6b21\u83b7\u53d6\u4e92\u65a5\u9501\uff0c\u5e76\u91cd\u65b0\u68c0\u67e5\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\u3002\u5982\u679c\u6761\u4ef6\u4ecd\u7136\u4e0d\u6ee1\u8db3\uff0c\u5b83\u5c06\u7ee7\u7eed\u7b49\u5f85\uff0c\u5426\u5219\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002</p> </li> <li> <p>\u9500\u6bc1\u6761\u4ef6\u53d8\u91cf\u548c\u4e92\u65a5\u9501:    \u5728\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u548c\u4e92\u65a5\u9501\u65f6\uff0c\u5e94\u4f7f\u7528<code>pthread_cond_destroy</code>\u51fd\u6570\u9500\u6bc1\u6761\u4ef6\u53d8\u91cf\uff0c\u5e76\u4f7f\u7528<code>pthread_mutex_destroy</code>\u51fd\u6570\u9500\u6bc1\u4e92\u65a5\u9501\u3002\u8fd9\u5c06\u91ca\u653e\u76f8\u5173\u7684\u8d44\u6e90\u3002</p> </li> </ol>"},{"location":"LinuxSystem/Posix/#_9","title":"\u6761\u4ef6\u53d8\u91cf\u51fd\u6570","text":""},{"location":"LinuxSystem/Posix/#sem","title":"\u4fe1\u53f7\u91cf","text":""},{"location":"LinuxSystem/Posix/#_10","title":"\u4fe1\u53f7\u91cf\u51fd\u6570","text":""},{"location":"LinuxSystem/WebChatCode/","title":"\u4ee3\u7801\u89e3\u6790","text":"<p>\u8fd9\u91cc\u5199\u4ee3\u7801</p>"},{"location":"LinuxSystem/WebChatMind/","title":"\u601d\u7ef4\u5bfc\u56fe","text":"<p>\u5207\u6362\u5230\u5176\u5b83\u6587\u7ae0\u7684\u65b9\u5f0f:</p> <ul> <li>\u5728\u6587\u4e2d\u672b\u5c3e\u53ef\u5207\u6362\u5230\u4e0a\u4e00\u7ae0/\u4e0b\u4e00\u7ae0</li> <li>\u70b9\u8fd9\u91cc\u7f51\u7edc\u804a\u5929\u5ba4\u4ee3\u7801\u5206\u6790</li> <li>PC\u7aef\u53ef\u4f7f\u7528\u5feb\u6377\u952e</li> </ul> Markmap"},{"location":"MindMaps/Mind/","title":"Sakura_JI\u7684\u77e5\u8bc6\u5e93","text":"<p>\u5199\u81ea\u5df1\u77e5\u8bc6\u5e93\u7684\u601d\u7ef4\u5bfc\u56fe\u662f\u4e00\u4e2a\u5f88\u7d2f\u4eba\u4f46\u6536\u83b7\u9887\u4e30\u7684\u4e8b\u60c5\uff0c\u4e8b\u60c5\u4f17\u591a\uff0c\u6240\u4ee5\u6709\u65f6\u95f4\u5c31\u4f1a\u81ea\u5df1\u603b\u7ed3\uff0c \u540c\u65f6\u6bcf\u4e2a\u77e5\u8bc6\u70b9\u7684\u8d85\u94fe\u63a5\u4e5f\u5f88\u96be\u9053\uff0c\u4f46\u8fd8\u662f\u5e0c\u671b\u81ea\u5df1\u6301\u7eed\u603b\u7ed3\u5230\u4f4d\uff01\u540c\u65f6\u968f\u4e4b\u5bf9\u524d\u7aef\u7684\u77e5\u8bc6\u4e86\u89e3\uff0c \u5e0c\u671b\u81ea\u5df1\u4ee5\u540e\u53ef\u4ee5\u5199\u51fa\u50cfObsidian\u4e2d\u7684\u53cc\u94fe,\u52a0\u6cb9\u5c11\u5e74\uff01</p> Markmap"},{"location":"Programing_Language/Introduction/","title":"Introduction","text":"<p>\u6211\u5c06\u5728\u8fd9\u91cc\u590d\u4e60\u548c\u8bb0\u5f55\u7f16\u7a0b\u8bed\u8a00\u7684\u77e5\u8bc6\uff0c\u5e76\u5c06\u5b83\u4eec\u4ee5\u7b14\u8bb0\u7684\u5f62\u5f0f\u5c55\u73b0\u51fa\u6765\uff0c\u6682\u65f6\u5b66\u4e60\u7684\u8bed\u8a00\u6709C/C++\uff0c\u672a\u6765\u8981\u5b66\u4e60\u7684\u8bed\u8a00\u6709Python\uff0cJava...</p>"},{"location":"Programing_Language/C/C_language/","title":"\u6a21\u677f","text":"<p><code>C\u8bed\u8a00\u7684\u57fa\u7840\u6a21\u677f</code></p> start<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nreturn 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nprintf(\"\u6211\u7231\u6b7bGitHub\u4e86 \\n\");\nreturn 0;\n}\nchar * My_strcpy(char *dest , const char *src)\n{\nwhile(*src)\n{\n*dest = *src;\ndest++;\nsrc++;\n}\nreturn dest;\n}\n</code></pre>"},{"location":"Programing_Language/C/array/","title":"\u6570\u7ec4","text":"<p>\u6570\u7ec4\u662f\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5b58\u50a8\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u88ab\u5b58\u50a8\u5728\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002</p> <p>\u7279\u70b9:</p> <ul> <li>\u5b9a\u4e49\u76f8\u540c\u7c7b\u578b\u7684\u82e5\u5e72\u5143\u7d20</li> <li>\u6570\u7ec4\u5404\u4e2a\u5143\u7d20\u5730\u5740\u7a7a\u95f4\u8fde\u7eed</li> <li>\u6570\u7ec4\u540d\u662f\u6570\u7ec4\u7684\u9996\u5143\u7d20\u5730\u5740\uff0c\u4e5f\u662f\u6574\u4e2a\u6570\u7ec4\u7684\u9996\u5730\u5740</li> </ul> <p>\u58f0\u660e\u6570\u7ec4: \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d[\u5143\u7d20\u4e2a\u6570]</p> <ul> <li>\u6570\u636e\u7c7b\u578b: \u8868\u793a\u7684\u662f\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u662fint\u3001char\u3001float\u7b49\u7b49,\u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\u3001\u6307\u9488\u3001\u7ed3\u6784\u4f53\u7b49</li> <li>\u53d8\u91cf\u540d: \u7b26\u5408\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219</li> <li>\u5143\u7d20\u4e2a\u6570: \u53ea\u80fd\u662f\u5e38\u91cf</li> </ul> <p>\u6570\u7ec4\u5927\u5c0f = \u5143\u7d20\u5927\u5c0f*\u5143\u7d20\u4e2a\u6570</p> <p>\u521d\u59cb\u5316\u6570\u7ec4:</p> <ol> <li>\u6570\u636e\u7c7b\u578b  \u6570\u7ec4\u540d[ \u6570\u7ec4\u957f\u5ea6 ]; <p>\u53ea\u5b9a\u4e49\u4e0d\u8d4b\u503c\uff0c\u5168\u5c40\u53d8\u91cf\u4e0d\u8d4b\u503c--\u9ed8\u8ba4\u662f0,\u5c40\u90e8\u53d8\u91cf\u4e0d\u8d4b\u503c--\u9ed8\u8ba4\u4e3a\u968f\u673a\u6570</p> </li> <li>\u6570\u636e\u7c7b\u578b  \u6570\u7ec4\u540d[ \u6570\u7ec4\u957f\u5ea6 ] = { \u503c1\uff0c\u503c2 ...}; <p>\u53ef\u5b8c\u5168\u521d\u59cb\u5316\u548c\u90e8\u5206\u521d\u59cb\u5316\uff08\u672a\u8d4b\u503c\u7684\u90e8\u5206\u7cfb\u7edf\u9ed8\u8ba4\u4e3a0\uff09</p> </li> <li>\u6570\u636e\u7c7b\u578b  \u6570\u7ec4\u540d[ ] = { \u503c1\uff0c\u503c2 ...}; <p>\u4e0d\u5e26\u6570\u7ec4\u957f\u5ea6\u7684\u521d\u59cb\u5316\u5fc5\u5b9a\u4e3a\u5b8c\u5168\u521d\u59cb\u5316</p> </li> </ol> <p>\u904d\u5386\u6570\u7ec4:</p> <p>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5230\u3002\u6570\u7ec4\u7684\u7d22\u5f15\u901a\u5e38\u4ece0\u5f00\u59cb\uff0c\u5373\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a0.\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4f4d\u4e8e\uff08n-1)\u4e2a\u7d22\u5f15\u5904\u3002 \u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u57fa\u4e8e0\u7684\u7d22\u5f15\u3002\u6570\u7ec4\u4e5f\u53ef\u4ee5\u662f\u57fa\u4e8e\u5176\u5b83\u6570\u7684\uff0c\u6211\u4eec\u5c06\u5176\u79f0\u4e4b\u4e3a\u57fa\u4e8en\u7684\u7d22\u5f15\u3002</p>"},{"location":"Programing_Language/C/array/#_2","title":"\u4e00\u7ef4\u6570\u7ec4","text":"<pre><code>int num[10] = {0}; //\u6574\u578b\u6570\u7ec4 --4*10\nchar ch[20] = {0};//\u5b57\u7b26\u578b\u6570\u7ec4 --1*20\ndouble fl[10] = {0};//\u6d6e\u70b9\u578b\u6570\u636e --8*10\n</code></pre> \u9a8c\u8bc1\u6570\u7ec4\u9996\u5730\u5740\u53ca\u5143\u7d20\u5730\u5740\u8fde\u7eed<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nint num[10] = {1,2,3,4,5,6,7,8,9,0};\nprintf(\"num\u7684\u5730\u5740:%p\\n\",num);\nprintf(\"&amp;num\u7684\u5730\u5740:%p\\n\",&amp;num);\nprintf(\"num[0]\u7684\u5730\u5740:%p\\n\",&amp;num[0]);\nfor(int i = 0;i &lt; 10;i++)\n{\nprintf(\"num[%d]=%p\\n\",i,&amp;num[i]);\n}\n}\n</code></pre> \u5192\u6ce1\u6392\u5e8f\u6cd5<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nint num [10] ={0},i = 0,j = 0 ,temp = 0;\nint len = sizeof(num)/sizeof(num[0]);\nprintf(\"\u8bf7\u8f93\u5165\u5341\u4e2a\u6570\u5b57:\\n\");\nfor(i = 0;i &lt;len;i++)\n{\nscanf(\"%d\",&amp;num[i]);\n}\nfor(i = 0;i&lt;len-1;i++)\n{\nfor(j = 0; j &lt; len - i -1; j++ )\n{\nif(num[j] &lt; num[j+1])\n{\ntemp = num[j];\nnum[j] = num[j+1];\nnum[j+1] = temp;\n}\n}\n}\nfor(i = 0;i &lt;len;i++)\n{\nprintf(\"%d \",num[i]);\n}\n}\n</code></pre>"},{"location":"Programing_Language/C/floder/","title":"\u6587\u4ef6\u5b66\u4e60","text":""},{"location":"Programing_Language/C/floder/#-","title":"\u51fd\u6570:\u51fd\u6570\u540d--\u529f\u80fd--\u67e5","text":"<p>1.\u6253\u5f00:fopen(\"./1.txt\",\"r\");</p> <p>2.\u53c2\u6570:</p> <ul> <li>r:\u53ea\u8bfb\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u6253\u5f00\u5931\u8d25</li> <li>w:\u53ea\u5199\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u5e76\u6253\u5f00</li> <li>a:\u8ffd\u52a0\u5199\uff0c\u5149\u6807\u5728\u6587\u4ef6\u672b\u5c3e\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u521b\u5efa\u5e76\u6253\u5f00</li> <li>r+:\u53ef\u8bfb\u5199\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u6253\u5f00\u5931\u8d25</li> <li>w+:\u53ef\u8bfb\u5199,\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u5e76\u6253\u5f00</li> <li>a+:\u53ef\u8bfb\u53ef\u5199\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u5bf9\u6587\u4ef6\u662f\u8bfb\u64cd\u4f5c\uff0c\u5149\u6807\u5728\u6587\u4ef6\u5f00\u5934\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u5bf9\u6587\u4ef6\u662f\u5199\u64cd\u4f5c\uff0c\u5149\u6807\u5728\u6587\u4ef6\u672b\u5c3e(\u8ffd\u52a0\u5199)\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u5e76\u6253\u5f00</li> </ul> <p>3.\u5173\u95ed:fclose(\"./1.txt\")</p> <p>4.\u8bfb\u5199:</p> <ul> <li>\u5355\u5b57\u7b26:fputc('S',fp); fgetc(fp);</li> <li>\u5b57\u7b26\u4e32:fputs(char s,fp); fgets(char s,int size,fp);</li> </ul> <p>5.\u683c\u5f0f\u5316:</p> <ul> <li>fprintf(fp,\"\u683c\u5f0f\",...); fscanf(fp,\"\u683c\u5f0f\"\uff0c...); </li> <li>fwrite(&amp;\u5730\u5740,1\u6b21\u5199\u591a\u5c11,\u5199\u51e0\u6b21,fp)\uff1b//\u4ee5\u4e8c\u8fdb\u5236\u5199\u5165\u6587\u4ef6</li> <li>fread(&amp;\u5730\u5740,1\u6b21\u8bfb\u591a\u5c11,\u8bfb\u51e0\u6b21,fp)\uff1b//\u4ee5\u4e8c\u8fdb\u5236\u8bfb\u53d6\u6587\u4ef6</li> </ul> <p>6.\u5176\u4ed6\u51fd\u6570:</p> <ul> <li>rewind(fp);//\u5149\u6807\u79fb\u52a8\u5230\u6587\u4ef6\u8d77\u59cb\u4f4d\u7f6e\u3002</li> <li>fseek(fp,offset,whence);//\u5b9e\u73b0\u504f\u79fb\u91cfoffset\uff0cwhence:SEEK_SET--0 SEEK_CUR--1 SEEK_END--2</li> <li>ftell(fp) -- \u8ba1\u7b97\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5230\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf</li> <li>feof(fp): \u5224\u65ad\u6587\u4ef6\u662f\u5426\u8fbe\u5230\u6587\u4ef6\u672b\u5c3e(\u4f9d\u636e\u4e0a\u4e00\u6b21\u8bfb\u7684\u7ed3\u679c),\u6587\u4ef6\u7ed3\u675f\uff0c\u8fd4\u56de\u975e\u96f6\u503c;\u6587\u4ef6\u6ca1\u7ed3\u675f\uff0c\u8fd4\u56de0      </li> </ul> \u4fdd\u5b58\u4e00\u4e2a\u5b57\u7b26S\u52301.txt<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nFILE *fp = NULL;\nfp = fopen(\"./1.txt\",\"w+\");\nif(fp == NULL)\n{\nperror(\"fopen\");\nreturn 0;\n}\nfputc('S', fp);\nfclose(fp);\n}\nwhile(fgetc(fp) !=-1 )\n{\nfseek(fp,-1,1);\nfscanf(fp,\"%d\");//while\u5faa\u73af\u662f\u901a\u8fc7\u5149\u6807\u79fb\u52a8\n}\n</code></pre>"},{"location":"Programing_Language/C/keywords/","title":"\u6a21\u5757\u5316","text":"<p>\u5168\u5c40\u53d8\u91cf: \u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5916\u90e8\u7684\u53d8\u91cf</p> <ul> <li>\u751f\u547d\u5468\u671f: \u4ece\u5b9a\u4e49\u5904\u5f00\u59cb\uff0c\u5230\u5f53\u524d.c\u7ed3\u675f</li> <li>\u4f5c\u7528\u8303\u56f4: \u4ece\u5b9a\u4e49\u5904\u5f00\u59cb\uff0c\u5230\u5f53\u524d.c\u7ed3\u675f</li> </ul> <p>\u5c40\u90e8\u53d8\u91cf: \u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u90e8\u7684\u53d8\u91cf</p> <ul> <li>\u751f\u547d\u5468\u671f: \u4ece\u5b9a\u4e49\u5904\u5f00\u59cb\uff0c\u5230\u5f53\u524d\u51fd\u6570\u7ed3\u675f</li> <li>\u4f5c\u7528\u8303\u56f4: \u4ece\u5b9a\u4e49\u5904\u5f00\u59cb\uff0c\u5230\u5f53\u524d\u51fd\u6570\u7ed3\u675f</li> </ul>"},{"location":"Programing_Language/C/keywords/#_2","title":"\u58f0\u660e\u548c\u5b9a\u4e49","text":"<p>\u5b66\u4e60\u4ee5\u4e0b\u5185\u5bb9\u524d\u6211\u89c9\u5f97\u6709\u5fc5\u8981\u5b66\u4e60\u4e00\u4e0b\u58f0\u660e\u548c\u5b9a\u4e49<sup>1</sup></p> <p>\u58f0\u660e: \u7528\u4e8e\u8bf4\u660e\u6bcf\u4e2a\u6807\u8bc6\u7b26\u7684\u542b\u4e49\uff0c\u800c\u5e76\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u6807\u8bc6\u7b26\u9884\u5b58\u50a8\u7a7a\u95f4 </p> <p>\u5b9a\u4e49: \u9884\u7559\u5b58\u50a8\u7a7a\u95f4\u7684\u58f0\u660e\u79f0\u4e3a\u5b9a\u4e49</p> \u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49<pre><code>int i;            // \u540c\u65f6\u58f0\u660e\u548c\u5b9a\u4e49\u53d8\u91cfi\uff0c\u672a\u521d\u59cb\u5316(\u5f88\u591a\u4eba\u53ef\u80fd\u4e0d\u7406\u89e3\uff0ci\u5176\u5b9e\u5df2\u7ecf\u6709\u4e86\u521d\u59cb\u503c\u662f\u968f\u673a\u503c\uff0c\u5728\u5168\u5c40\u53d8\u91cf\u662f\u662f0)\nint i = 1;        // \u540c\u65f6\u58f0\u660e\u548c\u5b9a\u4e49\u53d8\u91cfi\uff0c\u5e76\u4e14\u521d\u59cb\u5316\nextern int i;     // \u4ec5\u4ec5\u58f0\u660e\u53d8\u91cfi\uff0c\u8868\u660e\u53d8\u91cfi\u7684\u5b9a\u4e49\u5728\u5176\u5b83\u4f4d\u7f6e\nextern int i = 1; // \u540c\u65f6\u58f0\u660e\u548c\u5b9a\u4e49\u53d8\u91cfi\uff0c\u5e76\u4e14\u521d\u59cb\u5316\uff0c\u53ef\u5ffd\u7565extern\n</code></pre> <p>\u70b9\u51fb\u53ef\u8df3\u8f6c\u5230extern \u53ef\u5728\u4e0b\u6587\u5b66\u4e60</p> \u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49<pre><code>int sum(int a, int b);  // \u58f0\u660esum\u51fd\u6570\nextern int sum(int a, int b); // \u7b49\u4ef7\u4e0a\u9762\uff0c\u58f0\u660esum\u51fd\u6570,\u53ef\u5ffd\u7565extern\nint sum(int a, int b)   // \u58f0\u660e\u548c\u5b9a\u4e49sum\u51fd\u6570\u5177\u4f53\u5b9e\u73b0\n{\nreturn a+b;\n}\n</code></pre> \u7ed3\u6784\u4f53\u7684\u58f0\u660e\u548c\u5b9a\u4e491<pre><code>struct student\n{\nchar name[10];\nint age;\nchar sex[4];\n};// \u58f0\u660e\u540c\u65f6\u5b9a\u4e49\u7ed3\u6784\u7c7b\u578b;\nstruct student stu1,stu2;// \u58f0\u660e\u548c\u5b9a\u4e49\u7ed3\u6784\u53d8\u91cfstu1,stu2;\n</code></pre> \u7ed3\u6784\u4f53\u7684\u58f0\u660e\u548c\u5b9a\u4e492<pre><code>struct student;// \u4ec5\u4ec5\u58f0\u660e\u7ed3\u6784\u4f53student;\n..... // \u8fd9\u91cc\u53ef\u4ee5\u662f\u5176\u5b83\u4ee3\u7801\nstruct student\n{\nchar name[10];\nint age;\nchar sex[4];\n};// \u5b9a\u4e49\u7ed3\u6784\u4f53student\nstruct student stu1,stu2;// \u58f0\u660e\u548c\u5b9a\u4e49\u7ed3\u6784\u4f53\u53d8\u91cf\n;\n</code></pre> \u7ed3\u6784\u4f53\u7684\u58f0\u660e\u548c\u5b9a\u4e493<pre><code>// \u540c\u65f6\u58f0\u660e\u548c\u5b9a\u4e49\u7ed3\u6784\u7c7b\u578b\u548c\u7ed3\u6784\u4f53\u53d8\u91cf\n// \u7701\u7565\u7ed3\u6784\u7c7b\u578b\u540d\u79f0\uff0c\u6b64\u65f6\u8be5\u533f\u540d\u7ed3\u6784\u7c7b\u578b\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u4e86\nstruct\n{\nchar name[10];\nint age;\nchar sex[4];\n} stu1,stu2;\n</code></pre> \u6570\u7ec4\u7684\u58f0\u660e\u548c\u5b9a\u4e49<pre><code>int a[100]; // \u58f0\u660e\u548c\u5b9a\u4e49\u6570\u7ec4\nextern int a[100];   // \u4ec5\u4ec5\u58f0\u660e\u6570\u7ec4\nextern int a[];      // \u4ec5\u4ec5\u58f0\u660e\u6570\u7ec4\n</code></pre> <p>\u597d\u4e86\uff0c\u770b\u5230\u8fd9\u91cc\u4f30\u8ba1\u4f60\u4e5f\u80fd\u660e\u767d\u4e86\uff0c\u4ec0\u4e48\u662f\u58f0\u660e\uff0c\u4ec0\u4e48\u662f\u5b9a\u4e49\uff0c\u603b\u7ed3\u4e00\u4e0b:\u53ea\u6709\u5f53\u58f0\u660e\u4e5f\u662f\u5b9a\u4e49\u65f6\uff0c\u58f0\u660e\u624d\u53ef\u4ee5\u6709\u521d\u59cb\u5316\u503c\uff0c\u56e0\u4e3a\u53ea\u6709\u5b9a\u4e49\u624d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002</p> <p>\u90a3\u4e3a\u4ec0\u4e48\u8981\u8981\u4e86\u89e3\u58f0\u660e\u548c\u5b9a\u4e49\u5462?\u56e0\u4e3a\u8fd9\u6837\u6709\u5229\u4e8e\u5b66\u4e60static\u548cextern\u89c1\u4e0b\u6587\uff1b</p>"},{"location":"Programing_Language/C/keywords/#define","title":"#define(\u9884\u7f16\u8bd1\u6307\u4ee4)","text":"<p>\u683c\u5f0f\u4e00:  <code>#define</code> + \u5b8f\u540d + \u5b8f\u4f53</p> <p>\u5bf9\u4e8e\u8ba1\u7b97\u673a\u6765\u8bf4\uff0c\u5728\u9884\u5904\u7406\u65f6\u523b\uff0c\u5b8f\u660e\u5c31\u4f1a\u88ab\u5b8f\u4f53\u66ff\u6362\uff0c\u5e76\u4e14\u662f\u539f\u6837\u66ff\u6362</p> <pre><code>//\u4f8b\u5982\n#define PI 3.1415926\n#define max(a,b) a&gt;b?a:b\n#define arr(a,b) a*b // arr(1+5,2+6) -&gt; 1+5*2+6\n</code></pre> <p>\u683c\u5f0f\u4e8c: <code>#define</code> + \u5b8f\u540d</p> <pre><code>#ifndef _HEAD_H_\n#define _HEAD_H_\n#endif\n</code></pre>"},{"location":"Programing_Language/C/keywords/#_3","title":"\u5173\u952e\u5b57","text":""},{"location":"Programing_Language/C/keywords/#static","title":"static(\u9759\u6001\u53d8\u91cf)","text":"<p>\u89e3\u91ca:</p> <ol> <li>\u4fee\u9970\u5c40\u90e8\u53d8\u91cf: \u5ef6\u957f\u58f0\u660e\u5468\u671f(\u540c\u5168\u5c40\u53d8\u91cf)\uff0c\u4f5c\u7528\u8303\u56f4\u4e0d\u53d8(\u5f53\u524d\u51fd\u6570)</li> <li>\u4fee\u9970\u5168\u5c40\u53d8\u91cf:</li> </ol> <p>\u79c1\u6709\u5316\uff0c\u4ec5\u4ec5\u80fd\u88ab\u5f53\u524d.c\u4f7f\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u5b83.c\u501f\u7528</p> <ol> <li>\u4fee\u9970\u51fd\u6570:</li> </ol> <p>\u79c1\u6709\u5316\uff0c\u4ec5\u4ec5\u80fd\u88ab\u5f53\u524d.c\u4f7f\u7528\uff0c\u4e0d\u80fd\u88ab\u5176\u4ed6.c\u501f\u7528</p>"},{"location":"Programing_Language/C/keywords/#_4","title":"\u5185\u90e8\u51fd\u6570\u548c\u5916\u90e8\u51fd\u6570","text":"<p>\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u5168\u5c40\u7684\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u88ab\u5f53\u524d.C\u6587\u4ef6\u7684\u53e6\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5176\u5b83.C\u6587\u4ef6\u8c03\u7528\uff0c\u4f46\u662f\u4e5f\u53ef\u6307\u5b9a\u51fd\u6570\u4e0d\u80fd\u88ab\u5176\u4ed6\u6587\u4ef6\u8c03\u7528\u3002 \u6839\u636e\u51fd\u6570\u80fd\u5426\u88ab\u5176\u5b83\u6e90\u6587\u4ef6\u8c03\u7528\uff0c\u5c06\u51fd\u6570\u5206\u4e3a\u5185\u90e8\u51fd\u6570\u548c\u5916\u90e8\u51fd\u6570\u3002</p> <p>\u5b9a\u4e49\u5185\u90e8\u51fd\u6570\u65f6\uff0c\u5728\u51fd\u6570\u540d\u548c\u51fd\u6570\u7c7b\u578b\u524d\u9762\u52a0static\u3002 <pre><code>\u5373\uff1astatic \u53d8\u91cf\u7c7b\u578b \u51fd\u6570\u540d \uff08\u53c2\u6570\uff09\n\u5982\uff1astatic int FUNC(int a,int b);\n</code></pre></p> <p>\u4e00\u4e2a\u5de5\u7a0b\u9879\u76ee\u53ef\u80fd\u9700\u8981\u5f88\u591a\u4eba\u5458\u7684\u53c2\u4e0e\uff0c\u5f53\u4f7f\u7528\u5f15\u7528\u5176\u5b83.c\u7684\u5934\u6587\u4ef6\u65f6\uff0c\u4f60\u4eec\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u51fd\u6570\u540d, \u6b64\u65f6\u7f16\u8bd1\u5c31\u4f1a\u62a5\u9519\uff0c\u90a3\u4e48\u5982\u679c\u5728\u51fd\u6570\u540d\u524d\u52a0\u4e0astatic \u79c1\u6709\u5316 \u5c31\u53ef\u4ee5\u4e0d\u88ab\u5176\u5b83\u6587\u4ef6\u8c03\u7528\u4e86\uff0c\u5c31\u9632\u6b62\u91cd\u540d\u7684\u5b58\u5728\u4e86,\u4f46\u6211\u73b0\u5728\u8fd8\u5b58\u6709\u7591\u95ee\uff0c \u5c31\u662f\u6211\u662f\u9632\u6b62\u91cd\u540d\u4e86\uff0c\u4f46\u662f\u6211\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5c31\u7528\u4e0d\u4e86\u4e86\uff0c\u90a3\u8fd9\u4e2a\u610f\u4e49\u662f\u4ec0\u4e48\u5462...\u610f\u4e49\u5c31\u662f \u8fd9\u4e2a\u51fd\u6570\u3001\u6216\u8005\u53d8\u91cf \u53ea\u5728\u5f53\u524d\u6587\u4ef6\u4e2d\u7528\u3002 \u7136\u540e\u5c31\u662f\u591a\u5199\u4ee3\u7801\u591a\u603b\u7ed3\uff01\uff01\uff01</p> <p>\u5916\u90e8\u51fd\u6570\u5728\u4e0b\u9762extern\u4e2d\u89e3\u91ca</p>"},{"location":"Programing_Language/C/keywords/#extern","title":"extern(\u5916\u90e8\u53d8\u91cf)","text":"<p>\u5916\u90e8\u53d8\u91cf:</p> <p>\u5168\u5c40\u53d8\u91cf\u53ea\u80fd\u88ab\u5b9a\u4e49\u4e00\u6b21\uff0c\u5982\u679c\u5176\u4ed6\u6a21\u5757\u8981\u4f7f\u7528\u8be5\u5168\u5c40\u53d8\u91cf\uff0c\u9700\u8981\u901a\u8fc7\u5916\u90e8\u53d8\u91cf\u7684\u58f0\u660e\u3002</p> <p>\u5916\u90e8\u53d8\u91cf\u7684\u683c\u5f0f:  extern \u53d8\u91cf\u540d\u8868\uff1b</p> <p>(1) \u5728\u5b9a\u4e49\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5728\u51fd\u6570\u7684\u6700\u5de6\u7aef\u52a0\u5173\u952e\u5b57extern\uff0c\u5219\u8868\u793a\u6b64\u51fd\u6570\u662f\u5916\u90e8\u51fd\u6570\uff0c\u53ef\u4f9b\u5176\u4ed6\u6587\u4ef6\u8c03\u7528\u3002 C\u8bed\u8a00\u89c4\u5b9a\uff0c\u82e5\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\u7701\u7565extern\uff0c\u5219\u9ed8\u8ba4\u4e3a\u5916\u90e8\u51fd\u6570\u3002</p> <p>(2) \u5728\u9700\u8981\u8c03\u7528\u6b64\u51fd\u6570\u7684\u6587\u4ef6\u4e2d\uff0c\u7528extern\u5bf9\u51fd\u6570\u4f5c\u58f0\u660e\uff0c\u8868\u793a\u8be5\u51fd\u6570\u662f\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u5916\u90e8\u51fd\u6570\u3002</p> <p>\u5916\u90e8\u53d8\u91cf:\u53ea\u8d77\u8bf4\u660e\u4f5c\u7528\uff0c\u4e0d\u5206\u914d\u5b58\u50a8\u5355\u5143\uff0c\u5bf9\u5e94\u5b58\u50a8\u5355\u5143\u5728\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\u65f6\u5206\u914d\u3002</p>"},{"location":"Programing_Language/C/keywords/#sizeof","title":"sizeof(\u6c42\u5927\u5c0f )","text":"<p>\u9996\u5148\u786e\u5b9asizeof\u662f\u5173\u952e\u5b57\uff0c\u800c\u4e0d\u662f\u51fd\u6570\uff0c\u5176 </p> <ol> <li> <p>\u58f0\u660e\u548c\u5b9a\u4e49\u7684\u90e8\u5206\u7b14\u8bb0\u5b66\u4e60\u4e8e\u77e5\u4e4e\u4e0a\u7684\u54ea\u6709\u5c81\u6708\u9759\u597d \u21a9</p> </li> </ol>"},{"location":"Programing_Language/C/link/","title":"\u94fe\u8868","text":""},{"location":"Programing_Language/C/link/#_2","title":"\u521d\u59cb\u5316\u94fe\u8868\u8282\u70b9","text":"<p>\u5728stdlib.h\u6587\u4ef6\u4e2d\u7ed9malloc\u51fd\u6570\u63d0\u4f9b\u5e93 <sup>1</sup> ,string.h\u6587\u4ef6\u4e2d\u7ed9memset\u51fd\u6570\u63d0\u4f9b\u5e93<sup>2</sup></p> \u94fe\u8868\u8282\u70b9Struc.h\u6587\u4ef6<pre><code>#ifndef _STRUC_H_\n#define _STRUC_H_\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nstruct Stu {\nint id;\nchar name[30];\nfloat grade;\n};// (1) \nstruct NODE{\nstruct Stu stu;\nstruct NODE *addr;\n};// (2)\nstruct NODE *Creat_Head(void);\n#endif // !DEBUG\n</code></pre> <ol> <li> \u5b9a\u4e49\u5b66\u751f\u7ed3\u6784\u4f53\u5305\u62ec\u5b66\u53f7\uff0c\u59d3\u540d\u548c\u6210\u7ee9\u3002</li> <li> \u5b9a\u4e49\u94fe\u8868\uff0c\u7b2c\u4e00\u4e2a\u5b58\u653e\u5b66\u751f\u7ed3\u6784\u4f53\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u5b58\u653e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740</li> </ol> \u94fe\u8868\u8282\u70b9.c\u51fd\u6570<pre><code>#include \"Struc.h\"\nstruct NODE *Creat_head(void)// (1)\n{\nstruct NODE *head = (struct NODE *)malloc(sizeof(struct NODE));\nif(head == NULL)\n{  printf(\"\u521b\u5efa\u5931\u8d25\"\\n);// (2)\nreturn NULL;\n}\nmemset(head,0,sizeof(struct Stu));// (3)\nhead-&gt;addr = NULL;\nreturn head;\n}\n</code></pre> <ol> <li> \u521d\u59cb\u5316\u94fe\u8868\u5934\u90e8\u51fd\u6570</li> <li> malloc\u51fd\u6570\u6709\u53ef\u80fd\u7533\u8bf7\u7a7a\u95f4\u5931\u8d25\uff0c\u5f53\u7136\u8fd9\u79cd\u60c5\u51b5\u51e0\u4e4e\u4e0d\u4f1a\u5b58\u5728\u4f46\u8981\u77e5\u9053</li> <li> memset\u51fd\u6570\u5bf9head\u5730\u5740\u4e2d\u521d\u59cb\u5316\u6570\u636eStu\uff0c\u5e76\u8d4b\u4e880\u503c\uff0c\u6240\u4ee5\u4e0b\u8fb9\u8fd8\u8981\u5bf9addr\u8fdb\u884c\u8d4bNULL \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u521d\u59cb\u5316NODE</li> </ol>"},{"location":"Programing_Language/C/link/#_3","title":"\u5b66\u751f\u7ba1\u7406\u7cfb\u7edf\u7684\u4e3b\u51fd\u6570","text":"\u4e3b\u51fd\u6570\u7684\u5934\u6587\u4ef6-main.h<pre><code>#ifndef _MAIN_H_\n#define _MAIN_H_\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include \"Struc.h\"\n#include \"Menu.h\"\n#include \"Add.h\"\n#include \"Change.h\"\n#include \"Fin.h\"\n#include \"print.h\"\n#include \"delt.h\"\n#include \"rank1.h\"\n#include \"insert.h\"\nenum{quit,add,del,chang,find,rank,prin,inser};\n#endif // !DEBUG\n</code></pre> main.c<pre><code>#include\"main.h\"\nint main() {\nstruct NODE *head = Creat_Head();\nif(head == NULL)\n{\nprintf(\"\u5f00\u8f9f\u7a7a\u95f4\u5931\u8d25\\n\");\nreturn 0; }\nwhile(1)\n{\nint num = Menu();\nswitch(num)\n{\ncase add :Add(head); break;\ncase del :delt(head); break;\ncase chang :change(head); break;\ncase find : fin(head);break;\ncase rank : rank1(head); break;\ncase prin : print(head);break;\ncase inser : insert(head);break;\ncase quit : printf(\"\u6b22\u8fce\u4e0b\u6b21\u4f7f\u7528\\n\");return 0;\ndefault: printf(\"\u8f93\u5165\u6709\u8bef\u8bf7\u91cd\u65b0\u8f93\u5165\\n\");\n}\n}\n}\n</code></pre>"},{"location":"Programing_Language/C/link/#_4","title":"\u904d\u5386\u5b66\u751f\u7ba1\u7406\u7cfb\u7edf","text":"print.h\u6587\u4ef6<pre><code>#ifndef _PRINT_H_\n#define _PRINT_H_\n#include &lt;stdio.h&gt;\n#include \"Struc.h\"\nvoid print(struct NODE *head);\n#endif // !DEBUG\n</code></pre> print.\u51fd\u6570<pre><code>#include \"print.h\"\nvoid print(struct NODE *head)\n{\nstruct NODE *temp = head-&gt;addr;\nwhile(temp != NULL)\n{    printf(\"\u59d3\u540d\u662f:%s \u5b66\u53f7\u662f:%d \u6210\u7ee9\u662f:%.1f\\n\",temp-&gt;stu.name,temp-&gt;stu.id,temp-&gt;stu.grade);\ntemp = temp-&gt;addr;\n}\n}\n</code></pre>"},{"location":"Programing_Language/C/link/#_5","title":"\u6392\u5e8f\u5b66\u751f\u7ba1\u7406\u7cfb\u7edf","text":"\u6392\u5e8f.c\u51fd\u6570<pre><code>#include \"rang1.h\"\nvoid rank1(struct NODE *head)\n{\nstruct NODE *tmp1,*tmp2;\nstruct Stu a;\nfor(tmp1 = head-&gt;addr;tmp1-&gt;addr != NULL;tmp1 = tmp1 -&gt;addr)\n{\nfor(tmp2= head-&gt;addr;tmp2-&gt;addr !=NULL;tmp2 = tmp2-&gt;addr)\n{\nif(tmp2-&gt;stu.grade &lt; tmp2-&gt;addr-&gt;stu.grade)\n{\na = tmp2-&gt;stu;\ntmp2-&gt;stu = tmp2-&gt;addr-&gt;stu;\ntmp2-&gt;addr-&gt;stu = a;\n}\n}\n}\nprint(head);\n}\n</code></pre> \u5bf9\u6392\u5e8f\u7684\u7406\u89e3 <p>\u4f7f\u7528\u94fe\u8868\u901a\u8fc7\u5192\u6ce1\u6392\u5e8f\u6cd5\uff0c\u4ee5\u6210\u7ee9\u7684\u9ad8\u4f4e\u5bf9\u5b66\u751f\u7ba1\u7406\u7cfb\u7edf\u8fdb\u884c\u6392\u5e8f\u3002\u5176\u5916\u73af\u548c\u5185\u73af\u7684\u5faa\u73af\u7ed3\u6784\u867d\u7136\u4e00\u6837\uff0c\u4f46\u610f\u601d\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u5916\u73af\u63a7\u5236\u5faa\u73af\u7684\u6b21\u6570\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728\u5192\u6ce1\u6392\u5e8f\u6cd5\u4e2d\uff0c\u4e00\u5171\u8fdb\u884c\u6570\u636e-1\u6b21\uff0c\u7531\u4e8e\u6211\u4eec\u5934\u8282\u70b9\u4e0d\u5b58\u653e\u51fd\u6570(7\u4e2a\u8282\u70b9\uff0c6\u4e2a\u6709 \u6570\u636e\u5faa\u73af\u8fdb\u884c5\u6b21).\u6240\u4ee5tmp1 = head-&gt;addr;\u5c31\u5c06\u5934\u8282\u70b9\u6392\u9664\uff0c\u7136\u540e\u5728\u6761\u4ef6\u4e2dtmp1-&gt;addr,\u94fe\u63a5\u5230\u4e0b\u4e00\u4e2aaddr,\u5c3e\u8282\u70b9\u6ca1\u8fdb\u53bb\uff0c \u6240\u4ee5\u5224\u65ad\u4e2d\u610f\u601d\u5c31\u53d8\u6210\u4e86 tmp1-&gt;addr-&gt;addr \u4e5f\u5c31\u8fdb\u884c\u4e86\u51cf\u4e00\u6b21.</p> <p>\u5185\u73af\u63a7\u5236\u4e24\u4e2a\u6570\u5b57\u7684\u6bd4\u8f83\uff0c\u5176\u542b\u4e49\u5c31\u548c\u666e\u901a\u5192\u6ce1\u6cd5\u4e00\u6837\uff0c\u666e\u901a\u5192\u6ce1\u6cd5\u6211\u4eec\u6839\u636e\u89c4\u5f8b\u77e5\u9053\u4e24\u4e24\u7ec4\u5408\uff0c\u6b21\u6570\u7b49\u4e8e\u5269\u4f59\u6570\u636e\u6570\u91cf-1 \u548c\u5916\u73af \u521d\u59cb\u503c+\u6761\u4ef6+\u5224\u65ad \u7ec4\u5408\u4e00\u6837\uff0c\u5c31\u662f\u8fdb\u884c\u4e86\u51cf\u4e24\u6b21\uff0c\u8fd9\u6837\u5c31\u904d\u5386\u6210\u529f\u5566\uff01 </p>"},{"location":"Programing_Language/C/link/#_6","title":"\u904d\u5386\u8282\u70b9","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nstruct NODE *head = Creat_Head();\nstruct NODE *tmp = head-&gt;addr; // (1)\nwhile(tmp != NULL)\n{\nprintf(\"\u5b66\u751f\u7684\u59d3\u540d:%s,\u5b66\u751f\u7684\u5b66\u53f7:%d,\u5b66\u751f\u7684\u6210\u7ee9:%.1f\\n\",tmp-&gt;Stu.name,tmp-&gt;Stu.id,tmp-&gt;Stu.grade);\ntmp = tmp-&gt;addr; // (2)\n}\n</code></pre> <ol> <li> tmp\u6307\u5411\u7684\u662f\u8282\u70b9\u4e2d\u7684\u5730\u5740 </li> <li> \u8fd9\u91cc\u662f\u6bcf\u6b21tmp\u90fd\u5c06\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5730\u5740\uff0c\u8fd9\u6837\u5c31\u4fc3\u6210\u4e86\u94fe\u8868\u7684\u5f62\u6210\uff0c\u8fd9\u79cd\u662f\u8fdb\u5165\u94fe\u8868\u7684\u65b9\u5f0f</li> </ol>"},{"location":"Programing_Language/C/link/#_7","title":"\u5b58\u653e\u6570\u636e","text":"\u94fe\u8868\u901a\u8fc7\u904d\u5386\u5b58\u653e\u6570\u636e<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\nstruct NODE *head = Creat_Head();\n</code></pre> <ol> <li> <p>malloc\u51fd\u6570\u5b9a\u4e49\uff1a\u00a0\u21a9</p> </li> <li> <p>memset\u51fd\u6570\u5b9a\u4e49\uff1a\u00a0\u21a9</p> </li> </ol>"},{"location":"Programing_Language/C/main/","title":"int main(int argc,char *argv[])","text":"<p>\u5bf9main\u7684\u89e3\u8bfb:\u521d\u59cb\u5b66\u4e60\u662f\uff0c<code>main</code>\u540e\u9762\u4e00\u822c\u662f<code>(void)</code>,\u8fd9\u5bf9\u4e8e\u521d\u5b66\u4e60C\u8bed\u8a00\u7684\u5b66\u8005\u662f\u975e\u5e38\u53cb\u597d\u7684\uff0c\u4f46\u968f\u7740\u5b66\u4e60\u7684\u6df1\u5165\uff0c\u6211\u4eec\u8981\u4e86\u89e3 <code>main</code>\u7684\u7279\u6b8a\u7528\u6cd5\uff0c\u6bd5\u7adf<code>main</code>\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570</p> <p>argc : \u547d\u4ee4\u884c\u81ea\u52a8\u7edf\u8ba1argv\u7684\u4e2a\u6570</p> <p>char *argv[]:  ./a.out + \u53c2\u6570\u4e00 + \u53c2\u6570\u4e8c</p> <p>\u4f8b\u5982:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main(int argc,char *argv[])\n{\nif( argc != 4)\n{\nprintf(\"\u53c2\u6570\u6709\u8bef\\n\");\nreturn 0;\n}\nint a = atoi(argv[1]);\nint b = atoi(argv[3]);\nswitch(*argv[2])\n{\ncase '+': printf(\"argv[1]+argv[3]=%d\\n\",a+b);break;\ncase '-': printf(\"argv[1]-argv[3]=%d\\n\",a-b);break;\ncase '*': printf(\"argv[1]*argv[3]=%d\\n\",a*b);break;// (1)\ncase '/': {\nif(atoi(argv[3]) != 0) printf(\"argv[1]/argv[3]=%d\\n\",a/b);\nelse printf(\"argv[3]=0\u65f6\u4e0d\u80fd\u5f53\u88ab\u9664\u6570\\n\");\nbreak;\n}\n}\nreturn 0;\n}\n</code></pre> <ol> <li> \u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528 * \u53f7\u9700\u8981\u4f7f\u7528 <code>'*'</code> \u6216\u8005 <code>\\*</code> \u5c06\u5176\u7279\u6b8a\u542b\u4e49\u53d6\u6d88</li> </ol> atoi <p>include\u5e93\u4e2d\u542b\u6709int atoi(const char *nptr); <p>\u7528\u6cd5\uff1a\u5c06\u5b57\u7b26\u4e32\u91cc\u7684\u6570\u5b57\u5b57\u7b26\u8f6c\u5316\u4e3a\u6574\u5f62\u6570\u3002\u8fd4\u56de\u6574\u5f62\u503c\u3002</p> <p>\u6ce8\u610f\uff1a\u8f6c\u5316\u65f6\u8df3\u8fc7\u524d\u9762\u7684\u7a7a\u683c\u5b57\u7b26\uff0c\u76f4\u5230\u9047\u4e0a\u6570\u5b57\u6216\u6b63\u8d1f\u7b26\u53f7\u624d\u5f00\u59cb\u505a\u8f6c\u6362\uff0c\u800c\u518d\u9047\u5230\u975e\u6570\u5b57\u6216\u5b57\u7b26\u4e32\u7ed3\u675f\u65f6(\u2019/0\u2019)\u624d\u7ed3\u675f\u8f6c\u6362\uff0c\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u3002</p> <p></p>"},{"location":"Programing_Language/C/pointer/","title":"\u6307\u9488","text":"<p>\u6307\u9488\uff1a</p> <pre><code>\u6307\u9488\u5c31\u662f\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u8be5\u6570\u636e\u7c7b\u578b\u5c31\u662f\u4e13\u95e8\u7528\u6765\u5b58\u653e\u5730\u5740\u7684\n\n\u5b9a\u4e49: \u6307\u9488\u6307\u5411\u7684\u7a7a\u95f4\u7c7b\u578b * \u53d8\u91cf\u540d\uff1b\n</code></pre> <p>\u89e3\u6307\u9488\uff1a</p> <pre><code>\u901a\u8fc7\u6307\u9488\uff0c\u62ff\u5230\u6307\u9488\u6307\u5411\u7684\u7a7a\u95f4\n</code></pre> <p>\u51fd\u6570\u7684\u9012\u5f52:</p> <pre><code>\u51fd\u6570\u81ea\u8eab\u8c03\u7528\u81ea\u8eab\uff1a\n- 1.\u5fc5\u987b\u5b58\u5728\u9012\u5f52\u7684\u7ed3\u675f\u6761\u4ef6\n- 2.\u4e00\u822c\u4f1a\u6709\u9012\u5f52\u7684\u8d77\u59cb\u503c\n- 3\n</code></pre> \u8c03\u7528<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nint n = 5;\nint num = Fun(n);\nreturn 0;\n}\nint Fun(int n)\n{\nint age = 0;\nif(n == 1)\n{\nage = 10;\n}\nelse\n{\nage = Fun(n - 1) +2 ;    }\nreturn age;\n}\n</code></pre> \u5b9e\u73b0n!\u9636\u4e58<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\nint n = 1;\nprintf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\u503c:\\n\");\nscanf(\"%d\",&amp;n);\nint num = Fun(n);\nreturn 0;\n}\nint Fun(int n)\n{\nint num = 1;\nif(n = 1)\n{\nnum = 1;\n}\nelse {\nnum = Fun(n- 1) * n; // (1) \n}\nreturn num;\n}\n</code></pre> <ol> <li> \u8fd9\u91cc\u662f\u5faa\u73af\u8c03\u7528\u7684\u5999\u5904\u6240\u5728</li> </ol>"},{"location":"Programing_Language/C/stack/","title":"\u5806\u6808","text":"<p>\u6808\uff08stack\uff09\u53c8\u540d\u5806\u6808\uff0c\u5b83\u662f\u4e00\u79cd\u8fd0\u7b97\u53d7\u9650\u7684\u7ebf\u6027\u8868\uff0c\u9075\u5faa\u5148\u5165\u540e\u51fa\uff08First In, Last Out\uff09\u539f\u5219\u7684\u7ebf\u6027\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u80fd\u4ece\u8868\u7684\u4e00\u7aef\u8bfb\u53d6\u6570\u636e\uff0c\u53e6\u4e00\u7aef\u662f\u5c01\u95ed\u7684</p> <ul> <li>\u6808\u9876(TOP): \u7ebf\u6027\u8868\u5141\u8bb8\u63d2\u5165\u5220\u9664\u7684\u4e00\u7aef</li> <li>\u6808\u5e95(Bottom): \u56fa\u5b9a\u7684\uff0c\u4e0d\u5141\u8bb8\u63d2\u5165\u548c\u5220\u9664\u7684\u4e00\u7aef</li> <li>\u7a7a\u6808: \u4e0d\u542b\u4efb\u4f55\u5143\u7d20\u7684\u7a7a\u8868 </li> </ul> <p>\u4e0b\u65b9\u56fe\u7247\u6765\u6e90\u4e8e\u300ahello \u7b97\u6cd5\u300b\u53ef\u70b9\u51fb\u56fe\u7247\u9605\u8bfb\u6808\u8fd9\u4e00\u8282\u7684\u5185\u5bb9\uff0c\u975e\u5e38\u8be6\u7ec6\u3002</p> <p></p>"},{"location":"Programing_Language/C/stack/#_2","title":"\u987a\u5e8f\u6808","text":"<p>\u987a\u5e8f\u6808\uff1a\u91c7\u7528\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784\u53ef\u4ee5\u6a21\u62df\u6808\u5b58\u50a8\u6570\u636e\u7684\u7279\u70b9\uff0c\u4ece\u800c\u5b9e\u73b0\u6808\u5b58\u50a8\u7ed3\u6784\uff0c\u4f7f\u7528\u6570\u7ec4\u6765\u5b9e\u73b0</p> \u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u6808\u6548\u679c<pre><code>#include &lt;stdio.h&gt;\nstruct STACK {\nint sum[5];\nint top;\n};\nint Menu();\nvoid PUSH(struct STACK *sta);\nvoid PULL(struct STACK *sta);\nint main()\n{\nprintf(\"\u8bf7\u8f93\u5165\u6240\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\\n\");\nstruct STACK sta = {.top = -1};//\u90e8\u5206\u8d4b\u521d\u503c\nwhile(1)\n{\nswitch (Menu())\n{\ncase 1 : PUSH(&amp;sta);break;//\u5730\u5740\u4f20\u9012\ncase 2 : PULL(&amp;sta);break;\ncase 0 : return 0;\n}\n}\n}\nvoid PUSH(struct STACK *sta)\n{\nint i = 0;\nif(sta-&gt;top == 5)\n{\nprintf(\"\u5df2\u5b58\u6ee1\\n\");\nreturn;\n}\nsta-&gt;top++;\nprintf(\"\u8f93\u5165\u60f3\u8981\u5b58\u8fdb\u7684\u6570\u503c\\n\");\nscanf(\"%d\",&amp;sta-&gt;sum[sta-&gt;top]);\nprintf(\"\u5df2\u5b58\u5165\\n\");\n}\n}\nvoid PULL(struct STACK *sta)\n{\nif(sta-&gt;top ==  -1)\n{\nprintf(\"\u5df2\u65e0\u5b58\u50a8\u7684\u503c\\n\");\nreturn;\n}\nprintf(\"\u8f93\u51fa\u7684\u503c\u4e3a:%d\\n\",sta-&gt;sum[sta-&gt;top]);\nsta-&gt;top--;  }\nint Menu()\n{\nint num = 0;\nprintf(\"1.\u8fdb\u6808\\n\");\nprintf(\"2.\u51fa\u6808\\n\");\nprintf(\"0.\u9000\u51fa\\n\");\nscanf(\"%d\",&amp;num);\nreturn num;\n}\n</code></pre>"},{"location":"Programing_Language/C/stack/#_3","title":"\u94fe\u6808","text":"<p>\u94fe\u6808\uff1a\u91c7\u7528\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u5b9e\u73b0\u6808\u7ed3\u6784\uff0c\u4f7f\u7528\u7684\u662f\u94fe\u8868</p> \u4f7f\u7528\u94fe\u8868\u5b9e\u73b0\u6808\u6548\u679c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nstruct STACK {\nint num;\nstruct STACK *front;// (1) \n};\nint Menu();\nvoid PUSH(void);\nvoid PULL();\nstruct STACK *top = NULL;// (2) \nint main()\n{\nprintf(\"\u8bf7\u8f93\u5165\u6240\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\\n\");\nwhile(1)\n{\nswitch (Menu())\n{\ncase 1 : PUSH();break;\ncase 2 : PULL();break;\ncase 0 : return 0;\n}\n}\n}\nvoid PUSH()// (3)\n{\nstruct STACK *new = (struct STACK *)malloc(sizeof(struct STACK));\nprintf(\"\u8bf7\u8f93\u5165\u5b58\u5165\u7684\u503c\\n\");\nscanf(\"%d\",&amp;new-&gt;num);\nnew-&gt;front = top;\ntop = new;\n}\nvoid PULL()\n{\nstruct STACK *del = top;// (4) \nif(top == NULL)\n{\nprintf(\"\u6808\u533a\u4e3a\u7a7a\\n\");\nreturn;\n}\nelse\n{\nprintf(\"PULL=%d\\n\",top-&gt;num);\ntop = top-&gt;front;// (5)\nfree(del);\n}\n}\nint Menu()\n{\nint num = 0;\nprintf(\"1.\u8fdb\u6808\\n\");\nprintf(\"2.\u51fa\u6808\\n\");\nprintf(\"0.\u9000\u51fa\\n\");\nscanf(\"%d\",&amp;num);\nreturn num;\n}\n</code></pre> <ol> <li> \u4fdd\u5b58\u4e0a\u4e00\u4e2aSTACK\u7684\u5730\u5740</li> <li> \u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7684STACK\u7684\u6307\u9488\u7ed3\u6784\u4f53top &lt;--&gt;\u76f8\u5f53\u4e8ehead \u7684\u94fe\u63a5</li> <li> \u8bf7\u9605\u8bfb\u4e0b\u65b9\u7b14\u8bb0</li> <li> \u5b9a\u4e49\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf \u6765\u4fdd\u5b58\u6700\u521d\u7684\u5730\u5740 \u7528\u6765\u91ca\u653e\u8be5\u5730\u5740\u7684\u7a7a\u95f4 </li> <li> \u8f93\u51fa\u6808\u533a\u6700\u4e0a\u65b9\u7684\u6570\u503c\u540e,\u5c06top\u6307\u5411\u7684\u5730\u5740\u66f4\u65b0</li> </ol> PUSH\u8fdb\u6808\u7684\u8be6\u89e3 <p>\u9996\u5148\u7ed9STACK\u7c7b\u578b<code>new</code>\u7533\u8bf7\u4e00\u5757\u5927\u5c0f\u4e3aSTACK\u7684\u7ed3\u6784\u4f53\u7a7a\u95f4\uff0c\u5c06\u5b58\u5165\u503c\u8d4b\u7ed9<code>new-&gt;num</code></p> <p>35\uff0c36\u884c\uff0c\u53ef\u5c06\u94fe\u63a5\u63a8\u52a8\u8d77\u6765\uff0c\u6bcf\u6b21\u90fd\u5c06top\u7684\u5730\u5740\u66f4\u65b0\uff0c\u66f4\u65b0\u540e\u8d4b\u503c\u7ed9\u6700\u65b0\u7684<code>new-&gt;front</code>\uff0c\u5c06top\u7684\u5730\u5740\u8d4b\u7ed9<code>new-&gt;front</code> \u7136\u540e\u5c06new\u7684\u5730\u5740\u8d4b\u7ed9top </p>"},{"location":"Programing_Language/WebDesign/WebIntro/","title":"\u5173\u4e8e\u524d\u7aef","text":"<p>\u7531\u4e8e\u6211\u9700\u8981\u5bf9\u535a\u5ba2\u548c\u4e2a\u4eba\u7f51\u7ad9\u7684\u5efa\u7acb\u548c\u7ef4\u62a4\uff0c\u5728\u5bf9\u5b83\u4eec\u7684\u7f8e\u5316\u8fc7\u7a0b\u4e2d\uff0c\u4fc3\u4f7f\u6211\u4e0d\u5f97\u4e0d\u5b66\u4e60\u548c\u4f7f\u7528\u8bb8\u591a\u524d\u7aef\u7684\u76f8\u5173\u77e5\u8bc6\uff0c\u5728\u6b64\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c \u6211\u4e0d\u4ec5\u559c\u6b22\uff0c\u5e76\u4eab\u53d7\u5bf9\u524d\u7aef\u7f16\u7a0b\u8bed\u8a00\u7684\u70ed\u7231\uff0c\u4ed6\u4eec\u7b80\u5355\u800c\u53c8\u80fd\u6240\u89c1\u5373\u6240\u5f97--&gt;\u5f97\u5230\u89c6\u91ce\u4e0a\u7684\u6210\u679c\uff0c\u65e0\u8bba\u5728\u67e5\u627e\u77e5\u8bc6\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u662f\u5728\u7f16\u8f91\u914d\u7f6e\u4e2d \u6709\u591a\u7e41\u7410\uff0c\u5b66\u4e60\u5b83\u5229\u7528\u5b83\u5f97\u5230\u5b83\u662f\u6211\u5bf9\u524d\u7aef\u6700\u597d\u7684\u89c1\u89e3\u3002</p> <p>\u6240\u4ee5\u6211\u51b3\u5b9a\u5c06\u6bcf\u6b21\u5f97\u5230\u7684\u611f\u609f\u7b14\u8bb0\u8bb0\u5f55\u4e0b\u6765\uff0c\u79ef\u5c11\u6210\u591a\uff0c\u65b9\u4fbf\u4ee5\u540e\u6211\u7684\u67e5\u8be2\u3002</p>"},{"location":"Programing_Language/WebDesign/CssLearn/CssFir/","title":"\u8fd9\u91cc\u8bb0\u5f55\u5b66\u4e60Css","text":""},{"location":"Programing_Language/WebDesign/HtmlLearn/HtmlFir/","title":"\u8fd9\u91cc\u8bb0\u5f55Html","text":""},{"location":"Respect/idea/","title":"Idea","text":"<p>\u8fd9\u91cc\u6682\u65f6\u4e0d\u77e5\u9053\u5199\u4ec0\u4e48\u5185\u5bb9\uff0c\u672a\u6765\u53ef\u80fd\u662f\u5199\u6240\u6709\u5185\u5bb9\u7684\u77ed\u4ecb\u7ecd+\u8d85\u94fe\u63a5\u5b9e\u73b0\u5feb\u901f\u8df3\u8f6c\u5230\u76f8\u5173\u5185\u5bb9\u7684\u5730\u65b9</p>"},{"location":"Tool/MapDepot/","title":"\u4f9d\u8d56\u4e8eGithub\u56fe\u5e8a\u7684\u4e2a\u4eba\u642d\u5efa","text":"<p>\u5bf9\u7684\uff0c\u8fd8\u662f\u90a3\u4e2a<code>Github</code>\uff0c\u6211\u4eec\u4e0d\u4ec5\u4f9d\u8d56\u4e8e<code>Github</code>\u642d\u5efa\u4e86\u6211\u4eec\u7684\u7f51\u7ad9\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5b83\u521b\u5efa\u6211\u4eec\u4e2a\u4eba\u7684\u56fe\u5e8a\uff0c\u5c06\u767d\u5ad6\u8fdb\u884c\u5230\u5e95hh</p> <p>\u501f\u7528<code>PicGo</code>\u5de5\u5177\u53ef\u5feb\u901f\u5b9e\u73b0\u56fe\u7247\u4e0a\u4f20\u5230<code>Github</code>\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u6211\u4eec\u4e00\u5f20\u4e00\u5f20\u7684\u4e0a\u4f20\u5230<code>GitHub</code>\u4e86</p>"},{"location":"Tool/Testool/","title":"\u7279\u6027\u5de5\u5177\u7684\u6d4b\u8bd5","text":""},{"location":"Tool/Testool/#_2","title":"\u601d\u7ef4\u5bfc\u56fe","text":"<p>\u8fd9\u6b3e\u601d\u7ef4\u5bfc\u56fe\u5728github\u662f\u5f00\u6e90\u7684\uff0c\u5e76\u4e14\u62e5\u6709\u7f51\u9875\u7248\u548cVScode\u4e0a\u4e5f\u6709\u63d2\u4ef6\u975e\u5e38\u597d\u7528\uff01\u7231\uff01</p> Markmap"},{"location":"Tool/Testool/#_3","title":"\u89c6\u9891\u63d2\u4ef6","text":""},{"location":"Tool/Testool/#_4","title":"\u97f3\u4e50\u64ad\u653e\u5668","text":""},{"location":"Tool/Testool/#_5","title":"\u6d6e\u7a7a\u97f3\u4e50\u64ad\u653e","text":""}]}